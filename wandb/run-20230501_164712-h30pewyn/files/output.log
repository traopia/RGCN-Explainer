24
start training
masked_hor: tensor(indices=tensor([[  5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          6860,   6874,   6920,   6976,   7731,   7837,   7857,
                          7905,   7933,   7973],
                       [ 83758, 192782, 224697, 255410, 255424, 255470, 255526,
                        256281, 256387, 256407, 256455, 256483, 256523, 328345,
                         22327,  22327,  22327,  22327,  22327,  22327,  22327,
                         22327,  22327,  22327]]),
       values=tensor([0.8258, 0.8068, 0.7790, 0.0597, 0.0768, 0.0656, 0.0729,
                      0.0631, 0.0751, 0.0690, 0.0702, 0.0745, 0.0664, 0.7362,
                      0.5820, 0.7186, 0.7131, 0.7080, 0.7742, 0.6944, 0.6962,
                      0.7275, 0.6815, 0.7494]),
       size=(8285, 753935), nnz=24, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
tensor([0.8258, 0.8068, 0.7790, 0.5968, 0.7678, 0.6556, 0.7286, 0.6311, 0.7508,
        0.6904, 0.7022, 0.7445, 0.6636, 0.7362, 0.5820, 0.7186, 0.7131, 0.7080,
        0.7742, 0.6944, 0.6962, 0.7275, 0.6815, 0.7494],
       grad_fn=<SigmoidBackward0>)
num_high 24
pred_loss tensor(1.2367, grad_fn=<MulBackward0>)
size_loss tensor(0.0036, grad_fn=<VarBackward0>) tensor(-88.3619, grad_fn=<MulBackward0>)
size_num_loss 10.0
loss_reg tensor(1.7124, grad_fn=<MulBackward0>)
  0%|                                                                                                                | 0/10 [00:00<?, ?it/s]/Users/macoftraopia/Documents/GitHub/RGCN-Explainer/RGCN_stuff/r.py:126: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  adj = torch.tensor(adj)
epoch:  0 ; loss:  -75.40921020507812 ; pred:  tensor([0.2633, 0.2760, 0.2903, 0.1704], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          6860,   6874,   6920,   6976,   7731,   7837,   7857,
                          7905,   7933,   7973],
                       [ 83758, 192782, 224697, 255410, 255424, 255470, 255526,
                        256281, 256387, 256407, 256455, 256483, 256523, 328345,
                         22327,  22327,  22327,  22327,  22327,  22327,  22327,
                         22327,  22327,  22327]]),
       values=tensor([0.7420, 0.7169, 0.6814, 0.0709, 0.0667, 0.0758, 0.0620,
                      0.0738, 0.0646, 0.0786, 0.0795, 0.0639, 0.0765, 0.6286,
                      0.6966, 0.6076, 0.6012, 0.7999, 0.6752, 0.7893, 0.7907,
                      0.6182, 0.7792, 0.6446]),
       size=(8285, 753935), nnz=24, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
tensor([0.7420, 0.7169, 0.6814, 0.7093, 0.6673, 0.7583, 0.6195, 0.7382, 0.6463,
        0.7861, 0.7954, 0.6387, 0.7648, 0.6286, 0.6966, 0.6076, 0.6012, 0.7999,
        0.6752, 0.7893, 0.7907, 0.6182, 0.7792, 0.6446],
       grad_fn=<SigmoidBackward0>)
num_high 24
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.0047, grad_fn=<VarBackward0>) tensor(-86.7596, grad_fn=<MulBackward0>)
size_num_loss 10.0
loss_reg tensor(1.6895, grad_fn=<MulBackward0>)
 10%|██████████▍                                                                                             | 1/10 [00:24<03:38, 24.30s/it]
masked_hor: tensor(indices=tensor([[  5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          6860,   6874,   6920,   6976,   7731,   7837,   7857,
                          7905,   7933,   7973],
                       [ 83758, 192782, 224697, 255410, 255424, 255470, 255526,
                        256281, 256387, 256407, 256455, 256483, 256523, 328345,
                         22327,  22327,  22327,  22327,  22327,  22327,  22327,
                         22327,  22327,  22327]]),
       values=tensor([0.6474, 0.6313, 0.6389, 0.0771, 0.0654, 0.0771, 0.0689,
                      0.0777, 0.0677, 0.0746, 0.0741, 0.0684, 0.0765, 0.6870,
                      0.7649, 0.6878, 0.6862, 0.7390, 0.6451, 0.7442, 0.7432,
                      0.6888, 0.7530, 0.6772]),
       size=(8285, 753935), nnz=24, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
tensor([0.6474, 0.6313, 0.6389, 0.7707, 0.6539, 0.7706, 0.6885, 0.7768, 0.6767,
        0.7463, 0.7409, 0.6841, 0.7646, 0.6870, 0.7649, 0.6878, 0.6862, 0.7390,
        0.6451, 0.7442, 0.7432, 0.6888, 0.7530, 0.6772],
       grad_fn=<SigmoidBackward0>)
num_high 24
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.0023, grad_fn=<VarBackward0>) tensor(-90.6400, grad_fn=<MulBackward0>)
size_num_loss 10.0

