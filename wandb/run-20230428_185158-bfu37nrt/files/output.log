24
start training
tensor([[ 0.1214, -0.0644,  0.0171, -0.1028],
        [ 0.1214, -0.0644,  0.0171, -0.1028],
        [ 0.1214, -0.0644,  0.0171, -0.1028],
        ...,
        [ 0.1214, -0.0644,  0.0171, -0.1028],
        [ 0.1214, -0.0644,  0.0171, -0.1028],
        [ 0.1214, -0.0644,  0.0171, -0.1028]], grad_fn=<AddBackward0>)
masked_hor: tensor(indices=tensor([[  5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          6860,   6874,   6920,   6976,   7731,   7837,   7857,
                          7905,   7933,   7973],
                       [ 83758, 192782, 224697, 255410, 255424, 255470, 255526,
                        256281, 256387, 256407, 256455, 256483, 256523, 328345,
                         22327,  22327,  22327,  22327,  22327,  22327,  22327,
                         22327,  22327,  22327]]),
       values=tensor([0.8258, 0.8068, 0.7790, 0.0597, 0.0768, 0.0656, 0.0729,
                      0.0631, 0.0751, 0.0690, 0.0702, 0.0745, 0.0664, 0.7362,
                      0.5820, 0.7186, 0.7131, 0.7080, 0.7742, 0.6944, 0.6962,
                      0.7275, 0.6815, 0.7494]),
       size=(8285, 753935), nnz=24, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
tensor([[ 0.1214, -0.0644,  0.0171, -0.1028],
        [ 0.1214, -0.0644,  0.0171, -0.1028],
        [ 0.1214, -0.0644,  0.0171, -0.1028],
        ...,
        [ 0.1214, -0.0644,  0.0171, -0.1028],
        [ 0.1214, -0.0644,  0.0171, -0.1028],
        [ 0.1214, -0.0644,  0.0171, -0.1028]], grad_fn=<AddBackward0>)
label tensor([2, 2, 0, 2, 2, 1, 0, 2, 0, 3, 3, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 3, 2, 2,
        0, 2, 1, 2, 3, 0, 0, 2, 0, 3, 1], dtype=torch.int32)
/Users/macoftraopia/Documents/GitHub/RGCN-Explainer/RGCN_stuff/r.py:125: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  adj = torch.tensor(adj)
Traceback (most recent call last):
  File "/Users/macoftraopia/Documents/GitHub/RGCN-Explainer/RGCN_stuff/r.py", line 634, in <module>
    main2(name = 'aifb', node_idx = 5757, n_hops = 0,threshold = 0.5, train= True)
  File "/Users/macoftraopia/Documents/GitHub/RGCN-Explainer/RGCN_stuff/r.py", line 500, in main2
    loss = explainer.criterion(epoch,hyperparameter_grid )
  File "/Users/macoftraopia/Documents/GitHub/RGCN-Explainer/RGCN_stuff/r.py", line 326, in criterion
    loss_val = self.loss_fc( pred, self.pred_label, self.new_node_idx, epoch, grid_coeff)
  File "/Users/macoftraopia/Documents/GitHub/RGCN-Explainer/RGCN_stuff/r.py", line 265, in loss_fc
    logit = pred[gt_label_node]
IndexError: tensors used as indices must be long, byte or bool tensors