
node_idx: 5678 belonging to  0
119
start training
masked_hor: tensor(indices=tensor([[  5357,   5357,   5408,   5408,   5413,   5413,   5431,
                          5431,   5450,   5450,   5494,   5494,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5937,   5937,   5937,   5937,   5937,   5939,
                          5939,   5939,   5939,   5939,   5939,   5939,   5939,
                          5939,   5939,   5939,   5939,   5939,   5939,   5939,
                          6881,   6881,   6881,   6887,   6887,   6887,   6888,
                          6888,   6981,   6981,   6997,   6997,   6997,   7045,
                          7045,   7068,   7068,   7100,   7100,   7393,   7393,
                          7393,   7861,   7911,   7911,   7911,   7968,   8010,
                          8010,   8010,   8012,   8012,   8012,   8013,   8013,
                          8013,   8014,   8014,   8014,   8015,   8015,   8015],
                       [ 63934, 154808,  63934, 154808,  63934, 154808,  63932,
                        154808,  63934, 154808,  63932, 154808,  47362,  47364,
                        179663, 263716, 263722, 263723, 263816, 263832, 263880,
                        263903, 263935, 264228, 264696, 264746, 264803, 264845,
                        264847, 264848, 264849, 264850,  82872, 124392, 192770,
                        223730, 237515, 255431, 255437, 255438, 255531, 255547,
                        255595, 255618, 255650, 255943, 256411, 256461, 256518,
                        256560, 256562, 256563, 256564, 256565, 304199, 328345,
                        328346,  38642, 146276, 146339, 179663, 247153,  38642,
                        146202, 146253, 146258, 146295, 179663, 247146, 247152,
                        247262, 248176, 248275, 248277, 248278, 248279, 248280,
                         22248, 113644, 146202,  80243, 113644, 146295,  22248,
                        113642,  22248, 146295,  22248, 113644, 146295,  22248,
                        146295,  22248, 146295,  22248, 146295,  22248, 146202,
                        146295,  22248,  22248, 113644, 146295,  22248,  22248,
                        113644, 146295,  22248, 113644, 146295,  22248, 113644,
                        146295,  22248, 113644, 146295,  22248, 113644, 146295]]),
       values=tensor([0.7773, 0.7672, 0.7534, 0.6742, 0.7480, 0.6985, 0.7300,
                      0.6883, 0.7115, 0.7710, 0.7209, 0.6938, 0.3561, 0.3583,
                      0.7110, 0.0441, 0.0453, 0.0428, 0.0422, 0.0437, 0.0418,
                      0.0446, 0.0442, 0.0454, 0.0448, 0.0449, 0.0439, 0.0449,
                      0.0427, 0.0431, 0.0426, 0.0443, 0.6943, 0.7083, 0.7253,
                      0.7725, 0.7391, 0.0424, 0.0435, 0.0418, 0.0406, 0.0445,
                      0.0417, 0.0421, 0.0410, 0.0460, 0.0411, 0.0423, 0.0416,
                      0.0420, 0.0431, 0.0438, 0.0423, 0.0447, 0.7098, 0.3559,
                      0.3469, 0.7320, 0.3647, 0.3740, 0.7286, 0.7754, 0.6998,
                      0.1912, 0.1916, 0.1881, 0.1959, 0.7442, 0.0822, 0.0807,
                      0.0781, 0.0847, 0.0807, 0.0827, 0.0814, 0.0824, 0.0828,
                      0.7144, 0.6713, 0.7115, 0.7313, 0.7223, 0.6955, 0.7159,
                      0.7445, 0.7442, 0.7591, 0.7324, 0.7496, 0.7186, 0.7035,
                      0.7462, 0.6850, 0.7094, 0.7637, 0.7432, 0.6625, 0.3717,
                      0.3753, 0.7318, 0.7471, 0.7457, 0.7574, 0.7443, 0.7565,
                      0.7127, 0.7561, 0.7225, 0.7440, 0.7408, 0.7160, 0.7414,
                      0.7162, 0.7438, 0.7188, 0.7183, 0.7379, 0.7165, 0.7480]),
       size=(8285, 753935), nnz=119, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.7773, 0.7672, 0.7534, 0.6742, 0.7480, 0.6985, 0.7300, 0.6883, 0.7115,
        0.7710, 0.7209, 0.6938, 0.7121, 0.7166, 0.7110, 0.7500, 0.7708, 0.7270,
        0.7182, 0.7421, 0.7113, 0.7576, 0.7510, 0.7717, 0.7624, 0.7628, 0.7463,
        0.7637, 0.7251, 0.7321, 0.7246, 0.7524, 0.6943, 0.7083, 0.7253, 0.7725,
        0.7391, 0.7201, 0.7388, 0.7109, 0.6896, 0.7557, 0.7081, 0.7155, 0.6974,
        0.7816, 0.6985, 0.7184, 0.7071, 0.7140, 0.7330, 0.7442, 0.7184, 0.7603,
        0.7098, 0.7119, 0.6938, 0.7320, 0.7294, 0.7479, 0.7286, 0.7754, 0.6998,
        0.7648, 0.7663, 0.7523, 0.7837, 0.7442, 0.7398, 0.7260, 0.7033, 0.7624,
        0.7266, 0.7442, 0.7325, 0.7418, 0.7455, 0.7144, 0.6713, 0.7115, 0.7313,
        0.7223, 0.6955, 0.7159, 0.7445, 0.7442, 0.7591, 0.7324, 0.7496, 0.7186,
        0.7035, 0.7462, 0.6850, 0.7094, 0.7637, 0.7432, 0.6625, 0.7433, 0.7506,
        0.7318, 0.7471, 0.7457, 0.7574, 0.7443, 0.7565, 0.7127, 0.7561, 0.7225,
        0.7440, 0.7408, 0.7160, 0.7414, 0.7162, 0.7438, 0.7188, 0.7183, 0.7379,
        0.7165, 0.7480], grad_fn=<IndexBackward0>)
num_high 119 original num_nodes 119
pred_loss tensor(0.5702, grad_fn=<MulBackward0>)
size_loss tensor(8.7027, grad_fn=<AddBackward0>)
size_num_loss 1.0
  0%|          | 0/10 [00:00<?, ?it/s]r.py:127: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  adj = torch.tensor(adj)
epoch:  0 ; loss:  10.272863388061523 ; pred:  tensor([0.5654, 0.1537, 0.1557, 0.1251], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5357,   5357,   5408,   5408,   5413,   5413,   5431,
                          5431,   5450,   5450,   5494,   5494,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5937,   5937,   5937,   5937,   5937,   5939,
                          5939,   5939,   5939,   5939,   5939,   5939,   5939,
                          5939,   5939,   5939,   5939,   5939,   5939,   5939,
                          6881,   6881,   6881,   6887,   6887,   6887,   6888,
                          6888,   6981,   6981,   6997,   6997,   6997,   7045,
                          7045,   7068,   7068,   7100,   7100,   7393,   7393,
                          7393,   7861,   7911,   7911,   7911,   7968,   8010,
                          8010,   8010,   8012,   8012,   8012,   8013,   8013,
                          8013,   8014,   8014,   8014,   8015,   8015,   8015],
                       [ 63934, 154808,  63934, 154808,  63934, 154808,  63932,
                        154808,  63934, 154808,  63932, 154808,  47362,  47364,
                        179663, 263716, 263722, 263723, 263816, 263832, 263880,
                        263903, 263935, 264228, 264696, 264746, 264803, 264845,
                        264847, 264848, 264849, 264850,  82872, 124392, 192770,
                        223730, 237515, 255431, 255437, 255438, 255531, 255547,
                        255595, 255618, 255650, 255943, 256411, 256461, 256518,
                        256560, 256562, 256563, 256564, 256565, 304199, 328345,
                        328346,  38642, 146276, 146339, 179663, 247153,  38642,
                        146202, 146253, 146258, 146295, 179663, 247146, 247152,
                        247262, 248176, 248275, 248277, 248278, 248279, 248280,
                         22248, 113644, 146202,  80243, 113644, 146295,  22248,
                        113642,  22248, 146295,  22248, 113644, 146295,  22248,
                        146295,  22248, 146295,  22248, 146295,  22248, 146202,
                        146295,  22248,  22248, 113644, 146295,  22248,  22248,
                        113644, 146295,  22248, 113644, 146295,  22248, 113644,
                        146295,  22248, 113644, 146295,  22248, 113644, 146295]]),
       values=tensor([0.6791, 0.6666, 0.6495, 0.5565, 0.6429, 0.5842, 0.6211,
                      0.5725, 0.5993, 0.6712, 0.6104, 0.5788, 0.3000, 0.3026,
                      0.5988, 0.0380, 0.0395, 0.0363, 0.0357, 0.0374, 0.0352,
                      0.0385, 0.0380, 0.0395, 0.0389, 0.0389, 0.0377, 0.0390,
                      0.0362, 0.0367, 0.0362, 0.0381, 0.5794, 0.5956, 0.6156,
                      0.6732, 0.6321, 0.0358, 0.0484, 0.0352, 0.0338, 0.0384,
                      0.0350, 0.0355, 0.0343, 0.0403, 0.0344, 0.0357, 0.0350,
                      0.0354, 0.0368, 0.0375, 0.0357, 0.0387, 0.5974, 0.2999,
                      0.2894, 0.6236, 0.3103, 0.3214, 0.6195, 0.6768, 0.7935,
                      0.1659, 0.1663, 0.1620, 0.1718, 0.6383, 0.0703, 0.0685,
                      0.0655, 0.0734, 0.0686, 0.0709, 0.0694, 0.0706, 0.0711,
                      0.6027, 0.5533, 0.5993, 0.6228, 0.6121, 0.5808, 0.6045,
                      0.6387, 0.6383, 0.6565, 0.6240, 0.6448, 0.6077, 0.5900,
                      0.6407, 0.5687, 0.5969, 0.6622, 0.6371, 0.5436, 0.3186,
                      0.3230, 0.6233, 0.6418, 0.6401, 0.6544, 0.6384, 0.6533,
                      0.6008, 0.6528, 0.6123, 0.6381, 0.6342, 0.6046, 0.6349,
                      0.6048, 0.6378, 0.6079, 0.6074, 0.8227, 0.6052, 0.6429]),
       size=(8285, 753935), nnz=119, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.6791, 0.6666, 0.6495, 0.5565, 0.6429, 0.5842, 0.6211, 0.5725, 0.5993,
        0.6712, 0.6104, 0.5788, 0.6000, 0.6053, 0.5988, 0.6454, 0.6710, 0.6176,
        0.6072, 0.6358, 0.5991, 0.6547, 0.6465, 0.6721, 0.6606, 0.6611, 0.6409,
        0.6622, 0.6154, 0.6237, 0.6148, 0.6483, 0.5794, 0.5956, 0.6156, 0.6732,
        0.6321, 0.6094, 0.8234, 0.5986, 0.5740, 0.6523, 0.5953, 0.6040, 0.5829,
        0.6846, 0.5842, 0.6075, 0.5942, 0.6022, 0.6248, 0.6383, 0.6075, 0.6580,
        0.5974, 0.5998, 0.5789, 0.6236, 0.6205, 0.6428, 0.6195, 0.6768, 0.7935,
        0.6636, 0.6654, 0.6482, 0.6873, 0.6383, 0.6330, 0.6164, 0.5898, 0.6605,
        0.6172, 0.6383, 0.6242, 0.6354, 0.6398, 0.6027, 0.5533, 0.5993, 0.6228,
        0.6121, 0.5808, 0.6045, 0.6387, 0.6383, 0.6565, 0.6240, 0.6448, 0.6077,
        0.5900, 0.6407, 0.5687, 0.5969, 0.6622, 0.6371, 0.5436, 0.6372, 0.6460,
        0.6233, 0.6418, 0.6401, 0.6544, 0.6384, 0.6533, 0.6008, 0.6528, 0.6123,
        0.6381, 0.6342, 0.6046, 0.6349, 0.6048, 0.6378, 0.6079, 0.6074, 0.8227,
        0.6052, 0.6429], grad_fn=<IndexBackward0>)
num_high 119 original num_nodes 119
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(7.4648, grad_fn=<AddBackward0>)
size_num_loss 1.0
 10%|#         | 1/10 [00:04<00:38,  4.24s/it]
masked_hor: tensor(indices=tensor([[  5357,   5357,   5408,   5408,   5413,   5413,   5431,
                          5431,   5450,   5450,   5494,   5494,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5937,   5937,   5937,   5937,   5937,   5939,
                          5939,   5939,   5939,   5939,   5939,   5939,   5939,
                          5939,   5939,   5939,   5939,   5939,   5939,   5939,
                          6881,   6881,   6881,   6887,   6887,   6887,   6888,
                          6888,   6981,   6981,   6997,   6997,   6997,   7045,
                          7045,   7068,   7068,   7100,   7100,   7393,   7393,
                          7393,   7861,   7911,   7911,   7911,   7968,   8010,
                          8010,   8010,   8012,   8012,   8012,   8013,   8013,
                          8013,   8014,   8014,   8014,   8015,   8015,   8015],
                       [ 63934, 154808,  63934, 154808,  63934, 154808,  63932,
                        154808,  63934, 154808,  63932, 154808,  47362,  47364,
                        179663, 263716, 263722, 263723, 263816, 263832, 263880,
                        263903, 263935, 264228, 264696, 264746, 264803, 264845,
                        264847, 264848, 264849, 264850,  82872, 124392, 192770,
                        223730, 237515, 255431, 255437, 255438, 255531, 255547,
                        255595, 255618, 255650, 255943, 256411, 256461, 256518,
                        256560, 256562, 256563, 256564, 256565, 304199, 328345,
                        328346,  38642, 146276, 146339, 179663, 247153,  38642,
                        146202, 146253, 146258, 146295, 179663, 247146, 247152,
                        247262, 248176, 248275, 248277, 248278, 248279, 248280,
                         22248, 113644, 146202,  80243, 113644, 146295,  22248,
                        113642,  22248, 146295,  22248, 113644, 146295,  22248,
                        146295,  22248, 146295,  22248, 146295,  22248, 146202,
                        146295,  22248,  22248, 113644, 146295,  22248,  22248,
                        113644, 146295,  22248, 113644, 146295,  22248, 113644,
                        146295,  22248, 113644, 146295,  22248, 113644, 146295]]),
       values=tensor([0.5622, 0.5481, 0.5291, 0.4320, 0.5219, 0.4600, 0.4985,
                      0.4480, 0.4755, 0.5533, 0.4872, 0.4545, 0.2382, 0.2409,
                      0.4750, 0.0309, 0.0325, 0.0291, 0.0285, 0.0302, 0.0280,
                      0.0315, 0.0309, 0.0326, 0.0318, 0.0319, 0.0306, 0.0322,
                      0.0290, 0.0295, 0.0289, 0.0310, 0.4551, 0.4717, 0.4927,
                      0.5555, 0.5103, 0.0286, 0.0473, 0.0279, 0.0264, 0.0313,
                      0.0277, 0.0283, 0.0270, 0.0334, 0.0271, 0.0285, 0.0277,
                      0.0282, 0.0296, 0.0304, 0.0285, 0.0317, 0.4735, 0.2380,
                      0.2273, 0.5011, 0.2489, 0.2609, 0.4968, 0.5595, 0.7396,
                      0.1362, 0.1368, 0.1320, 0.1429, 0.5196, 0.0569, 0.0549,
                      0.0522, 0.0617, 0.0550, 0.0575, 0.0558, 0.0571, 0.0577,
                      0.4793, 0.4289, 0.4756, 0.5003, 0.4891, 0.4572, 0.4817,
                      0.5175, 0.5181, 0.5386, 0.5026, 0.5250, 0.4851, 0.4665,
                      0.5200, 0.4455, 0.4735, 0.5451, 0.5172, 0.4202, 0.2584,
                      0.2633, 0.5012, 0.5210, 0.5191, 0.5347, 0.5174, 0.5337,
                      0.4772, 0.5330, 0.4894, 0.5170, 0.5127, 0.4813, 0.5135,
                      0.4815, 0.5167, 0.4847, 0.4841, 0.8539, 0.4826, 0.5231]),
       size=(8285, 753935), nnz=119, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.5622, 0.5481, 0.5291, 0.5219, 0.5533, 0.5247, 0.5531, 0.5142, 0.5349,
        0.5259, 0.5543, 0.5414, 0.5419, 0.5197, 0.5467, 0.5013, 0.5278, 0.5555,
        0.5103, 0.8037, 0.5322, 0.5684, 0.5025, 0.5170, 0.5385, 0.5011, 0.5219,
        0.5595, 0.7396, 0.5448, 0.5472, 0.5280, 0.5716, 0.5196, 0.5117, 0.5555,
        0.5175, 0.5022, 0.5143, 0.5191, 0.5003, 0.5175, 0.5181, 0.5386, 0.5026,
        0.5250, 0.5200, 0.5451, 0.5172, 0.5168, 0.5267, 0.5012, 0.5210, 0.5191,
        0.5347, 0.5174, 0.5337, 0.5330, 0.5170, 0.5127, 0.5135, 0.5167, 0.8539,
        0.5231], grad_fn=<IndexBackward0>)
num_high 64 original num_nodes 119
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(3.4232, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:33,  4.17s/it]
epoch:  2 ; loss:  3.9610037803649902 ; pred:  tensor([1.0000e+00, 3.3970e-41, 1.1450e-41, 1.4957e-41],
       grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5357,   5357,   5408,   5408,   5413,   5413,   5431,
                          5431,   5450,   5450,   5494,   5494,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5937,   5937,   5937,   5937,   5937,   5939,
                          5939,   5939,   5939,   5939,   5939,   5939,   5939,
                          5939,   5939,   5939,   5939,   5939,   5939,   5939,
                          6881,   6881,   6881,   6887,   6887,   6887,   6888,
                          6888,   6981,   6981,   6997,   6997,   6997,   7045,
                          7045,   7068,   7068,   7100,   7100,   7393,   7393,
                          7393,   7861,   7911,   7911,   7911,   7968,   8010,
                          8010,   8010,   8012,   8012,   8012,   8013,   8013,
                          8013,   8014,   8014,   8014,   8015,   8015,   8015],
                       [ 63934, 154808,  63934, 154808,  63934, 154808,  63932,
                        154808,  63934, 154808,  63932, 154808,  47362,  47364,
                        179663, 263716, 263722, 263723, 263816, 263832, 263880,
                        263903, 263935, 264228, 264696, 264746, 264803, 264845,
                        264847, 264848, 264849, 264850,  82872, 124392, 192770,
                        223730, 237515, 255431, 255437, 255438, 255531, 255547,
                        255595, 255618, 255650, 255943, 256411, 256461, 256518,
                        256560, 256562, 256563, 256564, 256565, 304199, 328345,
                        328346,  38642, 146276, 146339, 179663, 247153,  38642,
                        146202, 146253, 146258, 146295, 179663, 247146, 247152,
                        247262, 248176, 248275, 248277, 248278, 248279, 248280,
                         22248, 113644, 146202,  80243, 113644, 146295,  22248,
                        113642,  22248, 146295,  22248, 113644, 146295,  22248,
                        146295,  22248, 146295,  22248, 146295,  22248, 146202,
                        146295,  22248,  22248, 113644, 146295,  22248,  22248,
                        113644, 146295,  22248, 113644, 146295,  22248, 113644,
                        146295,  22248, 113644, 146295,  22248, 113644, 146295]]),
       values=tensor([0.4376, 0.4236, 0.4051, 0.3406, 0.3982, 0.3665, 0.4031,
                      0.3554, 0.3811, 0.4287, 0.3922, 0.3614, 0.1909, 0.1935,
                      0.3806, 0.0236, 0.0252, 0.0235, 0.0229, 0.0230, 0.0224,
                      0.0242, 0.0236, 0.0253, 0.0245, 0.0246, 0.0233, 0.0250,
                      0.0234, 0.0223, 0.0233, 0.0238, 0.3619, 0.3775, 0.3975,
                      0.4309, 0.3871, 0.0230, 0.0456, 0.0224, 0.0210, 0.0240,
                      0.0222, 0.0227, 0.0215, 0.0261, 0.0216, 0.0229, 0.0221,
                      0.0226, 0.0223, 0.0231, 0.0229, 0.0244, 0.3792, 0.1908,
                      0.1807, 0.3784, 0.2012, 0.1991, 0.4014, 0.4350, 0.6638,
                      0.1051, 0.1058, 0.1011, 0.1118, 0.3979, 0.0432, 0.0444,
                      0.0421, 0.0488, 0.0444, 0.0438, 0.0422, 0.0435, 0.0440,
                      0.3849, 0.3378, 0.3812, 0.3776, 0.3942, 0.3644, 0.3875,
                      0.3940, 0.3954, 0.4156, 0.3805, 0.4018, 0.3908, 0.3730,
                      0.3967, 0.3539, 0.3794, 0.4222, 0.3947, 0.3304, 0.1970,
                      0.2019, 0.3787, 0.3975, 0.3956, 0.4107, 0.3941, 0.4098,
                      0.3829, 0.4090, 0.3945, 0.3936, 0.3895, 0.3868, 0.3902,
                      0.3868, 0.3934, 0.3900, 0.3894, 0.8746, 0.3886, 0.4002]),
       size=(8285, 753935), nnz=119, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.7759, 0.6638, 0.8746], grad_fn=<IndexBackward0>)
num_high 3 original num_nodes 119
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.1201, grad_fn=<AddBackward0>)


 40%|####      | 4/10 [00:16<00:25,  4.20s/it]
masked_hor: tensor(indices=tensor([[  5357,   5357,   5408,   5408,   5413,   5413,   5431,
                          5431,   5450,   5450,   5494,   5494,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5937,   5937,   5937,   5937,   5937,   5939,
                          5939,   5939,   5939,   5939,   5939,   5939,   5939,
                          5939,   5939,   5939,   5939,   5939,   5939,   5939,
                          6881,   6881,   6881,   6887,   6887,   6887,   6888,
                          6888,   6981,   6981,   6997,   6997,   6997,   7045,
                          7045,   7068,   7068,   7100,   7100,   7393,   7393,
                          7393,   7861,   7911,   7911,   7911,   7968,   8010,
                          8010,   8010,   8012,   8012,   8012,   8013,   8013,
                          8013,   8014,   8014,   8014,   8015,   8015,   8015],
                       [ 63934, 154808,  63934, 154808,  63934, 154808,  63932,
                        154808,  63934, 154808,  63932, 154808,  47362,  47364,
                        179663, 263716, 263722, 263723, 263816, 263832, 263880,
                        263903, 263935, 264228, 264696, 264746, 264803, 264845,
                        264847, 264848, 264849, 264850,  82872, 124392, 192770,
                        223730, 237515, 255431, 255437, 255438, 255531, 255547,
                        255595, 255618, 255650, 255943, 256411, 256461, 256518,
                        256560, 256562, 256563, 256564, 256565, 304199, 328345,
                        328346,  38642, 146276, 146339, 179663, 247153,  38642,
                        146202, 146253, 146258, 146295, 179663, 247146, 247152,
                        247262, 248176, 248275, 248277, 248278, 248279, 248280,
                         22248, 113644, 146202,  80243, 113644, 146295,  22248,
                        113642,  22248, 146295,  22248, 113644, 146295,  22248,
                        146295,  22248, 146295,  22248, 146295,  22248, 146202,
                        146295,  22248,  22248, 113644, 146295,  22248,  22248,
                        113644, 146295,  22248, 113644, 146295,  22248, 113644,
                        146295,  22248, 113644, 146295,  22248, 113644, 146295]]),
       values=tensor([0.3405, 0.3278, 0.3112, 0.2734, 0.3051, 0.2964, 0.3298,
                      0.2865, 0.3097, 0.3324, 0.3198, 0.2919, 0.1552, 0.1575,
                      0.3092, 0.0181, 0.0195, 0.0192, 0.0186, 0.0176, 0.0182,
                      0.0186, 0.0181, 0.0196, 0.0189, 0.0190, 0.0178, 0.0194,
                      0.0191, 0.0169, 0.0190, 0.0182, 0.2924, 0.3064, 0.3246,
                      0.3344, 0.2953, 0.0188, 0.0442, 0.0182, 0.0169, 0.0185,
                      0.0180, 0.0185, 0.0174, 0.0204, 0.0174, 0.0187, 0.0180,
                      0.0184, 0.0170, 0.0177, 0.0187, 0.0188, 0.3080, 0.1551,
                      0.1459, 0.2877, 0.1646, 0.1525, 0.3282, 0.3381, 0.5944,
                      0.0812, 0.0819, 0.0777, 0.0874, 0.3062, 0.0330, 0.0364,
                      0.0344, 0.0387, 0.0363, 0.0336, 0.0321, 0.0333, 0.0337,
                      0.3132, 0.2710, 0.3097, 0.2869, 0.3217, 0.2949, 0.3159,
                      0.3015, 0.3032, 0.3215, 0.2901, 0.3088, 0.3189, 0.3027,
                      0.3040, 0.2858, 0.3083, 0.3275, 0.3028, 0.2649, 0.1510,
                      0.1553, 0.2881, 0.3046, 0.3029, 0.3163, 0.3016, 0.3156,
                      0.3114, 0.3148, 0.3220, 0.3011, 0.2975, 0.3149, 0.2982,
                      0.3149, 0.3010, 0.3178, 0.3173, 0.8897, 0.3170, 0.3074]),
       size=(8285, 753935), nnz=119, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.7511, 0.5944, 0.8897], grad_fn=<IndexBackward0>)
num_high 3 original num_nodes 119
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.0052, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.18s/it]
epoch:  4 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5357,   5357,   5408,   5408,   5413,   5413,   5431,
                          5431,   5450,   5450,   5494,   5494,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5937,   5937,   5937,   5937,   5937,   5939,
                          5939,   5939,   5939,   5939,   5939,   5939,   5939,
                          5939,   5939,   5939,   5939,   5939,   5939,   5939,
                          6881,   6881,   6881,   6887,   6887,   6887,   6888,
                          6888,   6981,   6981,   6997,   6997,   6997,   7045,
                          7045,   7068,   7068,   7100,   7100,   7393,   7393,
                          7393,   7861,   7911,   7911,   7911,   7968,   8010,
                          8010,   8010,   8012,   8012,   8012,   8013,   8013,
                          8013,   8014,   8014,   8014,   8015,   8015,   8015],
                       [ 63934, 154808,  63934, 154808,  63934, 154808,  63932,
                        154808,  63934, 154808,  63932, 154808,  47362,  47364,
                        179663, 263716, 263722, 263723, 263816, 263832, 263880,
                        263903, 263935, 264228, 264696, 264746, 264803, 264845,
                        264847, 264848, 264849, 264850,  82872, 124392, 192770,
                        223730, 237515, 255431, 255437, 255438, 255531, 255547,
                        255595, 255618, 255650, 255943, 256411, 256461, 256518,
                        256560, 256562, 256563, 256564, 256565, 304199, 328345,
                        328346,  38642, 146276, 146339, 179663, 247153,  38642,
                        146202, 146253, 146258, 146295, 179663, 247146, 247152,
                        247262, 248176, 248275, 248277, 248278, 248279, 248280,
                         22248, 113644, 146202,  80243, 113644, 146295,  22248,
                        113642,  22248, 146295,  22248, 113644, 146295,  22248,
                        146295,  22248, 146295,  22248, 146295,  22248, 146202,
                        146295,  22248,  22248, 113644, 146295,  22248,  22248,
                        113644, 146295,  22248, 113644, 146295,  22248, 113644,
                        146295,  22248, 113644, 146295,  22248, 113644, 146295]]),
       values=tensor([0.2674, 0.2564, 0.2421, 0.2235, 0.2368, 0.2438, 0.2735,
                      0.2350, 0.2555, 0.2604, 0.2645, 0.2397, 0.1281, 0.1302,
                      0.2551, 0.0140, 0.0153, 0.0159, 0.0154, 0.0136, 0.0150,
                      0.0145, 0.0141, 0.0154, 0.0148, 0.0148, 0.0138, 0.0153,
                      0.0158, 0.0131, 0.0158, 0.0142, 0.2402, 0.2526, 0.2688,
                      0.2621, 0.2285, 0.0155, 0.0429, 0.0150, 0.0139, 0.0144,
                      0.0148, 0.0153, 0.0143, 0.0160, 0.0143, 0.0154, 0.0148,
                      0.0152, 0.0131, 0.0137, 0.0154, 0.0147, 0.2540, 0.1280,
                      0.1199, 0.2221, 0.1365, 0.1184, 0.2721, 0.2653, 0.5325,
                      0.0635, 0.0641, 0.0605, 0.0688, 0.2388, 0.0256, 0.0302,
                      0.0285, 0.0310, 0.0301, 0.0261, 0.0248, 0.0258, 0.0262,
                      0.2588, 0.2214, 0.2556, 0.2215, 0.2664, 0.2427, 0.2613,
                      0.2339, 0.2357, 0.2516, 0.2245, 0.2404, 0.2640, 0.2495,
                      0.2362, 0.2349, 0.2545, 0.2569, 0.2355, 0.2164, 0.1173,
                      0.1211, 0.2226, 0.2366, 0.2351, 0.2465, 0.2341, 0.2460,
                      0.2571, 0.2453, 0.2666, 0.2336, 0.2305, 0.2602, 0.2311,
                      0.2603, 0.2335, 0.2628, 0.2624, 0.9012, 0.2624, 0.2393]),
       size=(8285, 753935), nnz=119, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.7288, 0.5325, 0.9012], grad_fn=<IndexBackward0>)
num_high 3 original num_nodes 119
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(-0.1241, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:25<00:16,  4.16s/it]
masked_hor: tensor(indices=tensor([[  5357,   5357,   5408,   5408,   5413,   5413,   5431,
                          5431,   5450,   5450,   5494,   5494,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5937,   5937,   5937,   5937,   5937,   5939,
                          5939,   5939,   5939,   5939,   5939,   5939,   5939,
                          5939,   5939,   5939,   5939,   5939,   5939,   5939,
                          6881,   6881,   6881,   6887,   6887,   6887,   6888,
                          6888,   6981,   6981,   6997,   6997,   6997,   7045,
                          7045,   7068,   7068,   7100,   7100,   7393,   7393,
                          7393,   7861,   7911,   7911,   7911,   7968,   8010,
                          8010,   8010,   8012,   8012,   8012,   8013,   8013,
                          8013,   8014,   8014,   8014,   8015,   8015,   8015],
                       [ 63934, 154808,  63934, 154808,  63934, 154808,  63932,
                        154808,  63934, 154808,  63932, 154808,  47362,  47364,
                        179663, 263716, 263722, 263723, 263816, 263832, 263880,
                        263903, 263935, 264228, 264696, 264746, 264803, 264845,
                        264847, 264848, 264849, 264850,  82872, 124392, 192770,
                        223730, 237515, 255431, 255437, 255438, 255531, 255547,
                        255595, 255618, 255650, 255943, 256411, 256461, 256518,
                        256560, 256562, 256563, 256564, 256565, 304199, 328345,
                        328346,  38642, 146276, 146339, 179663, 247153,  38642,
                        146202, 146253, 146258, 146295, 179663, 247146, 247152,
                        247262, 248176, 248275, 248277, 248278, 248279, 248280,
                         22248, 113644, 146202,  80243, 113644, 146295,  22248,
                        113642,  22248, 146295,  22248, 113644, 146295,  22248,
                        146295,  22248, 146295,  22248, 146295,  22248, 146202,
                        146295,  22248,  22248, 113644, 146295,  22248,  22248,
                        113644, 146295,  22248, 113644, 146295,  22248, 113644,
                        146295,  22248, 113644, 146295,  22248, 113644, 146295]]),
       values=tensor([0.2130, 0.2036, 0.1915, 0.1860, 0.1871, 0.2037, 0.2301,
                      0.1960, 0.2141, 0.2070, 0.2221, 0.2002, 0.1073, 0.1092,
                      0.2138, 0.0111, 0.0122, 0.0134, 0.0129, 0.0107, 0.0126,
                      0.0115, 0.0111, 0.0122, 0.0117, 0.0117, 0.0109, 0.0122,
                      0.0133, 0.0103, 0.0133, 0.0112, 0.2006, 0.2115, 0.2260,
                      0.2085, 0.1801, 0.0130, 0.0417, 0.0126, 0.0116, 0.0114,
                      0.0124, 0.0128, 0.0119, 0.0128, 0.0120, 0.0129, 0.0124,
                      0.0127, 0.0103, 0.0108, 0.0129, 0.0116, 0.2128, 0.1072,
                      0.1001, 0.1747, 0.1148, 0.0935, 0.2288, 0.2112, 0.4783,
                      0.0504, 0.0510, 0.0479, 0.0550, 0.1895, 0.0202, 0.0254,
                      0.0241, 0.0252, 0.0254, 0.0206, 0.0196, 0.0204, 0.0207,
                      0.2171, 0.1842, 0.2142, 0.1742, 0.2238, 0.2030, 0.2195,
                      0.1847, 0.1865, 0.2000, 0.1770, 0.1904, 0.2219, 0.2090,
                      0.1867, 0.1963, 0.2133, 0.2047, 0.1864, 0.1801, 0.0927,
                      0.0960, 0.1753, 0.1870, 0.1857, 0.1954, 0.1849, 0.1949,
                      0.2156, 0.1943, 0.2241, 0.1845, 0.1819, 0.2184, 0.1823,
                      0.2184, 0.1844, 0.2207, 0.2202, 0.9102, 0.2205, 0.1895]),
       size=(8285, 753935), nnz=119, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.7086, 0.9102], grad_fn=<IndexBackward0>)
num_high 2 original num_nodes 119
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(-0.0414, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:29<00:12,  4.15s/it]
epoch:  6 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5357,   5357,   5408,   5408,   5413,   5413,   5431,
                          5431,   5450,   5450,   5494,   5494,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5937,   5937,   5937,   5937,   5937,   5939,
                          5939,   5939,   5939,   5939,   5939,   5939,   5939,
                          5939,   5939,   5939,   5939,   5939,   5939,   5939,
                          6881,   6881,   6881,   6887,   6887,   6887,   6888,
                          6888,   6981,   6981,   6997,   6997,   6997,   7045,
                          7045,   7068,   7068,   7100,   7100,   7393,   7393,
                          7393,   7861,   7911,   7911,   7911,   7968,   8010,
                          8010,   8010,   8012,   8012,   8012,   8013,   8013,
                          8013,   8014,   8014,   8014,   8015,   8015,   8015],
                       [ 63934, 154808,  63934, 154808,  63934, 154808,  63932,
                        154808,  63934, 154808,  63932, 154808,  47362,  47364,
                        179663, 263716, 263722, 263723, 263816, 263832, 263880,
                        263903, 263935, 264228, 264696, 264746, 264803, 264845,
                        264847, 264848, 264849, 264850,  82872, 124392, 192770,
                        223730, 237515, 255431, 255437, 255438, 255531, 255547,
                        255595, 255618, 255650, 255943, 256411, 256461, 256518,
                        256560, 256562, 256563, 256564, 256565, 304199, 328345,
                        328346,  38642, 146276, 146339, 179663, 247153,  38642,
                        146202, 146253, 146258, 146295, 179663, 247146, 247152,
                        247262, 248176, 248275, 248277, 248278, 248279, 248280,
                         22248, 113644, 146202,  80243, 113644, 146295,  22248,
                        113642,  22248, 146295,  22248, 113644, 146295,  22248,
                        146295,  22248, 146295,  22248, 146295,  22248, 146202,
                        146295,  22248,  22248, 113644, 146295,  22248,  22248,
                        113644, 146295,  22248, 113644, 146295,  22248, 113644,
                        146295,  22248, 113644, 146295,  22248, 113644, 146295]]),
       values=tensor([0.1725, 0.1645, 0.1543, 0.1574, 0.1506, 0.1730, 0.1963,
                      0.1662, 0.1822, 0.1674, 0.1892, 0.1699, 0.0913, 0.0930,
                      0.1818, 0.0089, 0.0098, 0.0114, 0.0110, 0.0086, 0.0107,
                      0.0093, 0.0090, 0.0099, 0.0095, 0.0095, 0.0088, 0.0099,
                      0.0113, 0.0083, 0.0113, 0.0090, 0.1702, 0.1799, 0.1927,
                      0.1687, 0.1447, 0.0111, 0.0406, 0.0107, 0.0098, 0.0092,
                      0.0106, 0.0109, 0.0101, 0.0104, 0.0102, 0.0110, 0.0105,
                      0.0108, 0.0083, 0.0087, 0.0110, 0.0094, 0.1810, 0.0912,
                      0.0849, 0.1402, 0.0980, 0.0753, 0.1952, 0.1710, 0.4313,
                      0.0407, 0.0412, 0.0386, 0.0446, 0.1531, 0.0162, 0.0217,
                      0.0206, 0.0207, 0.0216, 0.0166, 0.0157, 0.0164, 0.0167,
                      0.1848, 0.1558, 0.1822, 0.1398, 0.1908, 0.1725, 0.1871,
                      0.1486, 0.1503, 0.1619, 0.1423, 0.1536, 0.1893, 0.1778,
                      0.1504, 0.1667, 0.1815, 0.1659, 0.1504, 0.1524, 0.0747,
                      0.0775, 0.1407, 0.1505, 0.1495, 0.1576, 0.1488, 0.1572,
                      0.1835, 0.1567, 0.1910, 0.1484, 0.1462, 0.1860, 0.1466,
                      0.1859, 0.1484, 0.1880, 0.1876, 0.9175, 0.1881, 0.1529]),
       size=(8285, 753935), nnz=119, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.6902, 0.9175], grad_fn=<IndexBackward0>)
num_high 2 original num_nodes 119
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(-0.0975, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:33<00:08,  4.14s/it]
masked_hor: tensor(indices=tensor([[  5357,   5357,   5408,   5408,   5413,   5413,   5431,
                          5431,   5450,   5450,   5494,   5494,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5937,   5937,   5937,   5937,   5937,   5939,
                          5939,   5939,   5939,   5939,   5939,   5939,   5939,
                          5939,   5939,   5939,   5939,   5939,   5939,   5939,
                          6881,   6881,   6881,   6887,   6887,   6887,   6888,
                          6888,   6981,   6981,   6997,   6997,   6997,   7045,
                          7045,   7068,   7068,   7100,   7100,   7393,   7393,
                          7393,   7861,   7911,   7911,   7911,   7968,   8010,
                          8010,   8010,   8012,   8012,   8012,   8013,   8013,
                          8013,   8014,   8014,   8014,   8015,   8015,   8015],
                       [ 63934, 154808,  63934, 154808,  63934, 154808,  63932,
                        154808,  63934, 154808,  63932, 154808,  47362,  47364,
                        179663, 263716, 263722, 263723, 263816, 263832, 263880,
                        263903, 263935, 264228, 264696, 264746, 264803, 264845,
                        264847, 264848, 264849, 264850,  82872, 124392, 192770,
                        223730, 237515, 255431, 255437, 255438, 255531, 255547,
                        255595, 255618, 255650, 255943, 256411, 256461, 256518,
                        256560, 256562, 256563, 256564, 256565, 304199, 328345,
                        328346,  38642, 146276, 146339, 179663, 247153,  38642,
                        146202, 146253, 146258, 146295, 179663, 247146, 247152,
                        247262, 248176, 248275, 248277, 248278, 248279, 248280,
                         22248, 113644, 146202,  80243, 113644, 146295,  22248,
                        113642,  22248, 146295,  22248, 113644, 146295,  22248,
                        146295,  22248, 146295,  22248, 146295,  22248, 146202,
                        146295,  22248,  22248, 113644, 146295,  22248,  22248,
                        113644, 146295,  22248, 113644, 146295,  22248, 113644,
                        146295,  22248, 113644, 146295,  22248, 113644, 146295]]),
       values=tensor([0.1421, 0.1353, 0.1266, 0.1352, 0.1235, 0.1490, 0.1698,
                      0.1430, 0.1572, 0.1378, 0.1635, 0.1462, 0.0788, 0.0803,
                      0.1569, 0.0073, 0.0081, 0.0099, 0.0095, 0.0071, 0.0092,
                      0.0076, 0.0074, 0.0081, 0.0078, 0.0078, 0.0072, 0.0082,
                      0.0098, 0.0068, 0.0098, 0.0074, 0.1465, 0.1551, 0.1665,
                      0.1388, 0.1185, 0.0096, 0.0396, 0.0092, 0.0085, 0.0075,
                      0.0091, 0.0094, 0.0087, 0.0085, 0.0088, 0.0095, 0.0091,
                      0.0093, 0.0068, 0.0071, 0.0095, 0.0077, 0.1561, 0.0787,
                      0.0731, 0.1147, 0.0847, 0.0617, 0.1688, 0.1408, 0.3909,
                      0.0335, 0.0339, 0.0317, 0.0368, 0.1260, 0.0133, 0.0188,
                      0.0179, 0.0174, 0.0187, 0.0136, 0.0129, 0.0134, 0.0137,
                      0.1596, 0.1339, 0.1572, 0.1143, 0.1649, 0.1487, 0.1617,
                      0.1218, 0.1234, 0.1333, 0.1166, 0.1261, 0.1636, 0.1534,
                      0.1233, 0.1437, 0.1567, 0.1367, 0.1235, 0.1310, 0.0613,
                      0.0637, 0.1152, 0.1235, 0.1225, 0.1294, 0.1220, 0.1292,
                      0.1584, 0.1287, 0.1651, 0.1217, 0.1198, 0.1606, 0.1201,
                      0.1606, 0.1216, 0.1624, 0.1620, 0.9234, 0.1626, 0.1256]),
       size=(8285, 753935), nnz=119, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.6735, 0.9234], grad_fn=<IndexBackward0>)
num_high 2 original num_nodes 119
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(-0.1527, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.14s/it]
epoch:  8 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5357,   5357,   5408,   5408,   5413,   5413,   5431,
                          5431,   5450,   5450,   5494,   5494,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5678,   5678,   5678,   5678,   5678,   5678,
                          5678,   5937,   5937,   5937,   5937,   5937,   5939,
                          5939,   5939,   5939,   5939,   5939,   5939,   5939,
                          5939,   5939,   5939,   5939,   5939,   5939,   5939,
                          6881,   6881,   6881,   6887,   6887,   6887,   6888,
                          6888,   6981,   6981,   6997,   6997,   6997,   7045,
                          7045,   7068,   7068,   7100,   7100,   7393,   7393,
                          7393,   7861,   7911,   7911,   7911,   7968,   8010,
                          8010,   8010,   8012,   8012,   8012,   8013,   8013,
                          8013,   8014,   8014,   8014,   8015,   8015,   8015],
                       [ 63934, 154808,  63934, 154808,  63934, 154808,  63932,
                        154808,  63934, 154808,  63932, 154808,  47362,  47364,
                        179663, 263716, 263722, 263723, 263816, 263832, 263880,
                        263903, 263935, 264228, 264696, 264746, 264803, 264845,
                        264847, 264848, 264849, 264850,  82872, 124392, 192770,
                        223730, 237515, 255431, 255437, 255438, 255531, 255547,
                        255595, 255618, 255650, 255943, 256411, 256461, 256518,
                        256560, 256562, 256563, 256564, 256565, 304199, 328345,
                        328346,  38642, 146276, 146339, 179663, 247153,  38642,
                        146202, 146253, 146258, 146295, 179663, 247146, 247152,
                        247262, 248176, 248275, 248277, 248278, 248279, 248280,
                         22248, 113644, 146202,  80243, 113644, 146295,  22248,
                        113642,  22248, 146295,  22248, 113644, 146295,  22248,
                        146295,  22248, 146295,  22248, 146295,  22248, 146202,
                        146295,  22248,  22248, 113644, 146295,  22248,  22248,
                        113644, 146295,  22248, 113644, 146295,  22248, 113644,
                        146295,  22248, 113644, 146295,  22248, 113644, 146295]]),
       values=tensor([0.1190, 0.1131, 0.1057, 0.1178, 0.1030, 0.1301, 0.1487,
                      0.1247, 0.1374, 0.1152, 0.1430, 0.1276, 0.0689, 0.0702,
                      0.1371, 0.0061, 0.0068, 0.0086, 0.0083, 0.0059, 0.0081,
                      0.0063, 0.0061, 0.0068, 0.0065, 0.0065, 0.0060, 0.0069,
                      0.0086, 0.0056, 0.0085, 0.0062, 0.1279, 0.1355, 0.1458,
                      0.1161, 0.0988, 0.0084, 0.0387, 0.0081, 0.0074, 0.0063,
                      0.0080, 0.0082, 0.0076, 0.0072, 0.0077, 0.0083, 0.0079,
                      0.0082, 0.0056, 0.0060, 0.0083, 0.0064, 0.1364, 0.0688,
                      0.0638, 0.0955, 0.0742, 0.0515, 0.1478, 0.1178, 0.3562,
                      0.0280, 0.0284, 0.0264, 0.0308, 0.1055, 0.0111, 0.0165,
                      0.0157, 0.0147, 0.0164, 0.0113, 0.0107, 0.0112, 0.0114,
                      0.1396, 0.1166, 0.1374, 0.0952, 0.1443, 0.1299, 0.1415,
                      0.1016, 0.1031, 0.1116, 0.0973, 0.1054, 0.1433, 0.1341,
                      0.1030, 0.1255, 0.1370, 0.1146, 0.1032, 0.1142, 0.0512,
                      0.0533, 0.0960, 0.1030, 0.1022, 0.1081, 0.1018, 0.1079,
                      0.1385, 0.1075, 0.1445, 0.1015, 0.0999, 0.1405, 0.1002,
                      0.1404, 0.1015, 0.1421, 0.1418, 0.9284, 0.1424, 0.1049]),
       size=(8285, 753935), nnz=119, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.6583, 0.9284], grad_fn=<IndexBackward0>)
num_high 2 original num_nodes 119
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(-0.2062, grad_fn=<AddBackward0>)
size_num_loss 0.01680672268907563
train modality

100%|##########| 10/10 [00:41<00:00,  4.16s/it]
7
start training
masked_hor: tensor(indices=tensor([[  5724,   5724,   5724,   5724,   5724,   5724,   7327],
                       [ 82850, 127437, 195107, 223695, 255877, 328345,  22294]]),
       values=tensor([0.7649, 0.7444, 0.7550, 0.7546, 0.5986, 0.7110, 0.8985]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.7649, 0.7444, 0.7550, 0.7546, 0.5986, 0.7110, 0.8985],
       grad_fn=<IndexBackward0>)
num_high 7 original num_nodes 7
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.4449, grad_fn=<AddBackward0>)
size_num_loss 1.0
  0%|          | 0/10 [00:00<?, ?it/s]
epoch:  0 ; loss:  1.4448738098144531 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5724,   5724,   5724,   5724,   5724,   5724,   7327],
                       [ 82850, 127437, 195107, 223695, 255877, 328345,  22294]]),
       values=tensor([0.6637, 0.6385, 0.6514, 0.6509, 0.4750, 0.5988, 0.9359]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.6637, 0.6385, 0.6514, 0.6509, 0.5988, 0.9359],
       grad_fn=<IndexBackward0>)
num_high 6 original num_nodes 7
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.2637, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:36,  4.11s/it]
masked_hor: tensor(indices=tensor([[  5724,   5724,   5724,   5724,   5724,   5724,   7327],
                       [ 82850, 127437, 195107, 223695, 255877, 328345,  22294]]),
       values=tensor([0.5649, 0.5295, 0.5466, 0.5459, 0.3929, 0.4825, 0.9600]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.5649, 0.5295, 0.5466, 0.5459, 0.9600], grad_fn=<IndexBackward0>)
num_high 5 original num_nodes 7
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(-0.0284, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:32,  4.11s/it]
epoch:  2 ; loss:  0.6858875155448914 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5724,   5724,   5724,   5724,   5724,   5724,   7327],
                       [ 82850, 127437, 195107, 223695, 255877, 328345,  22294]]),
       values=tensor([0.4595, 0.4201, 0.4390, 0.4382, 0.3331, 0.3933, 0.9753]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9753], grad_fn=<IndexBackward0>)
num_high 1 original num_nodes 7
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:28,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5724,   5724,   5724,   5724,   5724,   5724,   7327],
                       [ 82850, 127437, 195107, 223695, 255877, 328345,  22294]]),
       values=tensor([0.3754, 0.3356, 0.3545, 0.3537, 0.2877, 0.3249, 0.9834]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9834], grad_fn=<IndexBackward0>)
num_high 1 original num_nodes 7
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.12s/it]
epoch:  4 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5724,   5724,   5724,   5724,   5724,   5724,   7327],
                       [ 82850, 127437, 195107, 223695, 255877, 328345,  22294]]),
       values=tensor([0.3095, 0.2713, 0.2893, 0.2885, 0.2524, 0.2723, 0.9882]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9882], grad_fn=<IndexBackward0>)
num_high 1 original num_nodes 7
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)


 60%|######    | 6/10 [00:24<00:16,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5724,   5724,   5724,   5724,   5724,   5724,   7327],
                       [ 82850, 127437, 195107, 223695, 255877, 328345,  22294]]),
       values=tensor([0.2583, 0.2226, 0.2392, 0.2385, 0.2244, 0.2315, 0.9912]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9912], grad_fn=<IndexBackward0>)
num_high 1 original num_nodes 7
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:28<00:12,  4.13s/it]
epoch:  6 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5724,   5724,   5724,   5724,   5724,   5724,   7327],
                       [ 82850, 127437, 195107, 223695, 255877, 328345,  22294]]),
       values=tensor([0.2183, 0.1854, 0.2006, 0.2000, 0.2018, 0.1995, 0.9932]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9932], grad_fn=<IndexBackward0>)
num_high 1 original num_nodes 7
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:32<00:08,  4.13s/it]
masked_hor: tensor(indices=tensor([[  5724,   5724,   5724,   5724,   5724,   5724,   7327],
                       [ 82850, 127437, 195107, 223695, 255877, 328345,  22294]]),
       values=tensor([0.1869, 0.1568, 0.1707, 0.1701, 0.1833, 0.1742, 0.9946]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9946], grad_fn=<IndexBackward0>)
num_high 1 original num_nodes 7
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.16s/it]
epoch:  8 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5724,   5724,   5724,   5724,   5724,   5724,   7327],
                       [ 82850, 127437, 195107, 223695, 255877, 328345,  22294]]),
       values=tensor([0.1621, 0.1345, 0.1471, 0.1466, 0.1680, 0.1538, 0.9956]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9956], grad_fn=<IndexBackward0>)
num_high 1 original num_nodes 7
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

100%|##########| 10/10 [00:41<00:00,  4.13s/it]
train modality
node_idx: 5699 belonging to  0
5
start training
masked_hor: tensor(indices=tensor([[  5699,   5699,   5699,   5699,   5699],
                       [ 82850, 127437, 193708, 223695, 328345]]),
       values=tensor([0.7708, 0.7468, 0.7592, 0.7587, 0.5720]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.7708, 0.7468, 0.7592, 0.7587, 0.5720], grad_fn=<IndexBackward0>)
num_high 5 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.2901, grad_fn=<AddBackward0>)
size_num_loss 1.0
  0%|          | 0/10 [00:00<?, ?it/s]
epoch:  0 ; loss:  1.290145754814148 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5699,   5699,   5699,   5699,   5699],
                       [ 82850, 127437, 193708, 223695, 328345]]),
       values=tensor([0.8472, 0.8294, 0.8387, 0.8383, 0.4477]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8472, 0.8294, 0.8387, 0.8383], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.3348, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.13s/it]
masked_hor: tensor(indices=tensor([[  5699,   5699,   5699,   5699,   5699],
                       [ 82850, 127437, 193708, 223695, 328345]]),
       values=tensor([0.8772, 0.7842, 0.8417, 0.8396, 0.3670]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8772, 0.7842, 0.8417, 0.8396], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.3195, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:33,  4.14s/it]
epoch:  2 ; loss:  1.119518518447876 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5699,   5699,   5699,   5699,   5699],
                       [ 82850, 127437, 193708, 223695, 328345]]),
       values=tensor([0.9098, 0.7148, 0.8283, 0.8213, 0.3091]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9098, 0.7148, 0.8283, 0.8213], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.2634, grad_fn=<AddBackward0>)


 40%|####      | 4/10 [00:16<00:24,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5699,   5699,   5699,   5699,   5699],
                       [ 82850, 127437, 193708, 223695, 328345]]),
       values=tensor([0.9379, 0.6281, 0.8072, 0.7853, 0.2657]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9379, 0.6281, 0.8072, 0.7853], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.1546, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.13s/it]
epoch:  4 ; loss:  0.9545696973800659 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5699,   5699,   5699,   5699,   5699],
                       [ 82850, 127437, 193708, 223695, 328345]]),
       values=tensor([0.9589, 0.5284, 0.7932, 0.7258, 0.2323]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9589, 0.5284, 0.7932, 0.7258], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(-0.0167, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.13s/it]
masked_hor: tensor(indices=tensor([[  5699,   5699,   5699,   5699,   5699],
                       [ 82850, 127437, 193708, 223695, 328345]]),
       values=tensor([0.9735, 0.4223, 0.8180, 0.6467, 0.2058]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9735, 0.8180, 0.6467], grad_fn=<IndexBackward0>)
num_high 3 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(-0.0235, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:28<00:12,  4.12s/it]
epoch:  6 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5699,   5699,   5699,   5699,   5699],
                       [ 82850, 127437, 193708, 223695, 328345]]),
       values=tensor([0.9821, 0.3349, 0.8376, 0.5700, 0.1847]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9821, 0.8376, 0.5700], grad_fn=<IndexBackward0>)
num_high 3 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(-0.1981, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:32<00:08,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5699,   5699,   5699,   5699,   5699],
                       [ 82850, 127437, 193708, 223695, 328345]]),
       values=tensor([0.9873, 0.2661, 0.8535, 0.4995, 0.1674]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9873, 0.8535], grad_fn=<IndexBackward0>)
num_high 2 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.0946, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.12s/it]
epoch:  8 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5699,   5699,   5699,   5699,   5699],
                       [ 82850, 127437, 193708, 223695, 328345]]),
       values=tensor([0.9907, 0.2131, 0.8665, 0.4368, 0.1532]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9907, 0.8665], grad_fn=<IndexBackward0>)
num_high 2 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.1086, grad_fn=<AddBackward0>)
size_num_loss 0.4
train modality
100%|##########| 10/10 [00:41<00:00,  4.13s/it]
  0%|          | 0/10 [00:00<?, ?it/s]
4
start training
masked_hor: tensor(indices=tensor([[  5688,   5688,   5688,   5688],
                       [ 82850, 192134, 223695, 328345]]),
       values=tensor([0.7752, 0.7486, 0.7624, 0.7619]),
       size=(8285, 753935), nnz=4, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.7752, 0.7486, 0.7624, 0.7619], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 4
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.3036, grad_fn=<AddBackward0>)
size_num_loss 1.0
epoch:  0 ; loss:  1.3036214113235474 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5688,   5688,   5688,   5688],
                       [ 82850, 192134, 223695, 328345]]),
       values=tensor([0.6766, 0.6436, 0.6606, 0.6599]),
       size=(8285, 753935), nnz=4, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.6766, 0.6436, 0.6606, 0.6599], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 4
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.2623, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5688,   5688,   5688,   5688],
                       [ 82850, 192134, 223695, 328345]]),
       values=tensor([0.6820, 0.5232, 0.5414, 0.5407]),
       size=(8285, 753935), nnz=4, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.6820, 0.5232, 0.5414, 0.5407], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 4
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.1740, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:32,  4.11s/it]
epoch:  2 ; loss:  1.1740443706512451 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5688,   5688,   5688,   5688],
                       [ 82850, 192134, 223695, 328345]]),
       values=tensor([0.7470, 0.4073, 0.4333, 0.4320]),
       size=(8285, 753935), nnz=4, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.7470], grad_fn=<IndexBackward0>)
num_high 1 original num_nodes 4
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:28,  4.11s/it]
masked_hor: tensor(indices=tensor([[  5688,   5688,   5688,   5688],
                       [ 82850, 192134, 223695, 328345]]),
       values=tensor([0.7932, 0.3190, 0.3488, 0.3473]),
       size=(8285, 753935), nnz=4, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.7932], grad_fn=<IndexBackward0>)
num_high 1 original num_nodes 4
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.10s/it]
epoch:  4 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5688,   5688,   5688,   5688],
                       [ 82850, 192134, 223695, 328345]]),
       values=tensor([0.8272, 0.2531, 0.2839, 0.2823]),
       size=(8285, 753935), nnz=4, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8272], grad_fn=<IndexBackward0>)
num_high 1 original num_nodes 4
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.11s/it]
masked_hor: tensor(indices=tensor([[  5688,   5688,   5688,   5688],
                       [ 82850, 192134, 223695, 328345]]),
       values=tensor([0.8528, 0.2040, 0.2343, 0.2326]),
       size=(8285, 753935), nnz=4, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8528], grad_fn=<IndexBackward0>)
num_high 1 original num_nodes 4
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.14s/it]
epoch:  6 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5688,   5688,   5688,   5688],
                       [ 82850, 192134, 223695, 328345]]),
       values=tensor([0.8725, 0.1673, 0.1961, 0.1945]),
       size=(8285, 753935), nnz=4, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8725], grad_fn=<IndexBackward0>)
num_high 1 original num_nodes 4
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:28<00:12,  4.13s/it]
masked_hor: tensor(indices=tensor([[  5688,   5688,   5688,   5688],
                       [ 82850, 192134, 223695, 328345]]),
       values=tensor([0.8880, 0.1394, 0.1666, 0.1650]),
       size=(8285, 753935), nnz=4, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8880], grad_fn=<IndexBackward0>)
num_high 1 original num_nodes 4
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:32<00:08,  4.13s/it]
epoch:  8 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5688,   5688,   5688,   5688],
                       [ 82850, 192134, 223695, 328345]]),
       values=tensor([0.9003, 0.1181, 0.1434, 0.1419]),
       size=(8285, 753935), nnz=4, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9003], grad_fn=<IndexBackward0>)
num_high 1 original num_nodes 4
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.12s/it]
train modality

100%|##########| 10/10 [00:41<00:00,  4.13s/it]
  0%|          | 0/10 [00:00<?, ?it/s]
6
start training
masked_hor: tensor(indices=tensor([[  5702,   5702,   5702,   5702,   5702,   7996],
                       [ 82850, 194021, 223695, 256546, 328345,  22272]]),
       values=tensor([0.7675, 0.7454, 0.7568, 0.7564, 0.5870, 0.7094]),
       size=(8285, 753935), nnz=6, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.7675, 0.7454, 0.7568, 0.7564, 0.5870, 0.7094],
       grad_fn=<IndexBackward0>)
num_high 6 original num_nodes 6
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.3855, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.13s/it]
epoch:  0 ; loss:  1.3855054378509521 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5702,   5702,   5702,   5702,   5702,   7996],
                       [ 82850, 194021, 223695, 256546, 328345,  22272]]),
       values=tensor([0.8448, 0.6401, 0.8369, 0.8366, 0.4630, 0.5969]),
       size=(8285, 753935), nnz=6, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8448, 0.6401, 0.8369, 0.8366, 0.5969], grad_fn=<IndexBackward0>)
num_high 5 original num_nodes 6
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.2266, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:32,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5702,   5702,   5702,   5702,   5702,   7996],
                       [ 82850, 194021, 223695, 256546, 328345,  22272]]),
       values=tensor([0.8959, 0.5507, 0.8872, 0.8868, 0.3815, 0.4943]),
       size=(8285, 753935), nnz=6, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8959, 0.5507, 0.8872, 0.8868], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 6
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.0341, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:28,  4.11s/it]
epoch:  2 ; loss:  0.7008155584335327 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5702,   5702,   5702,   5702,   5702,   7996],
                       [ 82850, 194021, 223695, 256546, 328345,  22272]]),
       values=tensor([0.9327, 0.4523, 0.9257, 0.9253, 0.3225, 0.4148]),
       size=(8285, 753935), nnz=6, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9327, 0.9257, 0.9253], grad_fn=<IndexBackward0>)
num_high 3 original num_nodes 6
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.2782, grad_fn=<AddBackward0>)
size_num_loss 0.5
masked_hor: tensor(indices=tensor([[  5702,   5702,   5702,   5702,   5702,   7996],
                       [ 82850, 194021, 223695, 256546, 328345,  22272]]),
       values=tensor([0.9534, 0.3741, 0.9478, 0.9475, 0.2780, 0.3527]),
       size=(8285, 753935), nnz=6, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9534, 0.9478, 0.9475], grad_fn=<IndexBackward0>)
num_high 3 original num_nodes 6
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.2848, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.11s/it]
epoch:  4 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5702,   5702,   5702,   5702,   5702,   7996],
                       [ 82850, 194021, 223695, 256546, 328345,  22272]]),
       values=tensor([0.9661, 0.3125, 0.9614, 0.9612, 0.2435, 0.3038]),
       size=(8285, 753935), nnz=6, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9661, 0.9614, 0.9612], grad_fn=<IndexBackward0>)
num_high 3 original num_nodes 6
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.2888, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.11s/it]
masked_hor: tensor(indices=tensor([[  5702,   5702,   5702,   5702,   5702,   7996],
                       [ 82850, 194021, 223695, 256546, 328345,  22272]]),
       values=tensor([0.9742, 0.2643, 0.9704, 0.9702, 0.2161, 0.2648]),
       size=(8285, 753935), nnz=6, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9742, 0.9704, 0.9702], grad_fn=<IndexBackward0>)
num_high 3 original num_nodes 6
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.2914, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.13s/it]
epoch:  6 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5702,   5702,   5702,   5702,   5702,   7996],
                       [ 82850, 194021, 223695, 256546, 328345,  22272]]),
       values=tensor([0.9798, 0.2262, 0.9766, 0.9764, 0.1942, 0.2335]),
       size=(8285, 753935), nnz=6, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9798, 0.9766, 0.9764], grad_fn=<IndexBackward0>)
num_high 3 original num_nodes 6
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.2932, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:28<00:12,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5702,   5702,   5702,   5702,   5702,   7996],
                       [ 82850, 194021, 223695, 256546, 328345,  22272]]),
       values=tensor([0.9837, 0.1961, 0.9809, 0.9808, 0.1762, 0.2082]),
       size=(8285, 753935), nnz=6, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9837, 0.9809, 0.9808], grad_fn=<IndexBackward0>)
num_high 3 original num_nodes 6
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.2945, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:32<00:08,  4.12s/it]
epoch:  8 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5702,   5702,   5702,   5702,   5702,   7996],
                       [ 82850, 194021, 223695, 256546, 328345,  22272]]),
       values=tensor([0.9865, 0.1719, 0.9841, 0.9840, 0.1614, 0.1874]),
       size=(8285, 753935), nnz=6, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9865, 0.9841, 0.9840], grad_fn=<IndexBackward0>)
num_high 3 original num_nodes 6
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.2955, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.12s/it]
train modality

100%|##########| 10/10 [00:41<00:00,  4.12s/it]
4
start training
masked_hor: tensor(indices=tensor([[  5714,   5714,   5714,   5714],
                       [ 82850, 195115, 223695, 328345]]),
       values=tensor([0.7752, 0.7486, 0.7624, 0.7619]),
       size=(8285, 753935), nnz=4, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.7752, 0.7486, 0.7624, 0.7619], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 4
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.3036, grad_fn=<AddBackward0>)
size_num_loss 1.0
  0%|          | 0/10 [00:00<?, ?it/s]
epoch:  0 ; loss:  1.3036214113235474 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5714,   5714,   5714,   5714],
                       [ 82850, 195115, 223695, 328345]]),
       values=tensor([0.6766, 0.6436, 0.6606, 0.6599]),
       size=(8285, 753935), nnz=4, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.6766, 0.6436, 0.6606, 0.6599], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 4
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.2623, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5714,   5714,   5714,   5714],
                       [ 82850, 195115, 223695, 328345]]),
       values=tensor([0.6820, 0.5232, 0.5414, 0.5407]),
       size=(8285, 753935), nnz=4, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.6820, 0.5232, 0.5414, 0.5407], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 4
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.1740, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:32,  4.11s/it]
epoch:  2 ; loss:  1.1740443706512451 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5714,   5714,   5714,   5714],
                       [ 82850, 195115, 223695, 328345]]),
       values=tensor([0.7470, 0.4073, 0.4333, 0.4320]),
       size=(8285, 753935), nnz=4, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.7470], grad_fn=<IndexBackward0>)
num_high 1 original num_nodes 4
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:28,  4.13s/it]
masked_hor: tensor(indices=tensor([[  5714,   5714,   5714,   5714],
                       [ 82850, 195115, 223695, 328345]]),
       values=tensor([0.7932, 0.3190, 0.3488, 0.3473]),
       size=(8285, 753935), nnz=4, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.7932], grad_fn=<IndexBackward0>)
num_high 1 original num_nodes 4
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.12s/it]
epoch:  4 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5714,   5714,   5714,   5714],
                       [ 82850, 195115, 223695, 328345]]),
       values=tensor([0.8272, 0.2531, 0.2839, 0.2823]),
       size=(8285, 753935), nnz=4, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8272], grad_fn=<IndexBackward0>)
num_high 1 original num_nodes 4
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5714,   5714,   5714,   5714],
                       [ 82850, 195115, 223695, 328345]]),
       values=tensor([0.8528, 0.2040, 0.2343, 0.2326]),
       size=(8285, 753935), nnz=4, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8528], grad_fn=<IndexBackward0>)
num_high 1 original num_nodes 4
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.12s/it]
epoch:  6 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5714,   5714,   5714,   5714],
                       [ 82850, 195115, 223695, 328345]]),
       values=tensor([0.8725, 0.1673, 0.1961, 0.1945]),
       size=(8285, 753935), nnz=4, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8725], grad_fn=<IndexBackward0>)
num_high 1 original num_nodes 4
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)


 80%|########  | 8/10 [00:32<00:08,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5714,   5714,   5714,   5714],
                       [ 82850, 195115, 223695, 328345]]),
       values=tensor([0.8880, 0.1394, 0.1666, 0.1650]),
       size=(8285, 753935), nnz=4, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8880], grad_fn=<IndexBackward0>)
num_high 1 original num_nodes 4
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.17s/it]
epoch:  8 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5714,   5714,   5714,   5714],
                       [ 82850, 195115, 223695, 328345]]),
       values=tensor([0.9003, 0.1181, 0.1434, 0.1419]),
       size=(8285, 753935), nnz=4, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9003], grad_fn=<IndexBackward0>)
num_high 1 original num_nodes 4
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)
size_num_loss 0.25
train modality

100%|##########| 10/10 [00:41<00:00,  4.15s/it]
5
start training
masked_hor: tensor(indices=tensor([[  5708,   5708,   5708,   5708,   5708],
                       [ 82850, 127437, 195410, 223695, 328345]]),
       values=tensor([0.7708, 0.7468, 0.7592, 0.7587, 0.5720]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.7708, 0.7468, 0.7592, 0.7587, 0.5720], grad_fn=<IndexBackward0>)
num_high 5 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.2901, grad_fn=<AddBackward0>)
size_num_loss 1.0
  0%|          | 0/10 [00:00<?, ?it/s]
epoch:  0 ; loss:  1.290145754814148 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5708,   5708,   5708,   5708,   5708],
                       [ 82850, 127437, 195410, 223695, 328345]]),
       values=tensor([0.8472, 0.8294, 0.8387, 0.8383, 0.4477]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8472, 0.8294, 0.8387, 0.8383], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.3348, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:36,  4.11s/it]
masked_hor: tensor(indices=tensor([[  5708,   5708,   5708,   5708,   5708],
                       [ 82850, 127437, 195410, 223695, 328345]]),
       values=tensor([0.8772, 0.7842, 0.8417, 0.8396, 0.3670]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8772, 0.7842, 0.8417, 0.8396], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.3195, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:32,  4.11s/it]
epoch:  2 ; loss:  1.119518518447876 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5708,   5708,   5708,   5708,   5708],
                       [ 82850, 127437, 195410, 223695, 328345]]),
       values=tensor([0.9098, 0.7148, 0.8283, 0.8213, 0.3091]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9098, 0.7148, 0.8283, 0.8213], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.2634, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:28,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5708,   5708,   5708,   5708,   5708],
                       [ 82850, 127437, 195410, 223695, 328345]]),
       values=tensor([0.9379, 0.6281, 0.8072, 0.7853, 0.2657]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9379, 0.6281, 0.8072, 0.7853], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.1546, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.12s/it]
epoch:  4 ; loss:  0.9545696973800659 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5708,   5708,   5708,   5708,   5708],
                       [ 82850, 127437, 195410, 223695, 328345]]),
       values=tensor([0.9589, 0.5284, 0.7932, 0.7258, 0.2323]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9589, 0.5284, 0.7932, 0.7258], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(-0.0167, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.11s/it]
masked_hor: tensor(indices=tensor([[  5708,   5708,   5708,   5708,   5708],
                       [ 82850, 127437, 195410, 223695, 328345]]),
       values=tensor([0.9735, 0.4223, 0.8180, 0.6467, 0.2058]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9735, 0.8180, 0.6467], grad_fn=<IndexBackward0>)
num_high 3 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(-0.0235, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.12s/it]
epoch:  6 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5708,   5708,   5708,   5708,   5708],
                       [ 82850, 127437, 195410, 223695, 328345]]),
       values=tensor([0.9821, 0.3349, 0.8376, 0.5700, 0.1847]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9821, 0.8376, 0.5700], grad_fn=<IndexBackward0>)
num_high 3 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(-0.1981, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:28<00:12,  4.11s/it]
masked_hor: tensor(indices=tensor([[  5708,   5708,   5708,   5708,   5708],
                       [ 82850, 127437, 195410, 223695, 328345]]),
       values=tensor([0.9873, 0.2661, 0.8535, 0.4995, 0.1674]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9873, 0.8535], grad_fn=<IndexBackward0>)
num_high 2 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.0946, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:33<00:08,  4.15s/it]
epoch:  8 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5708,   5708,   5708,   5708,   5708],
                       [ 82850, 127437, 195410, 223695, 328345]]),
       values=tensor([0.9907, 0.2131, 0.8665, 0.4368, 0.1532]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9907, 0.8665], grad_fn=<IndexBackward0>)
num_high 2 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.1086, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.15s/it]
train modality

100%|##########| 10/10 [00:41<00:00,  4.13s/it]
48
start training
masked_hor: tensor(indices=tensor([[  5350,   5350,   5438,   5456,   5456,   5481,   5485,
                          5485,   5486,   5486,   5486,   5493,   5493,   5493,
                          5843,   5843,   5843,   5843,   5843,   5843,   5843,
                          5843,   5843,   5843,   5843,   5923,   5923,   5923,
                          5923,   5923,   5923,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   7250,   7384,   7384,   7632,
                          7632,   7688,   7688,   7688,   7930,   7930],
                       [ 63985, 154973, 154973,  63918, 154973, 154973,  63985,
                        154973,  63918,  63985, 154973,  63918,  63985, 154973,
                         82850, 129617, 193673, 223695, 255800, 255934, 256182,
                        256238, 256480, 304250, 328345, 146301, 146331, 146338,
                        179828, 247897, 247953, 146195, 146330, 146331, 146338,
                        179828, 247649, 247953,  22413,  22413, 113695,  22413,
                        113628,  22413, 113628, 113695,  22413, 146195]]),
       values=tensor([0.8011, 0.7864, 0.7656, 0.6388, 0.7574, 0.6787, 0.7293,
                      0.6621, 0.3499, 0.3960, 0.7150, 0.3356, 0.3504, 0.7080,
                      0.6991, 0.7605, 0.7917, 0.7246, 0.1421, 0.1497, 0.1399,
                      0.1544, 0.1524, 0.7930, 0.7792, 0.2599, 0.2516, 0.2604,
                      0.7217, 0.3664, 0.3604, 0.1910, 0.1680, 0.1737, 0.1805,
                      0.7942, 0.3718, 0.3568, 0.7431, 0.6989, 0.6642, 0.7691,
                      0.6943, 0.7063, 0.3385, 0.4037, 0.6787, 0.7110]),
       size=(8285, 753935), nnz=48, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8011, 0.7864, 0.7656, 0.6388, 0.7574, 0.6787, 0.7293, 0.6621, 0.6998,
        0.7919, 0.7150, 0.6712, 0.7009, 0.7080, 0.6991, 0.7605, 0.7917, 0.7246,
        0.7106, 0.7483, 0.6996, 0.7721, 0.7620, 0.7930, 0.7792, 0.7798, 0.7548,
        0.7812, 0.7217, 0.7327, 0.7208, 0.7641, 0.6720, 0.6947, 0.7220, 0.7942,
        0.7437, 0.7137, 0.7431, 0.6989, 0.6642, 0.7691, 0.6943, 0.7063, 0.6770,
        0.8074, 0.6787, 0.7110], grad_fn=<IndexBackward0>)
num_high 48 original num_nodes 48
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(3.4903, grad_fn=<AddBackward0>)
size_num_loss 1.0
  0%|          | 0/10 [00:00<?, ?it/s]
epoch:  0 ; loss:  4.490330696105957 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5350,   5350,   5438,   5456,   5456,   5481,   5485,
                          5485,   5486,   5486,   5486,   5493,   5493,   5493,
                          5843,   5843,   5843,   5843,   5843,   5843,   5843,
                          5843,   5843,   5843,   5843,   5923,   5923,   5923,
                          5923,   5923,   5923,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   7250,   7384,   7384,   7632,
                          7632,   7688,   7688,   7688,   7930,   7930],
                       [ 63985, 154973, 154973,  63918, 154973, 154973,  63985,
                        154973,  63918,  63985, 154973,  63918,  63985, 154973,
                         82850, 129617, 193673, 223695, 255800, 255934, 256182,
                        256238, 256480, 304250, 328345, 146301, 146331, 146338,
                        179828, 247897, 247953, 146195, 146330, 146331, 146338,
                        179828, 247649, 247953,  22413,  22413, 113695,  22413,
                        113628,  22413, 113628, 113695,  22413, 146195]]),
       values=tensor([0.7096, 0.6907, 0.6646, 0.5175, 0.6544, 0.5617, 0.6204,
                      0.5430, 0.2929, 0.3489, 0.6035, 0.2766, 0.2935, 0.5953,
                      0.5849, 0.6583, 0.6975, 0.6148, 0.1197, 0.1287, 0.1171,
                      0.1345, 0.1320, 0.6991, 0.6816, 0.2275, 0.2171, 0.2280,
                      0.6113, 0.3122, 0.3052, 0.1657, 0.1385, 0.1450, 0.1529,
                      0.7007, 0.3188, 0.3009, 0.6370, 0.5846, 0.5454, 0.6689,
                      0.5794, 0.5932, 0.2798, 0.3589, 0.5617, 0.5988]),
       size=(8285, 753935), nnz=48, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.7096, 0.6907, 0.6646, 0.5175, 0.6544, 0.5617, 0.6204, 0.5430, 0.5858,
        0.6977, 0.6035, 0.5532, 0.5870, 0.5953, 0.5849, 0.6583, 0.6975, 0.6148,
        0.5983, 0.6433, 0.5855, 0.6726, 0.6600, 0.6991, 0.6816, 0.6824, 0.6513,
        0.6841, 0.6113, 0.6245, 0.6103, 0.6627, 0.5541, 0.5799, 0.6117, 0.7007,
        0.6376, 0.6019, 0.6370, 0.5846, 0.5454, 0.6689, 0.5794, 0.5932, 0.5597,
        0.7177, 0.5617, 0.5988], grad_fn=<IndexBackward0>)
num_high 48 original num_nodes 48
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(2.9668, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.13s/it]
masked_hor: tensor(indices=tensor([[  5350,   5350,   5438,   5456,   5456,   5481,   5485,
                          5485,   5486,   5486,   5486,   5493,   5493,   5493,
                          5843,   5843,   5843,   5843,   5843,   5843,   5843,
                          5843,   5843,   5843,   5843,   5923,   5923,   5923,
                          5923,   5923,   5923,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   7250,   7384,   7384,   7632,
                          7632,   7688,   7688,   7688,   7930,   7930],
                       [ 63985, 154973, 154973,  63918, 154973, 154973,  63985,
                        154973,  63918,  63985, 154973,  63918,  63985, 154973,
                         82850, 129617, 193673, 223695, 255800, 255934, 256182,
                        256238, 256480, 304250, 328345, 146301, 146331, 146338,
                        179828, 247897, 247953, 146195, 146330, 146331, 146338,
                        179828, 247649, 247953,  22413,  22413, 113695,  22413,
                        113628,  22413, 113628, 113695,  22413, 146195]]),
       values=tensor([0.5970, 0.5752, 0.5458, 0.3940, 0.5345, 0.4372, 0.4977,
                      0.4187, 0.2308, 0.2916, 0.4799, 0.2144, 0.2314, 0.4714,
                      0.4607, 0.5388, 0.5829, 0.4918, 0.0949, 0.1045, 0.0923,
                      0.1109, 0.1081, 0.5848, 0.5648, 0.1886, 0.1770, 0.1892,
                      0.4881, 0.2510, 0.2435, 0.1359, 0.1074, 0.1139, 0.1221,
                      0.5866, 0.2581, 0.2391, 0.5155, 0.4604, 0.4210, 0.5506,
                      0.4551, 0.4693, 0.2176, 0.3033, 0.4372, 0.4750]),
       size=(8285, 753935), nnz=48, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.5970, 0.5752, 0.5458, 0.5345, 0.5832, 0.5388, 0.5829, 0.5224, 0.5547,
        0.5407, 0.5848, 0.5648, 0.5657, 0.5310, 0.5676, 0.5021, 0.5437, 0.5866,
        0.5162, 0.5155, 0.5506, 0.6065], grad_fn=<IndexBackward0>)
num_high 22 original num_nodes 48
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(1.2128, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:32,  4.11s/it]
epoch:  2 ; loss:  1.6711395978927612 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5350,   5350,   5438,   5456,   5456,   5481,   5485,
                          5485,   5486,   5486,   5486,   5493,   5493,   5493,
                          5843,   5843,   5843,   5843,   5843,   5843,   5843,
                          5843,   5843,   5843,   5843,   5923,   5923,   5923,
                          5923,   5923,   5923,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   7250,   7384,   7384,   7632,
                          7632,   7688,   7688,   7688,   7930,   7930],
                       [ 63985, 154973, 154973,  63918, 154973, 154973,  63985,
                        154973,  63918,  63985, 154973,  63918,  63985, 154973,
                         82850, 129617, 193673, 223695, 255800, 255934, 256182,
                        256238, 256480, 304250, 328345, 146301, 146331, 146338,
                        179828, 247897, 247953, 146195, 146330, 146331, 146338,
                        179828, 247649, 247953,  22413,  22413, 113695,  22413,
                        113628,  22413, 113628, 113695,  22413, 146195]]),
       values=tensor([0.4728, 0.4511, 0.4226, 0.3063, 0.4119, 0.3454, 0.4023,
                      0.3285, 0.1840, 0.2295, 0.3853, 0.1688, 0.1846, 0.3772,
                      0.3672, 0.4160, 0.4587, 0.3966, 0.0760, 0.0801, 0.0735,
                      0.0862, 0.0836, 0.4605, 0.4409, 0.1473, 0.1362, 0.1479,
                      0.3931, 0.1907, 0.1961, 0.1052, 0.0846, 0.0906, 0.0984,
                      0.4624, 0.1973, 0.1919, 0.3941, 0.3669, 0.3306, 0.4272,
                      0.3620, 0.3752, 0.1718, 0.2414, 0.3454, 0.3807]),
       size=(8285, 753935), nnz=48, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 48
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:28,  4.11s/it]
masked_hor: tensor(indices=tensor([[  5350,   5350,   5438,   5456,   5456,   5481,   5485,
                          5485,   5486,   5486,   5486,   5493,   5493,   5493,
                          5843,   5843,   5843,   5843,   5843,   5843,   5843,
                          5843,   5843,   5843,   5843,   5923,   5923,   5923,
                          5923,   5923,   5923,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   7250,   7384,   7384,   7632,
                          7632,   7688,   7688,   7688,   7930,   7930],
                       [ 63985, 154973, 154973,  63918, 154973, 154973,  63985,
                        154973,  63918,  63985, 154973,  63918,  63985, 154973,
                         82850, 129617, 193673, 223695, 255800, 255934, 256182,
                        256238, 256480, 304250, 328345, 146301, 146331, 146338,
                        179828, 247897, 247953, 146195, 146330, 146331, 146338,
                        179828, 247649, 247953,  22413,  22413, 113695,  22413,
                        113628,  22413, 113628, 113695,  22413, 146195]]),
       values=tensor([0.3729, 0.3531, 0.3278, 0.2433, 0.3185, 0.2776, 0.3290,
                      0.2627, 0.1489, 0.1801, 0.3134, 0.1354, 0.1494, 0.3061,
                      0.2971, 0.3220, 0.3599, 0.3238, 0.0618, 0.0617, 0.0595,
                      0.0671, 0.0647, 0.3616, 0.3440, 0.1149, 0.1052, 0.1155,
                      0.3206, 0.1460, 0.1598, 0.0815, 0.0679, 0.0732, 0.0802,
                      0.3633, 0.1517, 0.1560, 0.3029, 0.2969, 0.2646, 0.3319,
                      0.2924, 0.3043, 0.1380, 0.1912, 0.2776, 0.3093]),
       size=(8285, 753935), nnz=48, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 48
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.12s/it]
epoch:  4 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5350,   5350,   5438,   5456,   5456,   5481,   5485,
                          5485,   5486,   5486,   5486,   5493,   5493,   5493,
                          5843,   5843,   5843,   5843,   5843,   5843,   5843,
                          5843,   5843,   5843,   5843,   5923,   5923,   5923,
                          5923,   5923,   5923,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   7250,   7384,   7384,   7632,
                          7632,   7688,   7688,   7688,   7930,   7930],
                       [ 63985, 154973, 154973,  63918, 154973, 154973,  63985,
                        154973,  63918,  63985, 154973,  63918,  63985, 154973,
                         82850, 129617, 193673, 223695, 255800, 255934, 256182,
                        256238, 256480, 304250, 328345, 146301, 146331, 146338,
                        179828, 247897, 247953, 146195, 146330, 146331, 146338,
                        179828, 247649, 247953,  22413,  22413, 113695,  22413,
                        113628,  22413, 113628, 113695,  22413, 146195]]),
       values=tensor([0.2958, 0.2786, 0.2571, 0.1974, 0.2492, 0.2272, 0.2728,
                      0.2142, 0.1225, 0.1424, 0.2589, 0.1106, 0.1230, 0.2524,
                      0.2444, 0.2522, 0.2845, 0.2681, 0.0510, 0.0481, 0.0490,
                      0.0527, 0.0507, 0.2859, 0.2708, 0.0905, 0.0823, 0.0910,
                      0.2652, 0.1134, 0.1322, 0.0639, 0.0555, 0.0601, 0.0664,
                      0.2874, 0.1182, 0.1288, 0.2360, 0.2441, 0.2158, 0.2605,
                      0.2402, 0.2508, 0.1129, 0.1522, 0.2272, 0.2551]),
       size=(8285, 753935), nnz=48, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 48
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5350,   5350,   5438,   5456,   5456,   5481,   5485,
                          5485,   5486,   5486,   5486,   5493,   5493,   5493,
                          5843,   5843,   5843,   5843,   5843,   5843,   5843,
                          5843,   5843,   5843,   5843,   5923,   5923,   5923,
                          5923,   5923,   5923,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   7250,   7384,   7384,   7632,
                          7632,   7688,   7688,   7688,   7930,   7930],
                       [ 63985, 154973, 154973,  63918, 154973, 154973,  63985,
                        154973,  63918,  63985, 154973,  63918,  63985, 154973,
                         82850, 129617, 193673, 223695, 255800, 255934, 256182,
                        256238, 256480, 304250, 328345, 146301, 146331, 146338,
                        179828, 247897, 247953, 146195, 146330, 146331, 146338,
                        179828, 247649, 247953,  22413,  22413, 113695,  22413,
                        113628,  22413, 113628, 113695,  22413, 146195]]),
       values=tensor([0.2375, 0.2228, 0.2048, 0.1634, 0.1981, 0.1892, 0.2295,
                      0.1779, 0.1024, 0.1140, 0.2171, 0.0920, 0.1028, 0.2113,
                      0.2043, 0.2006, 0.2277, 0.2253, 0.0427, 0.0382, 0.0409,
                      0.0420, 0.0404, 0.2290, 0.2163, 0.0723, 0.0654, 0.0727,
                      0.2227, 0.0898, 0.1110, 0.0509, 0.0461, 0.0502, 0.0558,
                      0.2302, 0.0938, 0.1080, 0.1872, 0.2041, 0.1793, 0.2076,
                      0.2006, 0.2099, 0.0940, 0.1225, 0.1892, 0.2138]),
       size=(8285, 753935), nnz=48, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 48
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.11s/it]
epoch:  6 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5350,   5350,   5438,   5456,   5456,   5481,   5485,
                          5485,   5486,   5486,   5486,   5493,   5493,   5493,
                          5843,   5843,   5843,   5843,   5843,   5843,   5843,
                          5843,   5843,   5843,   5843,   5923,   5923,   5923,
                          5923,   5923,   5923,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   7250,   7384,   7384,   7632,
                          7632,   7688,   7688,   7688,   7930,   7930],
                       [ 63985, 154973, 154973,  63918, 154973, 154973,  63985,
                        154973,  63918,  63985, 154973,  63918,  63985, 154973,
                         82850, 129617, 193673, 223695, 255800, 255934, 256182,
                        256238, 256480, 304250, 328345, 146301, 146331, 146338,
                        179828, 247897, 247953, 146195, 146330, 146331, 146338,
                        179828, 247649, 247953,  22413,  22413, 113695,  22413,
                        113628,  22413, 113628, 113695,  22413, 146195]]),
       values=tensor([0.1934, 0.1809, 0.1659, 0.1376, 0.1604, 0.1602, 0.1958,
                      0.1503, 0.0870, 0.0927, 0.1848, 0.0778, 0.0873, 0.1797,
                      0.1735, 0.1624, 0.1851, 0.1921, 0.0363, 0.0309, 0.0348,
                      0.0341, 0.0327, 0.1862, 0.1755, 0.0586, 0.0529, 0.0590,
                      0.1898, 0.0724, 0.0946, 0.0412, 0.0390, 0.0426, 0.0475,
                      0.1872, 0.0758, 0.0919, 0.1512, 0.1733, 0.1515, 0.1683,
                      0.1702, 0.1784, 0.0796, 0.1000, 0.1602, 0.1819]),
       size=(8285, 753935), nnz=48, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 48
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:28<00:12,  4.11s/it]
masked_hor: tensor(indices=tensor([[  5350,   5350,   5438,   5456,   5456,   5481,   5485,
                          5485,   5486,   5486,   5486,   5493,   5493,   5493,
                          5843,   5843,   5843,   5843,   5843,   5843,   5843,
                          5843,   5843,   5843,   5843,   5923,   5923,   5923,
                          5923,   5923,   5923,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   7250,   7384,   7384,   7632,
                          7632,   7688,   7688,   7688,   7930,   7930],
                       [ 63985, 154973, 154973,  63918, 154973, 154973,  63985,
                        154973,  63918,  63985, 154973,  63918,  63985, 154973,
                         82850, 129617, 193673, 223695, 255800, 255934, 256182,
                        256238, 256480, 304250, 328345, 146301, 146331, 146338,
                        179828, 247897, 247953, 146195, 146330, 146331, 146338,
                        179828, 247649, 247953,  22413,  22413, 113695,  22413,
                        113628,  22413, 113628, 113695,  22413, 146195]]),
       values=tensor([0.1600, 0.1494, 0.1367, 0.1179, 0.1321, 0.1377, 0.1693,
                      0.1289, 0.0749, 0.0765, 0.1595, 0.0668, 0.0753, 0.1550,
                      0.1494, 0.1338, 0.1529, 0.1660, 0.0313, 0.0254, 0.0299,
                      0.0281, 0.0269, 0.1538, 0.1448, 0.0484, 0.0436, 0.0487,
                      0.1640, 0.0595, 0.0817, 0.0340, 0.0335, 0.0367, 0.0411,
                      0.1547, 0.0623, 0.0793, 0.1244, 0.1493, 0.1300, 0.1387,
                      0.1466, 0.1539, 0.0684, 0.0828, 0.1377, 0.1569]),
       size=(8285, 753935), nnz=48, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 48
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:32<00:08,  4.11s/it]
epoch:  8 ; loss:  -0.0 ; pred:  tensor([1.0000e+00, 4.0667e-41, 4.0446e-41, 3.5536e-41],
       grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5350,   5350,   5438,   5456,   5456,   5481,   5485,
                          5485,   5486,   5486,   5486,   5493,   5493,   5493,
                          5843,   5843,   5843,   5843,   5843,   5843,   5843,
                          5843,   5843,   5843,   5843,   5923,   5923,   5923,
                          5923,   5923,   5923,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   7250,   7384,   7384,   7632,
                          7632,   7688,   7688,   7688,   7930,   7930],
                       [ 63985, 154973, 154973,  63918, 154973, 154973,  63985,
                        154973,  63918,  63985, 154973,  63918,  63985, 154973,
                         82850, 129617, 193673, 223695, 255800, 255934, 256182,
                        256238, 256480, 304250, 328345, 146301, 146331, 146338,
                        179828, 247897, 247953, 146195, 146330, 146331, 146338,
                        179828, 247649, 247953,  22413,  22413, 113695,  22413,
                        113628,  22413, 113628, 113695,  22413, 146195]]),
       values=tensor([0.1343, 0.1253, 0.1146, 0.1024, 0.1106, 0.1200, 0.1483,
                      0.1122, 0.0654, 0.0642, 0.1395, 0.0582, 0.0657, 0.1354,
                      0.1305, 0.1121, 0.1283, 0.1453, 0.0274, 0.0213, 0.0261,
                      0.0236, 0.0226, 0.1291, 0.1214, 0.0406, 0.0365, 0.0408,
                      0.1435, 0.0498, 0.0715, 0.0285, 0.0292, 0.0320, 0.0359,
                      0.1298, 0.0522, 0.0693, 0.1041, 0.1303, 0.1132, 0.1163,
                      0.1279, 0.1344, 0.0596, 0.0696, 0.1200, 0.1371]),
       size=(8285, 753935), nnz=48, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 48
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.12s/it]
train modality

100%|##########| 10/10 [00:41<00:00,  4.12s/it]
5
start training
masked_hor: tensor(indices=tensor([[  5873,   5873,   5873,   5873,   5873],
                       [ 82931, 192813, 223729, 237628, 328345]]),
       values=tensor([0.7708, 0.7468, 0.7592, 0.7587, 0.5720]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.7708, 0.7468, 0.7592, 0.7587, 0.5720], grad_fn=<IndexBackward0>)
num_high 5 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.2901, grad_fn=<AddBackward0>)
size_num_loss 1.0
  0%|          | 0/10 [00:00<?, ?it/s]
epoch:  0 ; loss:  1.290145754814148 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5873,   5873,   5873,   5873,   5873],
                       [ 82931, 192813, 223729, 237628, 328345]]),
       values=tensor([0.8472, 0.8294, 0.8387, 0.8383, 0.4477]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8472, 0.8294, 0.8387, 0.8383], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.3348, grad_fn=<AddBackward0>)


 20%|##        | 2/10 [00:08<00:32,  4.11s/it]
masked_hor: tensor(indices=tensor([[  5873,   5873,   5873,   5873,   5873],
                       [ 82931, 192813, 223729, 237628, 328345]]),
       values=tensor([0.8772, 0.7842, 0.8417, 0.8396, 0.3670]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8772, 0.7842, 0.8417, 0.8396], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.3195, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:28,  4.12s/it]
epoch:  2 ; loss:  1.119518518447876 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5873,   5873,   5873,   5873,   5873],
                       [ 82931, 192813, 223729, 237628, 328345]]),
       values=tensor([0.9098, 0.7148, 0.8283, 0.8213, 0.3091]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9098, 0.7148, 0.8283, 0.8213], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.2634, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5873,   5873,   5873,   5873,   5873],
                       [ 82931, 192813, 223729, 237628, 328345]]),
       values=tensor([0.9379, 0.6281, 0.8072, 0.7853, 0.2657]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9379, 0.6281, 0.8072, 0.7853], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.1546, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.12s/it]
epoch:  4 ; loss:  0.9545696973800659 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5873,   5873,   5873,   5873,   5873],
                       [ 82931, 192813, 223729, 237628, 328345]]),
       values=tensor([0.9589, 0.5284, 0.7932, 0.7258, 0.2323]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9589, 0.5284, 0.7932, 0.7258], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(-0.0167, grad_fn=<AddBackward0>)
size_num_loss 0.8
masked_hor: tensor(indices=tensor([[  5873,   5873,   5873,   5873,   5873],
                       [ 82931, 192813, 223729, 237628, 328345]]),
       values=tensor([0.9735, 0.4223, 0.8180, 0.6467, 0.2058]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9735, 0.8180, 0.6467], grad_fn=<IndexBackward0>)
num_high 3 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(-0.0235, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.11s/it]
epoch:  6 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5873,   5873,   5873,   5873,   5873],
                       [ 82931, 192813, 223729, 237628, 328345]]),
       values=tensor([0.9821, 0.3349, 0.8376, 0.5700, 0.1847]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9821, 0.8376, 0.5700], grad_fn=<IndexBackward0>)
num_high 3 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(-0.1981, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:28<00:12,  4.11s/it]
masked_hor: tensor(indices=tensor([[  5873,   5873,   5873,   5873,   5873],
                       [ 82931, 192813, 223729, 237628, 328345]]),
       values=tensor([0.9873, 0.2661, 0.8535, 0.4995, 0.1674]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9873, 0.8535], grad_fn=<IndexBackward0>)
num_high 2 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.0946, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:32<00:08,  4.11s/it]
epoch:  8 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5873,   5873,   5873,   5873,   5873],
                       [ 82931, 192813, 223729, 237628, 328345]]),
       values=tensor([0.9907, 0.2131, 0.8665, 0.4368, 0.1532]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9907, 0.8665], grad_fn=<IndexBackward0>)
num_high 2 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.1086, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.12s/it]
train modality

100%|##########| 10/10 [00:41<00:00,  4.11s/it]
5
start training
masked_hor: tensor(indices=tensor([[  5697,   5697,   5697,   5697,   5697],
                       [ 82850, 127437, 195123, 223695, 328345]]),
       values=tensor([0.7708, 0.7468, 0.7592, 0.7587, 0.5720]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.7708, 0.7468, 0.7592, 0.7587, 0.5720], grad_fn=<IndexBackward0>)
num_high 5 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.2901, grad_fn=<AddBackward0>)
size_num_loss 1.0
  0%|          | 0/10 [00:00<?, ?it/s]
epoch:  0 ; loss:  1.290145754814148 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5697,   5697,   5697,   5697,   5697],
                       [ 82850, 127437, 195123, 223695, 328345]]),
       values=tensor([0.8472, 0.8294, 0.8387, 0.8383, 0.4477]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8472, 0.8294, 0.8387, 0.8383], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.3348, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:36,  4.10s/it]
masked_hor: tensor(indices=tensor([[  5697,   5697,   5697,   5697,   5697],
                       [ 82850, 127437, 195123, 223695, 328345]]),
       values=tensor([0.8772, 0.7842, 0.8417, 0.8396, 0.3670]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8772, 0.7842, 0.8417, 0.8396], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.3195, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:32,  4.11s/it]
epoch:  2 ; loss:  1.119518518447876 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5697,   5697,   5697,   5697,   5697],
                       [ 82850, 127437, 195123, 223695, 328345]]),
       values=tensor([0.9098, 0.7148, 0.8283, 0.8213, 0.3091]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9098, 0.7148, 0.8283, 0.8213], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.2634, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:28,  4.11s/it]
masked_hor: tensor(indices=tensor([[  5697,   5697,   5697,   5697,   5697],
                       [ 82850, 127437, 195123, 223695, 328345]]),
       values=tensor([0.9379, 0.6281, 0.8072, 0.7853, 0.2657]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9379, 0.6281, 0.8072, 0.7853], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.1546, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.11s/it]
epoch:  4 ; loss:  0.9545696973800659 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5697,   5697,   5697,   5697,   5697],
                       [ 82850, 127437, 195123, 223695, 328345]]),
       values=tensor([0.9589, 0.5284, 0.7932, 0.7258, 0.2323]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9589, 0.5284, 0.7932, 0.7258], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(-0.0167, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.11s/it]
masked_hor: tensor(indices=tensor([[  5697,   5697,   5697,   5697,   5697],
                       [ 82850, 127437, 195123, 223695, 328345]]),
       values=tensor([0.9735, 0.4223, 0.8180, 0.6467, 0.2058]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9735, 0.8180, 0.6467], grad_fn=<IndexBackward0>)
num_high 3 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(-0.0235, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.11s/it]
epoch:  6 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5697,   5697,   5697,   5697,   5697],
                       [ 82850, 127437, 195123, 223695, 328345]]),
       values=tensor([0.9821, 0.3349, 0.8376, 0.5700, 0.1847]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9821, 0.8376, 0.5700], grad_fn=<IndexBackward0>)
num_high 3 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(-0.1981, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:28<00:12,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5697,   5697,   5697,   5697,   5697],
                       [ 82850, 127437, 195123, 223695, 328345]]),
       values=tensor([0.9873, 0.2661, 0.8535, 0.4995, 0.1674]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9873, 0.8535], grad_fn=<IndexBackward0>)
num_high 2 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.0946, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:32<00:08,  4.12s/it]
epoch:  8 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5697,   5697,   5697,   5697,   5697],
                       [ 82850, 127437, 195123, 223695, 328345]]),
       values=tensor([0.9907, 0.2131, 0.8665, 0.4368, 0.1532]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9907, 0.8665], grad_fn=<IndexBackward0>)
num_high 2 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.1086, grad_fn=<AddBackward0>)


100%|##########| 10/10 [00:41<00:00,  4.12s/it]
train modality
node_idx: 5783 belonging to  0
16
start training
masked_hor: tensor(indices=tensor([[  5356,   5414,   5432,   5783,   5783,   5783,   5783,
                          5783,   5783,   5783,   5783,   5783,   6841,   7733,
                          7734,   7736],
                       [154913, 154913, 154913,  82908, 191843, 223757, 237563,
                        255391, 256283, 256284, 256286, 328345,  22353,  22353,
                         22353,  22353]]),
       values=tensor([0.8431, 0.8214, 0.7889, 0.5636, 0.7755, 0.6373, 0.7281,
                      0.1516, 0.1689, 0.2074, 0.1757, 0.6233, 0.6776, 0.6904,
                      0.6744, 0.7807]),
       size=(8285, 753935), nnz=16, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8431, 0.8214, 0.7889, 0.5636, 0.7755, 0.6373, 0.7281, 0.6065, 0.6757,
        0.8296, 0.7029, 0.6233, 0.6776, 0.6904, 0.6744, 0.7807],
       grad_fn=<IndexBackward0>)
num_high 16 original num_nodes 16
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(1.0693, grad_fn=<AddBackward0>)
size_num_loss 1.0
  0%|          | 0/10 [00:00<?, ?it/s]
epoch:  0 ; loss:  2.0692737102508545 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5356,   5414,   5432,   5783,   5783,   5783,   5783,
                          5783,   5783,   5783,   5783,   5783,   6841,   7733,
                          7734,   7736],
                       [154913, 154913, 154913,  82908, 191843, 223757, 237563,
                        255391, 256283, 256284, 256286, 328345,  22353,  22353,
                         22353,  22353]]),
       values=tensor([0.8986, 0.8835, 0.8604, 0.4392, 0.6770, 0.5159, 0.6189,
                      0.1208, 0.1396, 0.2223, 0.1473, 0.5009, 0.5604, 0.5750,
                      0.5568, 0.6834]),
       size=(8285, 753935), nnz=16, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8986, 0.8835, 0.8604, 0.6770, 0.5159, 0.6189, 0.5583, 0.8892, 0.5893,
        0.5009, 0.5604, 0.5750, 0.5568, 0.6834], grad_fn=<IndexBackward0>)
num_high 14 original num_nodes 16
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.7136, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.11s/it]
masked_hor: tensor(indices=tensor([[  5356,   5414,   5432,   5783,   5783,   5783,   5783,
                          5783,   5783,   5783,   5783,   5783,   6841,   7733,
                          7734,   7736],
                       [154913, 154913, 154913,  82908, 191843, 223757, 237563,
                        255391, 256283, 256284, 256286, 328345,  22353,  22353,
                         22353,  22353]]),
       values=tensor([0.9342, 0.9222, 0.8995, 0.3591, 0.5793, 0.3954, 0.5044,
                      0.1002, 0.1096, 0.2317, 0.1178, 0.3808, 0.4405, 0.4559,
                      0.4368, 0.5899]),
       size=(8285, 753935), nnz=16, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9342, 0.9222, 0.8995, 0.5793, 0.5044, 0.9270, 0.5899],
       grad_fn=<IndexBackward0>)
num_high 7 original num_nodes 16
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.1511, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:32,  4.11s/it]
epoch:  2 ; loss:  0.588611364364624 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5356,   5414,   5432,   5783,   5783,   5783,   5783,
                          5783,   5783,   5783,   5783,   5783,   6841,   7733,
                          7734,   7736],
                       [154913, 154913, 154913,  82908, 191843, 223757, 237563,
                        255391, 256283, 256284, 256286, 328345,  22353,  22353,
                         22353,  22353]]),
       values=tensor([0.9583, 0.9497, 0.9321, 0.3019, 0.4917, 0.3097, 0.4104,
                      0.0851, 0.0874, 0.2383, 0.0954, 0.2964, 0.3518, 0.3666,
                      0.3482, 0.5035]),
       size=(8285, 753935), nnz=16, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9583, 0.9497, 0.9321, 0.9531, 0.5035], grad_fn=<IndexBackward0>)
num_high 5 original num_nodes 16
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.0329, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:28,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5356,   5414,   5432,   5783,   5783,   5783,   5783,
                          5783,   5783,   5783,   5783,   5783,   6841,   7733,
                          7734,   7736],
                       [154913, 154913, 154913,  82908, 191843, 223757, 237563,
                        255391, 256283, 256284, 256286, 328345,  22353,  22353,
                         22353,  22353]]),
       values=tensor([0.9736, 0.9678, 0.9550, 0.2591, 0.4200, 0.2477, 0.3378,
                      0.0736, 0.0709, 0.2425, 0.0784, 0.2360, 0.2857, 0.2994,
                      0.2825, 0.4120]),
       size=(8285, 753935), nnz=16, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9736, 0.9678, 0.9550, 0.9702], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 16
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.3860, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.12s/it]
epoch:  4 ; loss:  0.6360089182853699 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5356,   5414,   5432,   5783,   5783,   5783,   5783,
                          5783,   5783,   5783,   5783,   5783,   6841,   7733,
                          7734,   7736],
                       [154913, 154913, 154913,  82908, 191843, 223757, 237563,
                        255391, 256283, 256284, 256286, 328345,  22353,  22353,
                         22353,  22353]]),
       values=tensor([0.9820, 0.9776, 0.9668, 0.2262, 0.3619, 0.2023, 0.2817,
                      0.0647, 0.0586, 0.2449, 0.0654, 0.1921, 0.2361, 0.2485,
                      0.2332, 0.3389]),
       size=(8285, 753935), nnz=16, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9820, 0.9776, 0.9668, 0.9795], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 16
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.3901, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5356,   5414,   5432,   5783,   5783,   5783,   5783,
                          5783,   5783,   5783,   5783,   5783,   6841,   7733,
                          7734,   7736],
                       [154913, 154913, 154913,  82908, 191843, 223757, 237563,
                        255391, 256283, 256284, 256286, 328345,  22353,  22353,
                         22353,  22353]]),
       values=tensor([0.9870, 0.9835, 0.9736, 0.2003, 0.3147, 0.1684, 0.2382,
                      0.0575, 0.0492, 0.2462, 0.0553, 0.1594, 0.1984, 0.2096,
                      0.1958, 0.2815]),
       size=(8285, 753935), nnz=16, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9870, 0.9835, 0.9736, 0.9850], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 16
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.3926, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.12s/it]
epoch:  6 ; loss:  0.6425600051879883 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5356,   5414,   5432,   5783,   5783,   5783,   5783,
                          5783,   5783,   5783,   5783,   5783,   6841,   7733,
                          7734,   7736],
                       [154913, 154913, 154913,  82908, 191843, 223757, 237563,
                        255391, 256283, 256284, 256286, 328345,  22353,  22353,
                         22353,  22353]]),
       values=tensor([0.9902, 0.9872, 0.9780, 0.1796, 0.2764, 0.1426, 0.2042,
                      0.0518, 0.0420, 0.2471, 0.0475, 0.1347, 0.1693, 0.1794,
                      0.1670, 0.2364]),
       size=(8285, 753935), nnz=16, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9902, 0.9872, 0.9780, 0.9885], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 16
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.3941, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:28<00:12,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5356,   5414,   5432,   5783,   5783,   5783,   5783,
                          5783,   5783,   5783,   5783,   5783,   6841,   7733,
                          7734,   7736],
                       [154913, 154913, 154913,  82908, 191843, 223757, 237563,
                        255391, 256283, 256284, 256286, 328345,  22353,  22353,
                         22353,  22353]]),
       values=tensor([0.9923, 0.9898, 0.9808, 0.1627, 0.2452, 0.1227, 0.1773,
                      0.0471, 0.0363, 0.2477, 0.0413, 0.1157, 0.1466, 0.1557,
                      0.1445, 0.2011]),
       size=(8285, 753935), nnz=16, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9923, 0.9898, 0.9808, 0.9909], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 16
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.3951, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:32<00:08,  4.11s/it]
epoch:  8 ; loss:  0.645110011100769 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5356,   5414,   5432,   5783,   5783,   5783,   5783,
                          5783,   5783,   5783,   5783,   5783,   6841,   7733,
                          7734,   7736],
                       [154913, 154913, 154913,  82908, 191843, 223757, 237563,
                        255391, 256283, 256284, 256286, 328345,  22353,  22353,
                         22353,  22353]]),
       values=tensor([0.9938, 0.9915, 0.9828, 0.1488, 0.2195, 0.1071, 0.1558,
                      0.0432, 0.0319, 0.2481, 0.0364, 0.1008, 0.1286, 0.1369,
                      0.1267, 0.1731]),
       size=(8285, 753935), nnz=16, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9938, 0.9915, 0.9828, 0.9925], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 16
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.3958, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.11s/it]
train modality

100%|##########| 10/10 [00:41<00:00,  4.11s/it]
  0%|          | 0/10 [00:00<?, ?it/s]
5
start training
masked_hor: tensor(indices=tensor([[  5701,   5701,   5701,   5701,   5701],
                       [ 82850, 127437, 194512, 223695, 328345]]),
       values=tensor([0.7708, 0.7468, 0.7592, 0.7587, 0.5720]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.7708, 0.7468, 0.7592, 0.7587, 0.5720], grad_fn=<IndexBackward0>)
num_high 5 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.2901, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.12s/it]
epoch:  0 ; loss:  1.290145754814148 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5701,   5701,   5701,   5701,   5701],
                       [ 82850, 127437, 194512, 223695, 328345]]),
       values=tensor([0.8472, 0.8294, 0.8387, 0.8383, 0.4477]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8472, 0.8294, 0.8387, 0.8383], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.3348, grad_fn=<AddBackward0>)
size_num_loss 0.8
masked_hor: tensor(indices=tensor([[  5701,   5701,   5701,   5701,   5701],
                       [ 82850, 127437, 194512, 223695, 328345]]),
       values=tensor([0.8772, 0.7842, 0.8417, 0.8396, 0.3670]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8772, 0.7842, 0.8417, 0.8396], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.3195, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:34,  4.35s/it]
epoch:  2 ; loss:  1.119518518447876 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5701,   5701,   5701,   5701,   5701],
                       [ 82850, 127437, 194512, 223695, 328345]]),
       values=tensor([0.9098, 0.7148, 0.8283, 0.8213, 0.3091]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9098, 0.7148, 0.8283, 0.8213], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.2634, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:29,  4.24s/it]
masked_hor: tensor(indices=tensor([[  5701,   5701,   5701,   5701,   5701],
                       [ 82850, 127437, 194512, 223695, 328345]]),
       values=tensor([0.9379, 0.6281, 0.8072, 0.7853, 0.2657]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9379, 0.6281, 0.8072, 0.7853], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.1546, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:25,  4.22s/it]
epoch:  4 ; loss:  0.9545696973800659 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5701,   5701,   5701,   5701,   5701],
                       [ 82850, 127437, 194512, 223695, 328345]]),
       values=tensor([0.9589, 0.5284, 0.7932, 0.7258, 0.2323]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9589, 0.5284, 0.7932, 0.7258], grad_fn=<IndexBackward0>)
num_high 4 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(-0.0167, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:21<00:20,  4.19s/it]
masked_hor: tensor(indices=tensor([[  5701,   5701,   5701,   5701,   5701],
                       [ 82850, 127437, 194512, 223695, 328345]]),
       values=tensor([0.9735, 0.4223, 0.8180, 0.6467, 0.2058]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9735, 0.8180, 0.6467], grad_fn=<IndexBackward0>)
num_high 3 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(-0.0235, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:25<00:16,  4.16s/it]
epoch:  6 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5701,   5701,   5701,   5701,   5701],
                       [ 82850, 127437, 194512, 223695, 328345]]),
       values=tensor([0.9821, 0.3349, 0.8376, 0.5700, 0.1847]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9821, 0.8376, 0.5700], grad_fn=<IndexBackward0>)
num_high 3 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(-0.1981, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:29<00:12,  4.14s/it]
masked_hor: tensor(indices=tensor([[  5701,   5701,   5701,   5701,   5701],
                       [ 82850, 127437, 194512, 223695, 328345]]),
       values=tensor([0.9873, 0.2661, 0.8535, 0.4995, 0.1674]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9873, 0.8535], grad_fn=<IndexBackward0>)
num_high 2 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.0946, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:33<00:08,  4.14s/it]
epoch:  8 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5701,   5701,   5701,   5701,   5701],
                       [ 82850, 127437, 194512, 223695, 328345]]),
       values=tensor([0.9907, 0.2131, 0.8665, 0.4368, 0.1532]),
       size=(8285, 753935), nnz=5, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9907, 0.8665], grad_fn=<IndexBackward0>)
num_high 2 original num_nodes 5
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.1086, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.13s/it]
train modality

100%|##########| 10/10 [00:41<00:00,  4.17s/it]
111
start training
masked_hor: tensor(indices=tensor([[  5350,   5350,   5410,   5410,   5410,   5410,   5447,
                          5447,   5448,   5448,   5485,   5485,   5486,   5486,
                          5486,   5493,   5493,   5493,   5494,   5494,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5845,   5845,   5845,   5845,   5845,   5845,   5845,
                          5845,   5845,   5845,   5845,   5845,   5845,   5845,
                          5845,   5845,   5845,   5845,   5845,   5923,   5923,
                          5923,   5923,   5923,   5923,   5923,   5941,   5941,
                          5941,   5941,   5941,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   5990,   5990,   7377,   7377,
                          7377,   7378,   7378,   7378,   7379,   7379,   7384,
                          7384,   7384,   7578,   7578,   7578,   7611,   7611,
                          7611,   7613,   7614,   7632,   7632,   7632,   7688,
                          7688,   7688,   7688,   7953,   7953,   7953],
                       [ 63985, 154975,  63918,  63936,  63985, 154975,  63985,
                        154975,  63985, 154975,  63985, 154975,  63918,  63985,
                        154975,  63918,  63985, 154975,  63936, 154975,  47348,
                         47366,  47415, 179830, 264212, 264213, 264214, 264219,
                        264413, 264446, 264448, 264449, 264467, 264523, 264788,
                         82948, 192283, 223781, 237607, 255927, 255928, 255929,
                        255934, 256128, 256161, 256163, 256164, 256182, 256238,
                        256503, 304201, 304250, 328345, 328346,  38642, 146255,
                        146331, 146338, 179830, 247897, 247953,  38642, 146255,
                        146339, 179830, 247644,  38642, 146195, 146255, 146292,
                        146293, 146330, 146331, 146338, 179830, 247642, 247643,
                        247649, 247843, 247876, 247953, 248218,  22415, 113695,
                        146255,  22415, 113695, 146255,  22415, 113646,  22415,
                        113695, 146255,  22415, 113695, 146255,  22415, 113695,
                        146255,  22415,  22415,  22415, 113628, 146255,  22415,
                        113628, 113695, 146255,  22415, 113695, 146255]]),
       values=tensor([0.7788, 0.7685, 0.2514, 0.2240, 0.2495, 0.6973, 0.7299,
                      0.6867, 0.7108, 0.7723, 0.7206, 0.6924, 0.3557, 0.3580,
                      0.7103, 0.3753, 0.3861, 0.7268, 0.7177, 0.7425, 0.2369,
                      0.2528, 0.2506, 0.7730, 0.0694, 0.0694, 0.0679, 0.0695,
                      0.0659, 0.0666, 0.0659, 0.0685, 0.0630, 0.0643, 0.0659,
                      0.7739, 0.7394, 0.7197, 0.7391, 0.0646, 0.0625, 0.0688,
                      0.0643, 0.0650, 0.0633, 0.0712, 0.0634, 0.0653, 0.0642,
                      0.0648, 0.3666, 0.3724, 0.3590, 0.3807, 0.7090, 0.2371,
                      0.2308, 0.2440, 0.7294, 0.3743, 0.3642, 0.7769, 0.3493,
                      0.3830, 0.7675, 0.7531, 0.7855, 0.1064, 0.1057, 0.1037,
                      0.1003, 0.1091, 0.1038, 0.1064, 0.7326, 0.1060, 0.1066,
                      0.1020, 0.0956, 0.1015, 0.1045, 0.1031, 0.6942, 0.7153,
                      0.7450, 0.7447, 0.7601, 0.7324, 0.7502, 0.7182, 0.7025,
                      0.7467, 0.6833, 0.7087, 0.7648, 0.7417, 0.6909, 0.7283,
                      0.7150, 0.7435, 0.7498, 0.7335, 0.7207, 0.7635, 0.7307,
                      0.3687, 0.3673, 0.7507, 0.7590, 0.7399, 0.7496]),
       size=(8285, 753935), nnz=111, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.7788, 0.7685, 0.7542, 0.6720, 0.7486, 0.6973, 0.7299, 0.6867, 0.7108,
        0.7723, 0.7206, 0.6924, 0.7114, 0.7160, 0.7103, 0.7507, 0.7721, 0.7268,
        0.7177, 0.7425, 0.7106, 0.7585, 0.7517, 0.7730, 0.7635, 0.7639, 0.7469,
        0.7648, 0.7249, 0.7322, 0.7244, 0.7531, 0.6930, 0.7075, 0.7251, 0.7739,
        0.7394, 0.7197, 0.7391, 0.7101, 0.6880, 0.7565, 0.7072, 0.7149, 0.6961,
        0.7833, 0.6973, 0.7180, 0.7063, 0.7133, 0.7331, 0.7447, 0.7180, 0.7613,
        0.7090, 0.7112, 0.6925, 0.7320, 0.7294, 0.7485, 0.7285, 0.7769, 0.6987,
        0.7660, 0.7675, 0.7531, 0.7855, 0.7446, 0.7401, 0.7258, 0.7023, 0.7634,
        0.7265, 0.7447, 0.7326, 0.7422, 0.7460, 0.7138, 0.6690, 0.7108, 0.7313,
        0.7220, 0.6942, 0.7153, 0.7450, 0.7447, 0.7601, 0.7324, 0.7502, 0.7182,
        0.7025, 0.7467, 0.6833, 0.7087, 0.7648, 0.7417, 0.6909, 0.7283, 0.7150,
        0.7435, 0.7498, 0.7335, 0.7207, 0.7635, 0.7307, 0.7374, 0.7345, 0.7507,
        0.7590, 0.7399, 0.7496], grad_fn=<IndexBackward0>)
num_high 111 original num_nodes 111
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(8.1194, grad_fn=<AddBackward0>)
size_num_loss 1.0

 10%|#         | 1/10 [00:04<00:37,  4.19s/it]
epoch:  0 ; loss:  9.119415283203125 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5350,   5350,   5410,   5410,   5410,   5410,   5447,
                          5447,   5448,   5448,   5485,   5485,   5486,   5486,
                          5486,   5493,   5493,   5493,   5494,   5494,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5845,   5845,   5845,   5845,   5845,   5845,   5845,
                          5845,   5845,   5845,   5845,   5845,   5845,   5845,
                          5845,   5845,   5845,   5845,   5845,   5923,   5923,
                          5923,   5923,   5923,   5923,   5923,   5941,   5941,
                          5941,   5941,   5941,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   5990,   5990,   7377,   7377,
                          7377,   7378,   7378,   7378,   7379,   7379,   7384,
                          7384,   7384,   7578,   7578,   7578,   7611,   7611,
                          7611,   7613,   7614,   7632,   7632,   7632,   7688,
                          7688,   7688,   7688,   7953,   7953,   7953],
                       [ 63985, 154975,  63918,  63936,  63985, 154975,  63985,
                        154975,  63985, 154975,  63985, 154975,  63918,  63985,
                        154975,  63918,  63985, 154975,  63936, 154975,  47348,
                         47366,  47415, 179830, 264212, 264213, 264214, 264219,
                        264413, 264446, 264448, 264449, 264467, 264523, 264788,
                         82948, 192283, 223781, 237607, 255927, 255928, 255929,
                        255934, 256128, 256161, 256163, 256164, 256182, 256238,
                        256503, 304201, 304250, 328345, 328346,  38642, 146255,
                        146331, 146338, 179830, 247897, 247953,  38642, 146255,
                        146339, 179830, 247644,  38642, 146195, 146255, 146292,
                        146293, 146330, 146331, 146338, 179830, 247642, 247643,
                        247649, 247843, 247876, 247953, 248218,  22415, 113695,
                        146255,  22415, 113695, 146255,  22415, 113646,  22415,
                        113695, 146255,  22415, 113695, 146255,  22415, 113695,
                        146255,  22415,  22415,  22415, 113628, 146255,  22415,
                        113628, 113695, 146255,  22415, 113695, 146255]]),
       values=tensor([0.6811, 0.6681, 0.2168, 0.1847, 0.2145, 0.5828, 0.6211,
                      0.5707, 0.5985, 0.6729, 0.6100, 0.5773, 0.2996, 0.3023,
                      0.5979, 0.3231, 0.3364, 0.6174, 0.6066, 0.6362, 0.1994,
                      0.2186, 0.2158, 0.6738, 0.0602, 0.0602, 0.0583, 0.0603,
                      0.0559, 0.0567, 0.0559, 0.0590, 0.0525, 0.0541, 0.0559,
                      0.6749, 0.6325, 0.6090, 0.6321, 0.0543, 0.0520, 0.0594,
                      0.0540, 0.0548, 0.0529, 0.0624, 0.0530, 0.0552, 0.0539,
                      0.0547, 0.3125, 0.3194, 0.3035, 0.3296, 0.5965, 0.1997,
                      0.1924, 0.2079, 0.6205, 0.3218, 0.3097, 0.6787, 0.2922,
                      0.3325, 0.6669, 0.6491, 0.6895, 0.0913, 0.0905, 0.0880,
                      0.0841, 0.0945, 0.0881, 0.0913, 0.6242, 0.0908, 0.0915,
                      0.0860, 0.0787, 0.0855, 0.0890, 0.0874, 0.5793, 0.6038,
                      0.6392, 0.6389, 0.6577, 0.6241, 0.6456, 0.6072, 0.5888,
                      0.6413, 0.5668, 0.5960, 0.6636, 0.6353, 0.5755, 0.6192,
                      0.6034, 0.6374, 0.6451, 0.6253, 0.6101, 0.6619, 0.6221,
                      0.3150, 0.3133, 0.6462, 0.6563, 0.6331, 0.6449]),
       size=(8285, 753935), nnz=111, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.6811, 0.6681, 0.6504, 0.5541, 0.6436, 0.5828, 0.6211, 0.5707, 0.5985,
        0.6729, 0.6100, 0.5773, 0.5992, 0.6047, 0.5979, 0.6462, 0.6727, 0.6174,
        0.6066, 0.6362, 0.5983, 0.6558, 0.6474, 0.6738, 0.6619, 0.6624, 0.6415,
        0.6636, 0.6151, 0.6238, 0.6145, 0.6492, 0.5779, 0.5946, 0.6154, 0.6749,
        0.6325, 0.6090, 0.6321, 0.5977, 0.5722, 0.6533, 0.5943, 0.6033, 0.5815,
        0.6867, 0.5828, 0.6069, 0.5932, 0.6015, 0.6249, 0.6389, 0.6069, 0.6592,
        0.5965, 0.5990, 0.5773, 0.6236, 0.6205, 0.6435, 0.6194, 0.6787, 0.5844,
        0.6650, 0.6669, 0.6491, 0.6895, 0.6388, 0.6333, 0.6162, 0.5887, 0.6618,
        0.6170, 0.6388, 0.6242, 0.6358, 0.6404, 0.6020, 0.5508, 0.5985, 0.6228,
        0.6117, 0.5793, 0.6038, 0.6392, 0.6389, 0.6577, 0.6241, 0.6456, 0.6072,
        0.5888, 0.6413, 0.5668, 0.5960, 0.6636, 0.6353, 0.5755, 0.6192, 0.6034,
        0.6374, 0.6451, 0.6253, 0.6101, 0.6619, 0.6221, 0.6300, 0.6266, 0.6462,
        0.6563, 0.6331, 0.6449], grad_fn=<IndexBackward0>)
num_high 111 original num_nodes 111
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(6.9182, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:33,  4.16s/it]
masked_hor: tensor(indices=tensor([[  5350,   5350,   5410,   5410,   5410,   5410,   5447,
                          5447,   5448,   5448,   5485,   5485,   5486,   5486,
                          5486,   5493,   5493,   5493,   5494,   5494,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5845,   5845,   5845,   5845,   5845,   5845,   5845,
                          5845,   5845,   5845,   5845,   5845,   5845,   5845,
                          5845,   5845,   5845,   5845,   5845,   5923,   5923,
                          5923,   5923,   5923,   5923,   5923,   5941,   5941,
                          5941,   5941,   5941,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   5990,   5990,   7377,   7377,
                          7377,   7378,   7378,   7378,   7379,   7379,   7384,
                          7384,   7384,   7578,   7578,   7578,   7611,   7611,
                          7611,   7613,   7614,   7632,   7632,   7632,   7688,
                          7688,   7688,   7688,   7953,   7953,   7953],
                       [ 63985, 154975,  63918,  63936,  63985, 154975,  63985,
                        154975,  63985, 154975,  63985, 154975,  63918,  63985,
                        154975,  63918,  63985, 154975,  63936, 154975,  47348,
                         47366,  47415, 179830, 264212, 264213, 264214, 264219,
                        264413, 264446, 264448, 264449, 264467, 264523, 264788,
                         82948, 192283, 223781, 237607, 255927, 255928, 255929,
                        255934, 256128, 256161, 256163, 256164, 256182, 256238,
                        256503, 304201, 304250, 328345, 328346,  38642, 146255,
                        146331, 146338, 179830, 247897, 247953,  38642, 146255,
                        146339, 179830, 247644,  38642, 146195, 146255, 146292,
                        146293, 146330, 146331, 146338, 179830, 247642, 247643,
                        247649, 247843, 247876, 247953, 248218,  22415, 113695,
                        146255,  22415, 113695, 146255,  22415, 113646,  22415,
                        113695, 146255,  22415, 113695, 146255,  22415, 113695,
                        146255,  22415,  22415,  22415, 113628, 146255,  22415,
                        113628, 113695, 146255,  22415, 113695, 146255]]),
       values=tensor([0.5643, 0.5497, 0.1767, 0.1432, 0.1742, 0.4585, 0.4985,
                      0.4462, 0.4747, 0.5551, 0.4867, 0.4529, 0.2377, 0.2406,
                      0.4741, 0.2628, 0.2774, 0.4946, 0.4832, 0.5147, 0.1582,
                      0.1787, 0.1756, 0.5562, 0.0493, 0.0494, 0.0473, 0.0495,
                      0.0447, 0.0456, 0.0447, 0.0481, 0.0412, 0.0428, 0.0448,
                      0.5574, 0.5106, 0.4857, 0.5102, 0.0431, 0.0407, 0.0485,
                      0.0428, 0.0436, 0.0416, 0.0519, 0.0417, 0.0440, 0.0427,
                      0.0434, 0.2513, 0.2588, 0.2418, 0.2699, 0.4726, 0.1584,
                      0.1510, 0.1670, 0.4978, 0.2613, 0.2483, 0.5616, 0.2301,
                      0.2731, 0.5483, 0.5287, 0.5739, 0.0739, 0.0731, 0.0705,
                      0.0664, 0.0775, 0.0706, 0.0739, 0.5018, 0.0735, 0.0742,
                      0.0683, 0.0609, 0.0678, 0.0715, 0.0698, 0.4550, 0.4803,
                      0.5179, 0.5175, 0.5382, 0.5017, 0.5249, 0.4837, 0.4647,
                      0.5202, 0.4423, 0.4721, 0.5446, 0.5137, 0.4511, 0.4965,
                      0.4798, 0.5159, 0.5243, 0.5030, 0.4868, 0.5428, 0.4995,
                      0.2540, 0.2522, 0.5256, 0.5366, 0.5113, 0.5241]),
       size=(8285, 753935), nnz=111, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.5643, 0.5497, 0.5301, 0.5227, 0.5551, 0.5255, 0.5549, 0.5147, 0.5361,
        0.5268, 0.5562, 0.5428, 0.5434, 0.5204, 0.5447, 0.5013, 0.5288, 0.5574,
        0.5106, 0.5102, 0.5333, 0.5708, 0.5025, 0.5176, 0.5399, 0.5011, 0.5226,
        0.5616, 0.5463, 0.5483, 0.5287, 0.5739, 0.5175, 0.5116, 0.5428, 0.5175,
        0.5018, 0.5142, 0.5192, 0.5003, 0.5179, 0.5175, 0.5382, 0.5017, 0.5249,
        0.5202, 0.5446, 0.5137, 0.5159, 0.5243, 0.5030, 0.5428, 0.5080, 0.5044,
        0.5256, 0.5366, 0.5113, 0.5241], grad_fn=<IndexBackward0>)
num_high 58 original num_nodes 111
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(3.0605, grad_fn=<AddBackward0>)
size_num_loss 0.5225225225225225
epoch:  2 ; loss:  3.5830090045928955 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5350,   5350,   5410,   5410,   5410,   5410,   5447,
                          5447,   5448,   5448,   5485,   5485,   5486,   5486,
                          5486,   5493,   5493,   5493,   5494,   5494,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5845,   5845,   5845,   5845,   5845,   5845,   5845,
                          5845,   5845,   5845,   5845,   5845,   5845,   5845,
                          5845,   5845,   5845,   5845,   5845,   5923,   5923,
                          5923,   5923,   5923,   5923,   5923,   5941,   5941,
                          5941,   5941,   5941,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   5990,   5990,   7377,   7377,
                          7377,   7378,   7378,   7378,   7379,   7379,   7384,
                          7384,   7384,   7578,   7578,   7578,   7611,   7611,
                          7611,   7613,   7614,   7632,   7632,   7632,   7688,
                          7688,   7688,   7688,   7953,   7953,   7953],
                       [ 63985, 154975,  63918,  63936,  63985, 154975,  63985,
                        154975,  63985, 154975,  63985, 154975,  63918,  63985,
                        154975,  63918,  63985, 154975,  63936, 154975,  47348,
                         47366,  47415, 179830, 264212, 264213, 264214, 264219,
                        264413, 264446, 264448, 264449, 264467, 264523, 264788,
                         82948, 192283, 223781, 237607, 255927, 255928, 255929,
                        255934, 256128, 256161, 256163, 256164, 256182, 256238,
                        256503, 304201, 304250, 328345, 328346,  38642, 146255,
                        146331, 146338, 179830, 247897, 247953,  38642, 146255,
                        146339, 179830, 247644,  38642, 146195, 146255, 146292,
                        146293, 146330, 146331, 146338, 179830, 247642, 247643,
                        247649, 247843, 247876, 247953, 248218,  22415, 113695,
                        146255,  22415, 113695, 146255,  22415, 113646,  22415,
                        113695, 146255,  22415, 113695, 146255,  22415, 113695,
                        146255,  22415,  22415,  22415, 113628, 146255,  22415,
                        113628, 113695, 146255,  22415, 113695, 146255]]),
       values=tensor([0.4396, 0.4251, 0.1353, 0.1128, 0.1329, 0.3651, 0.4030,
                      0.3537, 0.3803, 0.4305, 0.3918, 0.3599, 0.1905, 0.1932,
                      0.3798, 0.2008, 0.2151, 0.3993, 0.3884, 0.3912, 0.1267,
                      0.1373, 0.1343, 0.4315, 0.0380, 0.0381, 0.0361, 0.0382,
                      0.0361, 0.0344, 0.0360, 0.0368, 0.0328, 0.0342, 0.0361,
                      0.4327, 0.3873, 0.3907, 0.3869, 0.0345, 0.0323, 0.0372,
                      0.0342, 0.0350, 0.0331, 0.0406, 0.0332, 0.0353, 0.0341,
                      0.0348, 0.1898, 0.1970, 0.1944, 0.2077, 0.3783, 0.1269,
                      0.1200, 0.1261, 0.4024, 0.1994, 0.2006, 0.4369, 0.1833,
                      0.2109, 0.4238, 0.4046, 0.4493, 0.0563, 0.0555, 0.0569,
                      0.0530, 0.0598, 0.0570, 0.0563, 0.3790, 0.0558, 0.0565,
                      0.0548, 0.0479, 0.0543, 0.0539, 0.0562, 0.3618, 0.3856,
                      0.3943, 0.3939, 0.4138, 0.3788, 0.4009, 0.3889, 0.3709,
                      0.3964, 0.3501, 0.3779, 0.4201, 0.3902, 0.3582, 0.4011,
                      0.3852, 0.3924, 0.4004, 0.3801, 0.3919, 0.4183, 0.4040,
                      0.1924, 0.1907, 0.4016, 0.4123, 0.3880, 0.4002]),
       size=(8285, 753935), nnz=111, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 111
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:29,  4.16s/it]
masked_hor: tensor(indices=tensor([[  5350,   5350,   5410,   5410,   5410,   5410,   5447,
                          5447,   5448,   5448,   5485,   5485,   5486,   5486,
                          5486,   5493,   5493,   5493,   5494,   5494,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5845,   5845,   5845,   5845,   5845,   5845,   5845,
                          5845,   5845,   5845,   5845,   5845,   5845,   5845,
                          5845,   5845,   5845,   5845,   5845,   5923,   5923,
                          5923,   5923,   5923,   5923,   5923,   5941,   5941,
                          5941,   5941,   5941,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   5990,   5990,   7377,   7377,
                          7377,   7378,   7378,   7378,   7379,   7379,   7384,
                          7384,   7384,   7578,   7578,   7578,   7611,   7611,
                          7611,   7613,   7614,   7632,   7632,   7632,   7688,
                          7688,   7688,   7688,   7953,   7953,   7953],
                       [ 63985, 154975,  63918,  63936,  63985, 154975,  63985,
                        154975,  63985, 154975,  63985, 154975,  63918,  63985,
                        154975,  63918,  63985, 154975,  63936, 154975,  47348,
                         47366,  47415, 179830, 264212, 264213, 264214, 264219,
                        264413, 264446, 264448, 264449, 264467, 264523, 264788,
                         82948, 192283, 223781, 237607, 255927, 255928, 255929,
                        255934, 256128, 256161, 256163, 256164, 256182, 256238,
                        256503, 304201, 304250, 328345, 328346,  38642, 146255,
                        146331, 146338, 179830, 247897, 247953,  38642, 146255,
                        146339, 179830, 247644,  38642, 146195, 146255, 146292,
                        146293, 146330, 146331, 146338, 179830, 247642, 247643,
                        247649, 247843, 247876, 247953, 248218,  22415, 113695,
                        146255,  22415, 113695, 146255,  22415, 113646,  22415,
                        113695, 146255,  22415, 113695, 146255,  22415, 113695,
                        146255,  22415,  22415,  22415, 113628, 146255,  22415,
                        113628, 113695, 146255,  22415, 113695, 146255]]),
       values=tensor([0.3423, 0.3291, 0.1040, 0.0905, 0.1019, 0.2952, 0.3297,
                      0.2850, 0.3089, 0.3339, 0.3194, 0.2905, 0.1548, 0.1572,
                      0.3084, 0.1540, 0.1669, 0.3262, 0.3163, 0.2988, 0.1029,
                      0.1057, 0.1030, 0.3348, 0.0294, 0.0294, 0.0276, 0.0295,
                      0.0295, 0.0262, 0.0294, 0.0283, 0.0265, 0.0278, 0.0295,
                      0.3359, 0.2954, 0.3184, 0.2950, 0.0280, 0.0260, 0.0286,
                      0.0278, 0.0285, 0.0267, 0.0317, 0.0268, 0.0288, 0.0277,
                      0.0283, 0.1444, 0.1506, 0.1583, 0.1602, 0.3071, 0.1031,
                      0.0968, 0.0959, 0.3291, 0.1527, 0.1640, 0.3398, 0.1483,
                      0.1630, 0.3278, 0.3107, 0.3511, 0.0430, 0.0423, 0.0464,
                      0.0429, 0.0461, 0.0465, 0.0430, 0.2881, 0.0426, 0.0432,
                      0.0446, 0.0384, 0.0441, 0.0410, 0.0458, 0.2923, 0.3137,
                      0.3015, 0.3012, 0.3189, 0.2880, 0.3074, 0.3167, 0.3004,
                      0.3034, 0.2818, 0.3068, 0.3246, 0.2980, 0.2890, 0.3279,
                      0.3133, 0.2999, 0.3069, 0.2891, 0.3195, 0.3230, 0.3306,
                      0.1466, 0.1451, 0.3080, 0.3176, 0.2960, 0.3068]),
       size=(8285, 753935), nnz=111, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 111
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.15s/it]
epoch:  4 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5350,   5350,   5410,   5410,   5410,   5410,   5447,
                          5447,   5448,   5448,   5485,   5485,   5486,   5486,
                          5486,   5493,   5493,   5493,   5494,   5494,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5845,   5845,   5845,   5845,   5845,   5845,   5845,
                          5845,   5845,   5845,   5845,   5845,   5845,   5845,
                          5845,   5845,   5845,   5845,   5845,   5923,   5923,
                          5923,   5923,   5923,   5923,   5923,   5941,   5941,
                          5941,   5941,   5941,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   5990,   5990,   7377,   7377,
                          7377,   7378,   7378,   7378,   7379,   7379,   7384,
                          7384,   7384,   7578,   7578,   7578,   7611,   7611,
                          7611,   7613,   7614,   7632,   7632,   7632,   7688,
                          7688,   7688,   7688,   7953,   7953,   7953],
                       [ 63985, 154975,  63918,  63936,  63985, 154975,  63985,
                        154975,  63985, 154975,  63985, 154975,  63918,  63985,
                        154975,  63918,  63985, 154975,  63936, 154975,  47348,
                         47366,  47415, 179830, 264212, 264213, 264214, 264219,
                        264413, 264446, 264448, 264449, 264467, 264523, 264788,
                         82948, 192283, 223781, 237607, 255927, 255928, 255929,
                        255934, 256128, 256161, 256163, 256164, 256182, 256238,
                        256503, 304201, 304250, 328345, 328346,  38642, 146255,
                        146331, 146338, 179830, 247897, 247953,  38642, 146255,
                        146339, 179830, 247644,  38642, 146195, 146255, 146292,
                        146293, 146330, 146331, 146338, 179830, 247642, 247643,
                        247649, 247843, 247876, 247953, 248218,  22415, 113695,
                        146255,  22415, 113695, 146255,  22415, 113646,  22415,
                        113695, 146255,  22415, 113695, 146255,  22415, 113695,
                        146255,  22415,  22415,  22415, 113628, 146255,  22415,
                        113628, 113695, 146255,  22415, 113695, 146255]]),
       values=tensor([0.2689, 0.2574, 0.0809, 0.0739, 0.0791, 0.2427, 0.2734,
                      0.2336, 0.2548, 0.2616, 0.2641, 0.2385, 0.1277, 0.1299,
                      0.2544, 0.1196, 0.1307, 0.2703, 0.2614, 0.2315, 0.0849,
                      0.0824, 0.0801, 0.2624, 0.0229, 0.0230, 0.0214, 0.0230,
                      0.0244, 0.0202, 0.0243, 0.0220, 0.0217, 0.0229, 0.0244,
                      0.2634, 0.2286, 0.2633, 0.2283, 0.0231, 0.0213, 0.0223,
                      0.0229, 0.0235, 0.0220, 0.0249, 0.0221, 0.0238, 0.0228,
                      0.0234, 0.1115, 0.1168, 0.1308, 0.1250, 0.2532, 0.0851,
                      0.0795, 0.0740, 0.2728, 0.1186, 0.1360, 0.2667, 0.1220,
                      0.1274, 0.2564, 0.2416, 0.2766, 0.0334, 0.0328, 0.0385,
                      0.0353, 0.0360, 0.0386, 0.0334, 0.2224, 0.0330, 0.0335,
                      0.0368, 0.0314, 0.0364, 0.0316, 0.0379, 0.2401, 0.2591,
                      0.2338, 0.2335, 0.2487, 0.2223, 0.2388, 0.2618, 0.2473,
                      0.2354, 0.2308, 0.2529, 0.2535, 0.2308, 0.2372, 0.2718,
                      0.2588, 0.2324, 0.2384, 0.2232, 0.2642, 0.2521, 0.2742,
                      0.1134, 0.1121, 0.2393, 0.2475, 0.2291, 0.2382]),
       size=(8285, 753935), nnz=111, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 111
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.14s/it]
masked_hor: tensor(indices=tensor([[  5350,   5350,   5410,   5410,   5410,   5410,   5447,
                          5447,   5448,   5448,   5485,   5485,   5486,   5486,
                          5486,   5493,   5493,   5493,   5494,   5494,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5845,   5845,   5845,   5845,   5845,   5845,   5845,
                          5845,   5845,   5845,   5845,   5845,   5845,   5845,
                          5845,   5845,   5845,   5845,   5845,   5923,   5923,
                          5923,   5923,   5923,   5923,   5923,   5941,   5941,
                          5941,   5941,   5941,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   5990,   5990,   7377,   7377,
                          7377,   7378,   7378,   7378,   7379,   7379,   7384,
                          7384,   7384,   7578,   7578,   7578,   7611,   7611,
                          7611,   7613,   7614,   7632,   7632,   7632,   7688,
                          7688,   7688,   7688,   7953,   7953,   7953],
                       [ 63985, 154975,  63918,  63936,  63985, 154975,  63985,
                        154975,  63985, 154975,  63985, 154975,  63918,  63985,
                        154975,  63918,  63985, 154975,  63936, 154975,  47348,
                         47366,  47415, 179830, 264212, 264213, 264214, 264219,
                        264413, 264446, 264448, 264449, 264467, 264523, 264788,
                         82948, 192283, 223781, 237607, 255927, 255928, 255929,
                        255934, 256128, 256161, 256163, 256164, 256182, 256238,
                        256503, 304201, 304250, 328345, 328346,  38642, 146255,
                        146331, 146338, 179830, 247897, 247953,  38642, 146255,
                        146339, 179830, 247644,  38642, 146195, 146255, 146292,
                        146293, 146330, 146331, 146338, 179830, 247642, 247643,
                        247649, 247843, 247876, 247953, 248218,  22415, 113695,
                        146255,  22415, 113695, 146255,  22415, 113646,  22415,
                        113695, 146255,  22415, 113695, 146255,  22415, 113695,
                        146255,  22415,  22415,  22415, 113628, 146255,  22415,
                        113628, 113695, 146255,  22415, 113695, 146255]]),
       values=tensor([0.2142, 0.2045, 0.0640, 0.0615, 0.0625, 0.2028, 0.2300,
                      0.1949, 0.2135, 0.2080, 0.2218, 0.1991, 0.1070, 0.1090,
                      0.2131, 0.0946, 0.1039, 0.2272, 0.2193, 0.1826, 0.0711,
                      0.0652, 0.0633, 0.2087, 0.0182, 0.0182, 0.0169, 0.0183,
                      0.0205, 0.0159, 0.0205, 0.0174, 0.0181, 0.0192, 0.0205,
                      0.2096, 0.1802, 0.2210, 0.1799, 0.0194, 0.0178, 0.0176,
                      0.0191, 0.0197, 0.0184, 0.0199, 0.0184, 0.0200, 0.0191,
                      0.0196, 0.0877, 0.0921, 0.1098, 0.0991, 0.2121, 0.0713,
                      0.0664, 0.0582, 0.2295, 0.0937, 0.1144, 0.2124, 0.1019,
                      0.1011, 0.2036, 0.1911, 0.2209, 0.0263, 0.0258, 0.0323,
                      0.0295, 0.0286, 0.0324, 0.0263, 0.1750, 0.0260, 0.0265,
                      0.0309, 0.0261, 0.0305, 0.0249, 0.0319, 0.2005, 0.2173,
                      0.1845, 0.1843, 0.1970, 0.1749, 0.1887, 0.2197, 0.2069,
                      0.1859, 0.1924, 0.2118, 0.2012, 0.1820, 0.1980, 0.2286,
                      0.2170, 0.1833, 0.1884, 0.1757, 0.2218, 0.2000, 0.2307,
                      0.0893, 0.0882, 0.1892, 0.1961, 0.1806, 0.1882]),
       size=(8285, 753935), nnz=111, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 111
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.14s/it]
epoch:  6 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5350,   5350,   5410,   5410,   5410,   5410,   5447,
                          5447,   5448,   5448,   5485,   5485,   5486,   5486,
                          5486,   5493,   5493,   5493,   5494,   5494,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5845,   5845,   5845,   5845,   5845,   5845,   5845,
                          5845,   5845,   5845,   5845,   5845,   5845,   5845,
                          5845,   5845,   5845,   5845,   5845,   5923,   5923,
                          5923,   5923,   5923,   5923,   5923,   5941,   5941,
                          5941,   5941,   5941,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   5990,   5990,   7377,   7377,
                          7377,   7378,   7378,   7378,   7379,   7379,   7384,
                          7384,   7384,   7578,   7578,   7578,   7611,   7611,
                          7611,   7613,   7614,   7632,   7632,   7632,   7688,
                          7688,   7688,   7688,   7953,   7953,   7953],
                       [ 63985, 154975,  63918,  63936,  63985, 154975,  63985,
                        154975,  63985, 154975,  63985, 154975,  63918,  63985,
                        154975,  63918,  63985, 154975,  63936, 154975,  47348,
                         47366,  47415, 179830, 264212, 264213, 264214, 264219,
                        264413, 264446, 264448, 264449, 264467, 264523, 264788,
                         82948, 192283, 223781, 237607, 255927, 255928, 255929,
                        255934, 256128, 256161, 256163, 256164, 256182, 256238,
                        256503, 304201, 304250, 328345, 328346,  38642, 146255,
                        146331, 146338, 179830, 247897, 247953,  38642, 146255,
                        146339, 179830, 247644,  38642, 146195, 146255, 146292,
                        146293, 146330, 146331, 146338, 179830, 247642, 247643,
                        247649, 247843, 247876, 247953, 248218,  22415, 113695,
                        146255,  22415, 113695, 146255,  22415, 113646,  22415,
                        113695, 146255,  22415, 113695, 146255,  22415, 113695,
                        146255,  22415,  22415,  22415, 113628, 146255,  22415,
                        113628, 113695, 146255,  22415, 113695, 146255]]),
       values=tensor([0.1735, 0.1652, 0.0516, 0.0520, 0.0503, 0.1721, 0.1963,
                      0.1652, 0.1816, 0.1683, 0.1889, 0.1689, 0.0910, 0.0928,
                      0.1813, 0.0761, 0.0841, 0.1938, 0.1868, 0.1468, 0.0605,
                      0.0526, 0.0510, 0.1689, 0.0147, 0.0147, 0.0136, 0.0148,
                      0.0175, 0.0127, 0.0174, 0.0140, 0.0154, 0.0163, 0.0175,
                      0.1695, 0.1447, 0.1883, 0.1445, 0.0165, 0.0151, 0.0142,
                      0.0163, 0.0168, 0.0156, 0.0161, 0.0156, 0.0170, 0.0162,
                      0.0167, 0.0704, 0.0741, 0.0935, 0.0799, 0.1804, 0.0606,
                      0.0563, 0.0467, 0.1958, 0.0754, 0.0975, 0.1720, 0.0866,
                      0.0817, 0.1645, 0.1539, 0.1792, 0.0212, 0.0207, 0.0276,
                      0.0251, 0.0231, 0.0276, 0.0212, 0.1404, 0.0209, 0.0213,
                      0.0263, 0.0220, 0.0259, 0.0200, 0.0271, 0.1701, 0.1850,
                      0.1484, 0.1482, 0.1589, 0.1403, 0.1519, 0.1871, 0.1757,
                      0.1495, 0.1630, 0.1801, 0.1624, 0.1463, 0.1679, 0.1950,
                      0.1847, 0.1474, 0.1516, 0.1410, 0.1890, 0.1614, 0.1969,
                      0.0717, 0.0708, 0.1523, 0.1581, 0.1451, 0.1515]),
       size=(8285, 753935), nnz=111, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 111
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:29<00:12,  4.14s/it]
masked_hor: tensor(indices=tensor([[  5350,   5350,   5410,   5410,   5410,   5410,   5447,
                          5447,   5448,   5448,   5485,   5485,   5486,   5486,
                          5486,   5493,   5493,   5493,   5494,   5494,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5845,   5845,   5845,   5845,   5845,   5845,   5845,
                          5845,   5845,   5845,   5845,   5845,   5845,   5845,
                          5845,   5845,   5845,   5845,   5845,   5923,   5923,
                          5923,   5923,   5923,   5923,   5923,   5941,   5941,
                          5941,   5941,   5941,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   5990,   5990,   7377,   7377,
                          7377,   7378,   7378,   7378,   7379,   7379,   7384,
                          7384,   7384,   7578,   7578,   7578,   7611,   7611,
                          7611,   7613,   7614,   7632,   7632,   7632,   7688,
                          7688,   7688,   7688,   7953,   7953,   7953],
                       [ 63985, 154975,  63918,  63936,  63985, 154975,  63985,
                        154975,  63985, 154975,  63985, 154975,  63918,  63985,
                        154975,  63918,  63985, 154975,  63936, 154975,  47348,
                         47366,  47415, 179830, 264212, 264213, 264214, 264219,
                        264413, 264446, 264448, 264449, 264467, 264523, 264788,
                         82948, 192283, 223781, 237607, 255927, 255928, 255929,
                        255934, 256128, 256161, 256163, 256164, 256182, 256238,
                        256503, 304201, 304250, 328345, 328346,  38642, 146255,
                        146331, 146338, 179830, 247897, 247953,  38642, 146255,
                        146339, 179830, 247644,  38642, 146195, 146255, 146292,
                        146293, 146330, 146331, 146338, 179830, 247642, 247643,
                        247649, 247843, 247876, 247953, 248218,  22415, 113695,
                        146255,  22415, 113695, 146255,  22415, 113646,  22415,
                        113695, 146255,  22415, 113695, 146255,  22415, 113695,
                        146255,  22415,  22415,  22415, 113628, 146255,  22415,
                        113628, 113695, 146255,  22415, 113695, 146255]]),
       values=tensor([0.1429, 0.1359, 0.0423, 0.0447, 0.0412, 0.1483, 0.1697,
                      0.1421, 0.1567, 0.1384, 0.1632, 0.1454, 0.0786, 0.0801,
                      0.1564, 0.0624, 0.0692, 0.1675, 0.1613, 0.1202, 0.0522,
                      0.0432, 0.0418, 0.1389, 0.0121, 0.0121, 0.0111, 0.0121,
                      0.0151, 0.0104, 0.0151, 0.0115, 0.0132, 0.0141, 0.0151,
                      0.1395, 0.1185, 0.1626, 0.1183, 0.0142, 0.0130, 0.0117,
                      0.0140, 0.0145, 0.0134, 0.0133, 0.0135, 0.0147, 0.0140,
                      0.0144, 0.0576, 0.0607, 0.0807, 0.0656, 0.1556, 0.0523,
                      0.0485, 0.0382, 0.1693, 0.0618, 0.0843, 0.1416, 0.0746,
                      0.0671, 0.1352, 0.1262, 0.1478, 0.0173, 0.0170, 0.0238,
                      0.0216, 0.0189, 0.0239, 0.0173, 0.1149, 0.0171, 0.0174,
                      0.0227, 0.0189, 0.0224, 0.0163, 0.0235, 0.1465, 0.1597,
                      0.1216, 0.1214, 0.1305, 0.1148, 0.1246, 0.1616, 0.1514,
                      0.1226, 0.1402, 0.1553, 0.1335, 0.1198, 0.1445, 0.1686,
                      0.1594, 0.1207, 0.1243, 0.1153, 0.1633, 0.1326, 0.1703,
                      0.0587, 0.0580, 0.1249, 0.1298, 0.1188, 0.1242]),
       size=(8285, 753935), nnz=111, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 111
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:33<00:08,  4.15s/it]
epoch:  8 ; loss:  -0.0 ; pred:  tensor([1.0000e+00, 4.3163e-36, 2.4030e-36, 2.6968e-36],
       grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5350,   5350,   5410,   5410,   5410,   5410,   5447,
                          5447,   5448,   5448,   5485,   5485,   5486,   5486,
                          5486,   5493,   5493,   5493,   5494,   5494,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5502,   5502,   5502,   5502,   5502,   5502,   5502,
                          5845,   5845,   5845,   5845,   5845,   5845,   5845,
                          5845,   5845,   5845,   5845,   5845,   5845,   5845,
                          5845,   5845,   5845,   5845,   5845,   5923,   5923,
                          5923,   5923,   5923,   5923,   5923,   5941,   5941,
                          5941,   5941,   5941,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   5990,   5990,   5990,   5990,
                          5990,   5990,   5990,   5990,   5990,   7377,   7377,
                          7377,   7378,   7378,   7378,   7379,   7379,   7384,
                          7384,   7384,   7578,   7578,   7578,   7611,   7611,
                          7611,   7613,   7614,   7632,   7632,   7632,   7688,
                          7688,   7688,   7688,   7953,   7953,   7953],
                       [ 63985, 154975,  63918,  63936,  63985, 154975,  63985,
                        154975,  63985, 154975,  63985, 154975,  63918,  63985,
                        154975,  63918,  63985, 154975,  63936, 154975,  47348,
                         47366,  47415, 179830, 264212, 264213, 264214, 264219,
                        264413, 264446, 264448, 264449, 264467, 264523, 264788,
                         82948, 192283, 223781, 237607, 255927, 255928, 255929,
                        255934, 256128, 256161, 256163, 256164, 256182, 256238,
                        256503, 304201, 304250, 328345, 328346,  38642, 146255,
                        146331, 146338, 179830, 247897, 247953,  38642, 146255,
                        146339, 179830, 247644,  38642, 146195, 146255, 146292,
                        146293, 146330, 146331, 146338, 179830, 247642, 247643,
                        247649, 247843, 247876, 247953, 248218,  22415, 113695,
                        146255,  22415, 113695, 146255,  22415, 113646,  22415,
                        113695, 146255,  22415, 113695, 146255,  22415, 113695,
                        146255,  22415,  22415,  22415, 113628, 146255,  22415,
                        113628, 113695, 146255,  22415, 113695, 146255]]),
       values=tensor([0.1197, 0.1136, 0.0353, 0.0389, 0.0344, 0.1294, 0.1486,
                      0.1239, 0.1369, 0.1158, 0.1428, 0.1269, 0.0687, 0.0700,
                      0.1367, 0.0521, 0.0579, 0.1467, 0.1411, 0.1002, 0.0456,
                      0.0361, 0.0349, 0.1162, 0.0101, 0.0101, 0.0093, 0.0101,
                      0.0132, 0.0087, 0.0132, 0.0096, 0.0116, 0.0123, 0.0132,
                      0.1167, 0.0988, 0.1422, 0.0986, 0.0124, 0.0113, 0.0097,
                      0.0123, 0.0127, 0.0117, 0.0111, 0.0118, 0.0128, 0.0122,
                      0.0126, 0.0480, 0.0506, 0.0706, 0.0548, 0.1360, 0.0457,
                      0.0423, 0.0318, 0.1483, 0.0515, 0.0739, 0.1185, 0.0651,
                      0.0561, 0.1130, 0.1054, 0.1239, 0.0145, 0.0142, 0.0209,
                      0.0189, 0.0158, 0.0209, 0.0145, 0.0957, 0.0143, 0.0146,
                      0.0198, 0.0165, 0.0196, 0.0136, 0.0205, 0.1278, 0.1396,
                      0.1014, 0.1012, 0.1090, 0.0956, 0.1040, 0.1413, 0.1323,
                      0.1022, 0.1222, 0.1357, 0.1116, 0.0998, 0.1261, 0.1476,
                      0.1394, 0.1007, 0.1037, 0.0961, 0.1428, 0.1108, 0.1492,
                      0.0489, 0.0483, 0.1042, 0.1084, 0.0990, 0.1037]),
       size=(8285, 753935), nnz=111, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 111
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.14s/it]
train modality

100%|##########| 10/10 [00:41<00:00,  4.15s/it]
  0%|          | 0/10 [00:00<?, ?it/s]
23
start training
masked_hor: tensor(indices=tensor([[  5502,   5502,   5502,   5502,   5502,   5502,   5778,
                          5778,   5778,   5778,   5778,   5778,   5778,   5778,
                          5778,   5778,   5778,   5778,   6843,   7452,   7477,
                          7478,   7479],
                       [179763, 263678, 264287, 264312, 264313, 264314,  82850,
                        129456, 193520, 223757, 237559, 255393, 256002, 256027,
                        256028, 256029, 328345, 328346,  22348,  22348,  22348,
                         22348,  22348]]),
       values=tensor([0.8275, 0.1616, 0.1560, 0.1187, 0.1537, 0.1308, 0.7286,
                      0.8169, 0.7512, 0.6894, 0.7015, 0.1490, 0.1324, 0.1473,
                      0.1157, 0.1556, 0.3564, 0.3538, 0.7750, 0.6935, 0.6954,
                      0.7274, 0.6804]),
       size=(8285, 753935), nnz=23, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8275, 0.8082, 0.7800, 0.5937, 0.7685, 0.6538, 0.7286, 0.8169, 0.7512,
        0.6894, 0.7015, 0.7448, 0.6620, 0.7363, 0.5785, 0.7779, 0.7127, 0.7075,
        0.7750, 0.6935, 0.6954, 0.7274, 0.6804], grad_fn=<IndexBackward0>)
num_high 23 original num_nodes 23
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(1.6197, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.16s/it]
epoch:  0 ; loss:  2.619734048843384 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5502,   5502,   5502,   5502,   5502,   5502,   5778,
                          5778,   5778,   5778,   5778,   5778,   5778,   5778,
                          5778,   5778,   5778,   5778,   6843,   7452,   7477,
                          7478,   7479],
                       [179763, 263678, 264287, 264312, 264313, 264314,  82850,
                        129456, 193520, 223757, 237559, 255393, 256002, 256027,
                        256028, 256029, 328345, 328346,  22348,  22348,  22348,
                         22348,  22348]]),
       values=tensor([0.7443, 0.1438, 0.1365, 0.0940, 0.1336, 0.1068, 0.6195,
                      0.7302, 0.6468, 0.5738, 0.5877, 0.1278, 0.1086, 0.1258,
                      0.0909, 0.1360, 0.3004, 0.2973, 0.6763, 0.5785, 0.5806,
                      0.6181, 0.5636]),
       size=(8285, 753935), nnz=23, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.7443, 0.7188, 0.6826, 0.6682, 0.5339, 0.6195, 0.7302, 0.6468, 0.5738,
        0.5877, 0.6390, 0.5430, 0.6288, 0.6800, 0.6008, 0.5947, 0.6763, 0.5785,
        0.5806, 0.6181, 0.5636], grad_fn=<IndexBackward0>)
num_high 21 original num_nodes 23
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(1.2840, grad_fn=<AddBackward0>)
size_num_loss 0.9130434782608695
masked_hor: tensor(indices=tensor([[  5502,   5502,   5502,   5502,   5502,   5502,   5778,
                          5778,   5778,   5778,   5778,   5778,   5778,   5778,
                          5778,   5778,   5778,   5778,   6843,   7452,   7477,
                          7478,   7479],
                       [179763, 263678, 264287, 264312, 264313, 264314,  82850,
                        129456, 193520, 223757, 237559, 255393, 256002, 256027,
                        256028, 256029, 328345, 328346,  22348,  22348,  22348,
                         22348,  22348]]),
       values=tensor([0.7964, 0.1225, 0.1132, 0.0776, 0.1100, 0.0821, 0.4974,
                      0.6691, 0.5267, 0.4500, 0.4642, 0.1037, 0.0838, 0.1015,
                      0.0747, 0.1126, 0.2389, 0.2357, 0.5591, 0.4548, 0.4570,
                      0.4959, 0.4396]),
       size=(8285, 753935), nnz=23, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.7964, 0.6127, 0.5660, 0.5501, 0.6691, 0.5267, 0.5183, 0.5073, 0.5631,
        0.5591], grad_fn=<IndexBackward0>)
num_high 10 original num_nodes 23
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.5101, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:33,  4.14s/it]
epoch:  2 ; loss:  0.9448784589767456 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5502,   5502,   5502,   5502,   5502,   5502,   5778,
                          5778,   5778,   5778,   5778,   5778,   5778,   5778,
                          5778,   5778,   5778,   5778,   6843,   7452,   7477,
                          7478,   7479],
                       [179763, 263678, 264287, 264312, 264313, 264314,  82850,
                        129456, 193520, 223757, 237559, 255393, 256002, 256027,
                        256028, 256029, 328345, 328346,  22348,  22348,  22348,
                         22348,  22348]]),
       values=tensor([0.8448, 0.1013, 0.0917, 0.0657, 0.0884, 0.0642, 0.4025,
                      0.7303, 0.4176, 0.3576, 0.3709, 0.0818, 0.0658, 0.0796,
                      0.0630, 0.0911, 0.1918, 0.1888, 0.4512, 0.3621, 0.3641,
                      0.4010, 0.3480]),
       size=(8285, 753935), nnz=23, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8448, 0.5065, 0.7303], grad_fn=<IndexBackward0>)
num_high 3 original num_nodes 23
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(-0.0878, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:28,  4.13s/it]
masked_hor: tensor(indices=tensor([[  5502,   5502,   5502,   5502,   5502,   5502,   5778,
                          5778,   5778,   5778,   5778,   5778,   5778,   5778,
                          5778,   5778,   5778,   5778,   6843,   7452,   7477,
                          7478,   7479],
                       [179763, 263678, 264287, 264312, 264313, 264314,  82850,
                        129456, 193520, 223757, 237559, 255393, 256002, 256027,
                        256028, 256029, 328345, 328346,  22348,  22348,  22348,
                         22348,  22348]]),
       values=tensor([0.8770, 0.0837, 0.0746, 0.0567, 0.0713, 0.0513, 0.3295,
                      0.7747, 0.3335, 0.2888, 0.3008, 0.0651, 0.0527, 0.0630,
                      0.0542, 0.0740, 0.1562, 0.1535, 0.3658, 0.2928, 0.2947,
                      0.3282, 0.2802]),
       size=(8285, 753935), nnz=23, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8770, 0.7747], grad_fn=<IndexBackward0>)
num_high 2 original num_nodes 23
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.1128, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.13s/it]
epoch:  4 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5502,   5502,   5502,   5502,   5502,   5502,   5778,
                          5778,   5778,   5778,   5778,   5778,   5778,   5778,
                          5778,   5778,   5778,   5778,   6843,   7452,   7477,
                          7478,   7479],
                       [179763, 263678, 264287, 264312, 264313, 264314,  82850,
                        129456, 193520, 223757, 237559, 255393, 256002, 256027,
                        256028, 256029, 328345, 328346,  22348,  22348,  22348,
                         22348,  22348]]),
       values=tensor([0.8997, 0.0696, 0.0612, 0.0497, 0.0582, 0.0418, 0.2735,
                      0.8080, 0.2696, 0.2373, 0.2479, 0.0525, 0.0430, 0.0506,
                      0.0474, 0.0607, 0.1291, 0.1267, 0.2994, 0.2408, 0.2424,
                      0.2724, 0.2297]),
       size=(8285, 753935), nnz=23, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.8997, 0.8080], grad_fn=<IndexBackward0>)
num_high 2 original num_nodes 23
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.1287, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:21<00:21,  4.26s/it]
masked_hor: tensor(indices=tensor([[  5502,   5502,   5502,   5502,   5502,   5502,   5778,
                          5778,   5778,   5778,   5778,   5778,   5778,   5778,
                          5778,   5778,   5778,   5778,   6843,   7452,   7477,
                          7478,   7479],
                       [179763, 263678, 264287, 264312, 264313, 264314,  82850,
                        129456, 193520, 223757, 237559, 255393, 256002, 256027,
                        256028, 256029, 328345, 328346,  22348,  22348,  22348,
                         22348,  22348]]),
       values=tensor([0.9161, 0.0584, 0.0509, 0.0442, 0.0481, 0.0347, 0.2303,
                      0.8336, 0.2211, 0.1982, 0.2075, 0.0429, 0.0358, 0.0413,
                      0.0421, 0.0503, 0.1083, 0.1062, 0.2481, 0.2013, 0.2028,
                      0.2293, 0.1916]),
       size=(8285, 753935), nnz=23, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9161, 0.8336], grad_fn=<IndexBackward0>)
num_high 2 original num_nodes 23
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.1409, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:25<00:17,  4.44s/it]
epoch:  6 ; loss:  -0.0 ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5502,   5502,   5502,   5502,   5502,   5502,   5778,
                          5778,   5778,   5778,   5778,   5778,   5778,   5778,
                          5778,   5778,   5778,   5778,   6843,   7452,   7477,
                          7478,   7479],
                       [179763, 263678, 264287, 264312, 264313, 264314,  82850,
                        129456, 193520, 223757, 237559, 255393, 256002, 256027,
                        256028, 256029, 328345, 328346,  22348,  22348,  22348,
                         22348,  22348]]),
       values=tensor([0.9284, 0.0495, 0.0428, 0.0397, 0.0403, 0.0293, 0.1967,
                      0.8536, 0.1842, 0.1683, 0.1765, 0.0357, 0.0302, 0.0342,
                      0.0377, 0.0423, 0.0923, 0.0904, 0.2085, 0.1710, 0.1722,
                      0.1958, 0.1624]),
       size=(8285, 753935), nnz=23, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9284, 0.8536], grad_fn=<IndexBackward0>)
num_high 2 original num_nodes 23
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.1502, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:30<00:13,  4.55s/it]
masked_hor: tensor(indices=tensor([[  5502,   5502,   5502,   5502,   5502,   5502,   5778,
                          5778,   5778,   5778,   5778,   5778,   5778,   5778,
                          5778,   5778,   5778,   5778,   6843,   7452,   7477,
                          7478,   7479],
                       [179763, 263678, 264287, 264312, 264313, 264314,  82850,
                        129456, 193520, 223757, 237559, 255393, 256002, 256027,
                        256028, 256029, 328345, 328346,  22348,  22348,  22348,
                         22348,  22348]]),
       values=tensor([0.9379, 0.0425, 0.0365, 0.0360, 0.0342, 0.0251, 0.1703,
                      0.8696, 0.1558, 0.1449, 0.1522, 0.0301, 0.0260, 0.0288,
                      0.0342, 0.0361, 0.0797, 0.0780, 0.1775, 0.1474, 0.1485,
                      0.1694, 0.1397]),
       size=(8285, 753935), nnz=23, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9379, 0.8696], grad_fn=<IndexBackward0>)
num_high 2 original num_nodes 23
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.1574, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:35<00:09,  4.69s/it]
epoch:  8 ; loss:  -0.0 ; pred:  tensor([1.0000e+00, 2.1580e-42, 3.0338e-42, 1.8091e-42],
       grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5502,   5502,   5502,   5502,   5502,   5502,   5778,
                          5778,   5778,   5778,   5778,   5778,   5778,   5778,
                          5778,   5778,   5778,   5778,   6843,   7452,   7477,
                          7478,   7479],
                       [179763, 263678, 264287, 264312, 264313, 264314,  82850,
                        129456, 193520, 223757, 237559, 255393, 256002, 256027,
                        256028, 256029, 328345, 328346,  22348,  22348,  22348,
                         22348,  22348]]),
       values=tensor([0.9453, 0.0369, 0.0316, 0.0330, 0.0295, 0.0219, 0.1492,
                      0.8825, 0.1336, 0.1265, 0.1331, 0.0258, 0.0226, 0.0246,
                      0.0313, 0.0312, 0.0698, 0.0682, 0.1532, 0.1287, 0.1297,
                      0.1485, 0.1219]),
       size=(8285, 753935), nnz=23, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(0, dtype=torch.int32)
mask_without_small tensor([0.9453, 0.8825], grad_fn=<IndexBackward0>)
num_high 2 original num_nodes 23
pred_loss tensor(-0., grad_fn=<MulBackward0>)
size_loss tensor(0.1631, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:40<00:04,  4.79s/it]
most important relations 5778:  Counter({'abstract': 2})
high: [Counter({'abstract': 2})]
least important relations: 5778 Counter({'abstract': 21})
train modality

100%|##########| 10/10 [00:45<00:00,  4.52s/it]
61
start training
masked_hor: tensor(indices=tensor([[  5412,   5420,   5421,   5422,   5423,   5429,   5437,
                          5451,   5455,   5455,   5457,   5464,   5731,   5731,
                          5731,   5731,   5731,   5731,   5731,   5731,   5731,
                          5731,   5731,   5731,   5731,   5731,   5731,   5731,
                          5731,   5731,   5731,   5924,   5924,   5991,   5991,
                          6842,   6842,   6852,   6852,   6896,   6896,   7361,
                          7437,   7466,   7466,   7466,   7466,   7466,   7466,
                          7556,   7556,   7556,   7874,   7874,   7879,   7879,
                          7881,   7881,   7881,   7902,   7902],
                       [154861, 154861, 154861, 154861, 154861, 154861, 154861,
                        154861,  63919, 154861, 154861, 154861,  82850, 129459,
                        193578, 223803, 237523, 255392, 255402, 255446, 255911,
                        255987, 256016, 256106, 256424, 256429, 256431, 256452,
                        304184, 304251, 328345, 146300, 179716, 179716, 247821,
                         22301, 146296,  22301, 146296,  22301, 146296,  22301,
                         22301,  22301, 146257, 146268, 146282, 146296, 146302,
                         22301, 113696, 146296,  22301, 146296,  22301, 146296,
                         22301, 146268, 146296,  22301, 146296]]),
       values=tensor([0.7940, 0.7806, 0.7619, 0.6499, 0.7545, 0.6849, 0.7295,
                      0.6703, 0.7035, 0.7856, 0.7169, 0.6783, 0.7044, 0.7107,
                      0.7028, 0.7573, 0.7854, 0.0659, 0.0648, 0.0679, 0.0639,
                      0.0698, 0.0690, 0.0715, 0.0704, 0.0704, 0.0684, 0.0705,
                      0.3614, 0.3663, 0.7220, 0.7605, 0.6790, 0.6989, 0.7230,
                      0.7877, 0.7423, 0.7157, 0.7418, 0.7026, 0.6722, 0.7650,
                      0.6986, 0.7091, 0.1367, 0.1475, 0.1555, 0.1430, 0.1559,
                      0.7604, 0.8024, 0.7493, 0.7432, 0.7506, 0.7146, 0.7027,
                      0.7249, 0.3746, 0.3665, 0.7460, 0.7510]),
       size=(8285, 753935), nnz=61, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([0.7940, 0.7806, 0.7619, 0.6499, 0.7545, 0.6849, 0.7295, 0.6703, 0.7035,
        0.7856, 0.7169, 0.6783, 0.7044, 0.7107, 0.7028, 0.7573, 0.7854, 0.7253,
        0.7130, 0.7464, 0.7032, 0.7677, 0.7586, 0.7866, 0.7741, 0.7746, 0.7522,
        0.7759, 0.7227, 0.7325, 0.7220, 0.7605, 0.6790, 0.6989, 0.7230, 0.7877,
        0.7423, 0.7157, 0.7418, 0.7026, 0.6722, 0.7650, 0.6986, 0.7091, 0.6834,
        0.7373, 0.7774, 0.7149, 0.7793, 0.7604, 0.8024, 0.7493, 0.7432, 0.7506,
        0.7146, 0.7027, 0.7249, 0.7493, 0.7331, 0.7460, 0.7510],
       grad_fn=<IndexBackward0>)
num_high 61 original num_nodes 61
pred_loss tensor(inf, grad_fn=<MulBackward0>)
size_loss tensor(4.4715, grad_fn=<AddBackward0>)
size_num_loss 1.0
  0%|          | 0/10 [00:00<?, ?it/s]
epoch:  0 ; loss:  inf ; pred:  tensor([1., 0., 0., 0.], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5412,   5420,   5421,   5422,   5423,   5429,   5437,
                          5451,   5455,   5455,   5457,   5464,   5731,   5731,
                          5731,   5731,   5731,   5731,   5731,   5731,   5731,
                          5731,   5731,   5731,   5731,   5731,   5731,   5731,
                          5731,   5731,   5731,   5924,   5924,   5991,   5991,
                          6842,   6842,   6852,   6852,   6896,   6896,   7361,
                          7437,   7466,   7466,   7466,   7466,   7466,   7466,
                          7556,   7556,   7556,   7874,   7874,   7879,   7879,
                          7881,   7881,   7881,   7902,   7902],
                       [154861, 154861, 154861, 154861, 154861, 154861, 154861,
                        154861,  63919, 154861, 154861, 154861,  82850, 129459,
                        193578, 223803, 237523, 255392, 255402, 255446, 255911,
                        255987, 256016, 256106, 256424, 256429, 256431, 256452,
                        304184, 304251, 328345, 146300, 179716, 179716, 247821,
                         22301, 146296,  22301, 146296,  22301, 146296,  22301,
                         22301,  22301, 146257, 146268, 146282, 146296, 146302,
                         22301, 113696, 146296,  22301, 146296,  22301, 146296,
                         22301, 146268, 146296,  22301, 146296]]),
       values=tensor([0.7003, 0.6834, 0.6600, 0.5297, 0.6509, 0.5687, 0.6206,
                      0.5522, 0.5900, 0.6897, 0.6056, 0.5612,    nan, 0.5984,
                         nan, 0.6543, 0.6894, 0.0560, 0.0546, 0.0583, 0.0536,
                      0.0606, 0.0596, 0.0628, 0.0614, 0.0614, 0.0589, 0.0616,
                      0.3063, 0.3121, 0.6117,    nan,    nan,    nan,    nan,
                         nan,    nan,    nan,    nan,    nan,    nan,    nan,
                         nan,    nan,    nan,    nan,    nan,    nan,    nan,
                         nan,    nan,    nan,    nan,    nan,    nan,    nan,
                         nan,    nan,    nan,    nan,    nan]),
       size=(8285, 753935), nnz=61, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([0.7003, 0.6834, 0.6600, 0.5297, 0.6509, 0.5687, 0.6206, 0.5522, 0.5900,
        0.6897, 0.6056, 0.5612, 0.5984, 0.6543, 0.6894, 0.6156, 0.6011, 0.6410,
        0.5897, 0.6671, 0.6559, 0.6909, 0.6752, 0.6758, 0.6481, 0.6774, 0.6126,
        0.6242, 0.6117], grad_fn=<IndexBackward0>)
num_high 29 original num_nodes 61
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(1.8124, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.14s/it]
masked_hor: tensor(indices=tensor([[  5412,   5420,   5421,   5422,   5423,   5429,   5437,
                          5451,   5455,   5455,   5457,   5464,   5731,   5731,
                          5731,   5731,   5731,   5731,   5731,   5731,   5731,
                          5731,   5731,   5731,   5731,   5731,   5731,   5731,
                          5731,   5731,   5731,   5924,   5924,   5991,   5991,
                          6842,   6842,   6852,   6852,   6896,   6896,   7361,
                          7437,   7466,   7466,   7466,   7466,   7466,   7466,
                          7556,   7556,   7556,   7874,   7874,   7879,   7879,
                          7881,   7881,   7881,   7902,   7902],
                       [154861, 154861, 154861, 154861, 154861, 154861, 154861,
                        154861,  63919, 154861, 154861, 154861,  82850, 129459,
                        193578, 223803, 237523, 255392, 255402, 255446, 255911,
                        255987, 256016, 256106, 256424, 256429, 256431, 256452,
                        304184, 304251, 328345, 146300, 179716, 179716, 247821,
                         22301, 146296,  22301, 146296,  22301, 146296,  22301,
                         22301,  22301, 146257, 146268, 146282, 146296, 146302,
                         22301, 113696, 146296,  22301, 146296,  22301, 146296,
                         22301, 146268, 146296,  22301, 146296]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan]),
       size=(8285, 753935), nnz=61, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 61
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:33,  4.13s/it]
epoch:  2 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5412,   5420,   5421,   5422,   5423,   5429,   5437,
                          5451,   5455,   5455,   5457,   5464,   5731,   5731,
                          5731,   5731,   5731,   5731,   5731,   5731,   5731,
                          5731,   5731,   5731,   5731,   5731,   5731,   5731,
                          5731,   5731,   5731,   5924,   5924,   5991,   5991,
                          6842,   6842,   6852,   6852,   6896,   6896,   7361,
                          7437,   7466,   7466,   7466,   7466,   7466,   7466,
                          7556,   7556,   7556,   7874,   7874,   7879,   7879,
                          7881,   7881,   7881,   7902,   7902],
                       [154861, 154861, 154861, 154861, 154861, 154861, 154861,
                        154861,  63919, 154861, 154861, 154861,  82850, 129459,
                        193578, 223803, 237523, 255392, 255402, 255446, 255911,
                        255987, 256016, 256106, 256424, 256429, 256431, 256452,
                        304184, 304251, 328345, 146300, 179716, 179716, 247821,
                         22301, 146296,  22301, 146296,  22301, 146296,  22301,
                         22301,  22301, 146257, 146268, 146282, 146296, 146302,
                         22301, 113696, 146296,  22301, 146296,  22301, 146296,
                         22301, 146268, 146296,  22301, 146296]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan]),
       size=(8285, 753935), nnz=61, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 61
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:28,  4.13s/it]
masked_hor: tensor(indices=tensor([[  5412,   5420,   5421,   5422,   5423,   5429,   5437,
                          5451,   5455,   5455,   5457,   5464,   5731,   5731,
                          5731,   5731,   5731,   5731,   5731,   5731,   5731,
                          5731,   5731,   5731,   5731,   5731,   5731,   5731,
                          5731,   5731,   5731,   5924,   5924,   5991,   5991,
                          6842,   6842,   6852,   6852,   6896,   6896,   7361,
                          7437,   7466,   7466,   7466,   7466,   7466,   7466,
                          7556,   7556,   7556,   7874,   7874,   7879,   7879,
                          7881,   7881,   7881,   7902,   7902],
                       [154861, 154861, 154861, 154861, 154861, 154861, 154861,
                        154861,  63919, 154861, 154861, 154861,  82850, 129459,
                        193578, 223803, 237523, 255392, 255402, 255446, 255911,
                        255987, 256016, 256106, 256424, 256429, 256431, 256452,
                        304184, 304251, 328345, 146300, 179716, 179716, 247821,
                         22301, 146296,  22301, 146296,  22301, 146296,  22301,
                         22301,  22301, 146257, 146268, 146282, 146296, 146302,
                         22301, 113696, 146296,  22301, 146296,  22301, 146296,
                         22301, 146268, 146296,  22301, 146296]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan]),
       size=(8285, 753935), nnz=61, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 61
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)


 50%|#####     | 5/10 [00:20<00:20,  4.12s/it]
epoch:  4 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5412,   5420,   5421,   5422,   5423,   5429,   5437,
                          5451,   5455,   5455,   5457,   5464,   5731,   5731,
                          5731,   5731,   5731,   5731,   5731,   5731,   5731,
                          5731,   5731,   5731,   5731,   5731,   5731,   5731,
                          5731,   5731,   5731,   5924,   5924,   5991,   5991,
                          6842,   6842,   6852,   6852,   6896,   6896,   7361,
                          7437,   7466,   7466,   7466,   7466,   7466,   7466,
                          7556,   7556,   7556,   7874,   7874,   7879,   7879,
                          7881,   7881,   7881,   7902,   7902],
                       [154861, 154861, 154861, 154861, 154861, 154861, 154861,
                        154861,  63919, 154861, 154861, 154861,  82850, 129459,
                        193578, 223803, 237523, 255392, 255402, 255446, 255911,
                        255987, 256016, 256106, 256424, 256429, 256431, 256452,
                        304184, 304251, 328345, 146300, 179716, 179716, 247821,
                         22301, 146296,  22301, 146296,  22301, 146296,  22301,
                         22301,  22301, 146257, 146268, 146282, 146296, 146302,
                         22301, 113696, 146296,  22301, 146296,  22301, 146296,
                         22301, 146268, 146296,  22301, 146296]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan]),
       size=(8285, 753935), nnz=61, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 61
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.13s/it]
masked_hor: tensor(indices=tensor([[  5412,   5420,   5421,   5422,   5423,   5429,   5437,
                          5451,   5455,   5455,   5457,   5464,   5731,   5731,
                          5731,   5731,   5731,   5731,   5731,   5731,   5731,
                          5731,   5731,   5731,   5731,   5731,   5731,   5731,
                          5731,   5731,   5731,   5924,   5924,   5991,   5991,
                          6842,   6842,   6852,   6852,   6896,   6896,   7361,
                          7437,   7466,   7466,   7466,   7466,   7466,   7466,
                          7556,   7556,   7556,   7874,   7874,   7879,   7879,
                          7881,   7881,   7881,   7902,   7902],
                       [154861, 154861, 154861, 154861, 154861, 154861, 154861,
                        154861,  63919, 154861, 154861, 154861,  82850, 129459,
                        193578, 223803, 237523, 255392, 255402, 255446, 255911,
                        255987, 256016, 256106, 256424, 256429, 256431, 256452,
                        304184, 304251, 328345, 146300, 179716, 179716, 247821,
                         22301, 146296,  22301, 146296,  22301, 146296,  22301,
                         22301,  22301, 146257, 146268, 146282, 146296, 146302,
                         22301, 113696, 146296,  22301, 146296,  22301, 146296,
                         22301, 146268, 146296,  22301, 146296]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan]),
       size=(8285, 753935), nnz=61, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 61
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:28<00:12,  4.13s/it]
epoch:  6 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5412,   5420,   5421,   5422,   5423,   5429,   5437,
                          5451,   5455,   5455,   5457,   5464,   5731,   5731,
                          5731,   5731,   5731,   5731,   5731,   5731,   5731,
                          5731,   5731,   5731,   5731,   5731,   5731,   5731,
                          5731,   5731,   5731,   5924,   5924,   5991,   5991,
                          6842,   6842,   6852,   6852,   6896,   6896,   7361,
                          7437,   7466,   7466,   7466,   7466,   7466,   7466,
                          7556,   7556,   7556,   7874,   7874,   7879,   7879,
                          7881,   7881,   7881,   7902,   7902],
                       [154861, 154861, 154861, 154861, 154861, 154861, 154861,
                        154861,  63919, 154861, 154861, 154861,  82850, 129459,
                        193578, 223803, 237523, 255392, 255402, 255446, 255911,
                        255987, 256016, 256106, 256424, 256429, 256431, 256452,
                        304184, 304251, 328345, 146300, 179716, 179716, 247821,
                         22301, 146296,  22301, 146296,  22301, 146296,  22301,
                         22301,  22301, 146257, 146268, 146282, 146296, 146302,
                         22301, 113696, 146296,  22301, 146296,  22301, 146296,
                         22301, 146268, 146296,  22301, 146296]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan]),
       size=(8285, 753935), nnz=61, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 61
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)
size_num_loss 0.0
masked_hor: tensor(indices=tensor([[  5412,   5420,   5421,   5422,   5423,   5429,   5437,
                          5451,   5455,   5455,   5457,   5464,   5731,   5731,
                          5731,   5731,   5731,   5731,   5731,   5731,   5731,
                          5731,   5731,   5731,   5731,   5731,   5731,   5731,
                          5731,   5731,   5731,   5924,   5924,   5991,   5991,
                          6842,   6842,   6852,   6852,   6896,   6896,   7361,
                          7437,   7466,   7466,   7466,   7466,   7466,   7466,
                          7556,   7556,   7556,   7874,   7874,   7879,   7879,
                          7881,   7881,   7881,   7902,   7902],
                       [154861, 154861, 154861, 154861, 154861, 154861, 154861,
                        154861,  63919, 154861, 154861, 154861,  82850, 129459,
                        193578, 223803, 237523, 255392, 255402, 255446, 255911,
                        255987, 256016, 256106, 256424, 256429, 256431, 256452,
                        304184, 304251, 328345, 146300, 179716, 179716, 247821,
                         22301, 146296,  22301, 146296,  22301, 146296,  22301,
                         22301,  22301, 146257, 146268, 146282, 146296, 146302,
                         22301, 113696, 146296,  22301, 146296,  22301, 146296,
                         22301, 146268, 146296,  22301, 146296]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan]),
       size=(8285, 753935), nnz=61, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 61
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:33<00:08,  4.13s/it]
epoch:  8 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5412,   5420,   5421,   5422,   5423,   5429,   5437,
                          5451,   5455,   5455,   5457,   5464,   5731,   5731,
                          5731,   5731,   5731,   5731,   5731,   5731,   5731,
                          5731,   5731,   5731,   5731,   5731,   5731,   5731,
                          5731,   5731,   5731,   5924,   5924,   5991,   5991,
                          6842,   6842,   6852,   6852,   6896,   6896,   7361,
                          7437,   7466,   7466,   7466,   7466,   7466,   7466,
                          7556,   7556,   7556,   7874,   7874,   7879,   7879,
                          7881,   7881,   7881,   7902,   7902],
                       [154861, 154861, 154861, 154861, 154861, 154861, 154861,
                        154861,  63919, 154861, 154861, 154861,  82850, 129459,
                        193578, 223803, 237523, 255392, 255402, 255446, 255911,
                        255987, 256016, 256106, 256424, 256429, 256431, 256452,
                        304184, 304251, 328345, 146300, 179716, 179716, 247821,
                         22301, 146296,  22301, 146296,  22301, 146296,  22301,
                         22301,  22301, 146257, 146268, 146282, 146296, 146302,
                         22301, 113696, 146296,  22301, 146296,  22301, 146296,
                         22301, 146268, 146296,  22301, 146296]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan]),
       size=(8285, 753935), nnz=61, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 61
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.13s/it]
train modality

100%|##########| 10/10 [00:41<00:00,  4.13s/it]
7
start training
masked_hor: tensor(indices=tensor([[  5905,   5905,   5905,   5905,   5905,   5905,   7693],
                       [ 82877, 192814, 223723, 237650, 256243, 328345,  22475]]),
       values=tensor([0.7649, 0.7444, 0.7550, 0.7546, 0.5986, 0.7110, 0.8985]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([0.7649, 0.7444, 0.7550, 0.7546, 0.5986, 0.7110, 0.8985],
       grad_fn=<IndexBackward0>)
num_high 7 original num_nodes 7
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(0.4449, grad_fn=<AddBackward0>)
size_num_loss 1.0
  0%|          | 0/10 [00:00<?, ?it/s]
epoch:  0 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5905,   5905,   5905,   5905,   5905,   5905,   7693],
                       [ 82877, 192814, 223723, 237650, 256243, 328345,  22475]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 7
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)


 20%|##        | 2/10 [00:08<00:32,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5905,   5905,   5905,   5905,   5905,   5905,   7693],
                       [ 82877, 192814, 223723, 237650, 256243, 328345,  22475]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 7
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:28,  4.12s/it]
epoch:  2 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5905,   5905,   5905,   5905,   5905,   5905,   7693],
                       [ 82877, 192814, 223723, 237650, 256243, 328345,  22475]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 7
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5905,   5905,   5905,   5905,   5905,   5905,   7693],
                       [ 82877, 192814, 223723, 237650, 256243, 328345,  22475]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 7
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)
size_num_loss 0.0
epoch:  4 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5905,   5905,   5905,   5905,   5905,   5905,   7693],
                       [ 82877, 192814, 223723, 237650, 256243, 328345,  22475]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 7
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5905,   5905,   5905,   5905,   5905,   5905,   7693],
                       [ 82877, 192814, 223723, 237650, 256243, 328345,  22475]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 7
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.13s/it]
epoch:  6 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5905,   5905,   5905,   5905,   5905,   5905,   7693],
                       [ 82877, 192814, 223723, 237650, 256243, 328345,  22475]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 7
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:28<00:12,  4.13s/it]
masked_hor: tensor(indices=tensor([[  5905,   5905,   5905,   5905,   5905,   5905,   7693],
                       [ 82877, 192814, 223723, 237650, 256243, 328345,  22475]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 7
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:33<00:08,  4.13s/it]
epoch:  8 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5905,   5905,   5905,   5905,   5905,   5905,   7693],
                       [ 82877, 192814, 223723, 237650, 256243, 328345,  22475]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 7
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.13s/it]
train modality

100%|##########| 10/10 [00:41<00:00,  4.13s/it]
31
start training
masked_hor: tensor(indices=tensor([[  5385,   5385,   5503,   5503,   5503,   5503,   5503,
                          5808,   5808,   5808,   5808,   5808,   5808,   5808,
                          5808,   5808,   5808,   5808,   5970,   5970,   5970,
                          5970,   5970,   6927,   6927,   7069,   7069,   7069,
                          7081,   7081,   7081],
                       [ 63965, 154938,  47395, 179793, 263762, 263904, 263916,
                         82850, 132434, 193410, 223739, 240138, 255477, 255619,
                        255631, 304230, 328345, 328346,  38643, 146230, 179793,
                        247334, 247346,  22378, 146230,  22378, 113675, 146230,
                         22378, 113675, 146230]]),
       values=tensor([0.8160, 0.7986, 0.7736, 0.6142, 0.2545, 0.2217, 0.2430,
                      0.6439, 0.6919, 0.8051, 0.7110, 0.6555, 0.2311, 0.2341,
                      0.2303, 0.7201, 0.3283, 0.3427, 0.7198, 0.8079, 0.7467,
                      0.3547, 0.3730, 0.7473, 0.6467, 0.7778, 0.6849, 0.7000,
                      0.6629, 0.8233, 0.6652]),
       size=(8285, 753935), nnz=31, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([0.8160, 0.7986, 0.7736, 0.6142, 0.7636, 0.6652, 0.7289, 0.6439, 0.6919,
        0.8051, 0.7110, 0.6555, 0.6932, 0.7022, 0.6910, 0.7201, 0.6566, 0.6854,
        0.7198, 0.8079, 0.7467, 0.7093, 0.7460, 0.7473, 0.6467, 0.7778, 0.6849,
        0.7000, 0.6629, 0.8233, 0.6652], grad_fn=<IndexBackward0>)
num_high 31 original num_nodes 31
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(2.1932, grad_fn=<AddBackward0>)
size_num_loss 1.0
  0%|          | 0/10 [00:00<?, ?it/s]
epoch:  0 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5385,   5385,   5503,   5503,   5503,   5503,   5503,
                          5808,   5808,   5808,   5808,   5808,   5808,   5808,
                          5808,   5808,   5808,   5808,   5970,   5970,   5970,
                          5970,   5970,   6927,   6927,   7069,   7069,   7069,
                          7081,   7081,   7081],
                       [ 63965, 154938,  47395, 179793, 263762, 263904, 263916,
                         82850, 132434, 193410, 223739, 240138, 255477, 255619,
                        255631, 304230, 328345, 328346,  38643, 146230, 179793,
                        247334, 247346,  22378, 146230,  22378, 113675, 146230,
                         22378, 113675, 146230]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=31, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 31
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5385,   5385,   5503,   5503,   5503,   5503,   5503,
                          5808,   5808,   5808,   5808,   5808,   5808,   5808,
                          5808,   5808,   5808,   5808,   5970,   5970,   5970,
                          5970,   5970,   6927,   6927,   7069,   7069,   7069,
                          7081,   7081,   7081],
                       [ 63965, 154938,  47395, 179793, 263762, 263904, 263916,
                         82850, 132434, 193410, 223739, 240138, 255477, 255619,
                        255631, 304230, 328345, 328346,  38643, 146230, 179793,
                        247334, 247346,  22378, 146230,  22378, 113675, 146230,
                         22378, 113675, 146230]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=31, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 31
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:33,  4.14s/it]
epoch:  2 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5385,   5385,   5503,   5503,   5503,   5503,   5503,
                          5808,   5808,   5808,   5808,   5808,   5808,   5808,
                          5808,   5808,   5808,   5808,   5970,   5970,   5970,
                          5970,   5970,   6927,   6927,   7069,   7069,   7069,
                          7081,   7081,   7081],
                       [ 63965, 154938,  47395, 179793, 263762, 263904, 263916,
                         82850, 132434, 193410, 223739, 240138, 255477, 255619,
                        255631, 304230, 328345, 328346,  38643, 146230, 179793,
                        247334, 247346,  22378, 146230,  22378, 113675, 146230,
                         22378, 113675, 146230]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=31, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 31
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:28,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5385,   5385,   5503,   5503,   5503,   5503,   5503,
                          5808,   5808,   5808,   5808,   5808,   5808,   5808,
                          5808,   5808,   5808,   5808,   5970,   5970,   5970,
                          5970,   5970,   6927,   6927,   7069,   7069,   7069,
                          7081,   7081,   7081],
                       [ 63965, 154938,  47395, 179793, 263762, 263904, 263916,
                         82850, 132434, 193410, 223739, 240138, 255477, 255619,
                        255631, 304230, 328345, 328346,  38643, 146230, 179793,
                        247334, 247346,  22378, 146230,  22378, 113675, 146230,
                         22378, 113675, 146230]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=31, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 31
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.11s/it]

epoch:  4 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5385,   5385,   5503,   5503,   5503,   5503,   5503,
                          5808,   5808,   5808,   5808,   5808,   5808,   5808,
                          5808,   5808,   5808,   5808,   5970,   5970,   5970,
                          5970,   5970,   6927,   6927,   7069,   7069,   7069,
                          7081,   7081,   7081],
                       [ 63965, 154938,  47395, 179793, 263762, 263904, 263916,
                         82850, 132434, 193410, 223739, 240138, 255477, 255619,
                        255631, 304230, 328345, 328346,  38643, 146230, 179793,
                        247334, 247346,  22378, 146230,  22378, 113675, 146230,
                         22378, 113675, 146230]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=31, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 31
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.11s/it]
masked_hor: tensor(indices=tensor([[  5385,   5385,   5503,   5503,   5503,   5503,   5503,
                          5808,   5808,   5808,   5808,   5808,   5808,   5808,
                          5808,   5808,   5808,   5808,   5970,   5970,   5970,
                          5970,   5970,   6927,   6927,   7069,   7069,   7069,
                          7081,   7081,   7081],
                       [ 63965, 154938,  47395, 179793, 263762, 263904, 263916,
                         82850, 132434, 193410, 223739, 240138, 255477, 255619,
                        255631, 304230, 328345, 328346,  38643, 146230, 179793,
                        247334, 247346,  22378, 146230,  22378, 113675, 146230,
                         22378, 113675, 146230]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=31, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 31
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:28<00:12,  4.12s/it]
epoch:  6 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5385,   5385,   5503,   5503,   5503,   5503,   5503,
                          5808,   5808,   5808,   5808,   5808,   5808,   5808,
                          5808,   5808,   5808,   5808,   5970,   5970,   5970,
                          5970,   5970,   6927,   6927,   7069,   7069,   7069,
                          7081,   7081,   7081],
                       [ 63965, 154938,  47395, 179793, 263762, 263904, 263916,
                         82850, 132434, 193410, 223739, 240138, 255477, 255619,
                        255631, 304230, 328345, 328346,  38643, 146230, 179793,
                        247334, 247346,  22378, 146230,  22378, 113675, 146230,
                         22378, 113675, 146230]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=31, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 31
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)
size_num_loss 0.0
masked_hor: tensor(indices=tensor([[  5385,   5385,   5503,   5503,   5503,   5503,   5503,
                          5808,   5808,   5808,   5808,   5808,   5808,   5808,
                          5808,   5808,   5808,   5808,   5970,   5970,   5970,
                          5970,   5970,   6927,   6927,   7069,   7069,   7069,
                          7081,   7081,   7081],
                       [ 63965, 154938,  47395, 179793, 263762, 263904, 263916,
                         82850, 132434, 193410, 223739, 240138, 255477, 255619,
                        255631, 304230, 328345, 328346,  38643, 146230, 179793,
                        247334, 247346,  22378, 146230,  22378, 113675, 146230,
                         22378, 113675, 146230]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=31, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 31
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:32<00:08,  4.11s/it]
epoch:  8 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5385,   5385,   5503,   5503,   5503,   5503,   5503,
                          5808,   5808,   5808,   5808,   5808,   5808,   5808,
                          5808,   5808,   5808,   5808,   5970,   5970,   5970,
                          5970,   5970,   6927,   6927,   7069,   7069,   7069,
                          7081,   7081,   7081],
                       [ 63965, 154938,  47395, 179793, 263762, 263904, 263916,
                         82850, 132434, 193410, 223739, 240138, 255477, 255619,
                        255631, 304230, 328345, 328346,  38643, 146230, 179793,
                        247334, 247346,  22378, 146230,  22378, 113675, 146230,
                         22378, 113675, 146230]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=31, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 31
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.12s/it]
train modality

100%|##########| 10/10 [00:41<00:00,  4.12s/it]
55
start training
masked_hor: tensor(indices=tensor([[  5403,   5404,   5420,   5420,   5446,   5446,   5477,
                          5477,   5503,   5503,   5503,   5503,   5503,   5503,
                          5503,   5503,   5503,   5785,   5785,   5785,   5785,
                          5785,   5785,   5785,   5785,   5785,   5785,   5785,
                          5785,   5785,   5785,   5965,   5965,   5965,   5965,
                          5965,   5965,   5965,   5965,   6898,   6898,   6918,
                          6918,   6918,   6918,   6929,   6972,   6972,   6973,
                          7120,   7163,   7163,   7163,   7163,   7163],
                       [154915, 154915,  63960, 154915,  63960, 154915,  63960,
                        154915,  47390, 179770, 263733, 263753, 263764, 263807,
                        263808, 263955, 263998,  82931, 193044, 223736, 237565,
                        255448, 255468, 255479, 255522, 255523, 255670, 255713,
                        304225, 328345, 328346,  38643, 146265, 146291, 146322,
                        179770, 247163, 247183, 247428,  22355, 113670,  22355,
                        113670, 146291, 146322,  22355,  22355, 146265,  22355,
                         22355,  22355, 113670, 146248, 146291, 146322]]),
       values=tensor([0.7970, 0.7831, 0.7635, 0.6453, 0.7557, 0.6823, 0.7294,
                      0.6669, 0.7019, 0.7882, 0.1023, 0.0965, 0.1004, 0.1014,
                      0.1002, 0.1084, 0.1126, 0.7250, 0.7120, 0.7472, 0.7017,
                      0.1099, 0.1086, 0.1128, 0.1109, 0.1110, 0.1076, 0.1112,
                      0.7223, 0.3663, 0.3608, 0.7621, 0.2254, 0.2324, 0.2409,
                      0.7904, 0.2476, 0.2383, 0.2475, 0.7026, 0.6985, 0.6951,
                      0.7934, 0.3685, 0.3723, 0.7376, 0.7797, 0.7797, 0.6837,
                      0.7568, 0.6889, 0.7507, 0.2576, 0.2505, 0.2379]),
       size=(8285, 753935), nnz=55, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([0.7970, 0.7831, 0.7635, 0.6453, 0.7557, 0.6823, 0.7294, 0.6669, 0.7019,
        0.7882, 0.7161, 0.6753, 0.7029, 0.7096, 0.7013, 0.7587, 0.7880, 0.7250,
        0.7120, 0.7472, 0.7017, 0.7695, 0.7600, 0.7893, 0.7762, 0.7768, 0.7533,
        0.7781, 0.7223, 0.7326, 0.7215, 0.7621, 0.6761, 0.6972, 0.7226, 0.7904,
        0.7428, 0.7148, 0.7424, 0.7026, 0.6985, 0.6951, 0.7934, 0.7370, 0.7446,
        0.7376, 0.7797, 0.7797, 0.6837, 0.7568, 0.6889, 0.7507, 0.7728, 0.7516,
        0.7137], grad_fn=<IndexBackward0>)
num_high 55 original num_nodes 55
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(4.0321, grad_fn=<AddBackward0>)
size_num_loss 1.0
  0%|          | 0/10 [00:00<?, ?it/s]
epoch:  0 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5403,   5404,   5420,   5420,   5446,   5446,   5477,
                          5477,   5503,   5503,   5503,   5503,   5503,   5503,
                          5503,   5503,   5503,   5785,   5785,   5785,   5785,
                          5785,   5785,   5785,   5785,   5785,   5785,   5785,
                          5785,   5785,   5785,   5965,   5965,   5965,   5965,
                          5965,   5965,   5965,   5965,   6898,   6898,   6918,
                          6918,   6918,   6918,   6929,   6972,   6972,   6973,
                          7120,   7163,   7163,   7163,   7163,   7163],
                       [154915, 154915,  63960, 154915,  63960, 154915,  63960,
                        154915,  47390, 179770, 263733, 263753, 263764, 263807,
                        263808, 263955, 263998,  82931, 193044, 223736, 237565,
                        255448, 255468, 255479, 255522, 255523, 255670, 255713,
                        304225, 328345, 328346,  38643, 146265, 146291, 146322,
                        179770, 247163, 247183, 247428,  22355, 113670,  22355,
                        113670, 146291, 146322,  22355,  22355, 146265,  22355,
                         22355,  22355, 113670, 146248, 146291, 146322]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=55, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 55
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5403,   5404,   5420,   5420,   5446,   5446,   5477,
                          5477,   5503,   5503,   5503,   5503,   5503,   5503,
                          5503,   5503,   5503,   5785,   5785,   5785,   5785,
                          5785,   5785,   5785,   5785,   5785,   5785,   5785,
                          5785,   5785,   5785,   5965,   5965,   5965,   5965,
                          5965,   5965,   5965,   5965,   6898,   6898,   6918,
                          6918,   6918,   6918,   6929,   6972,   6972,   6973,
                          7120,   7163,   7163,   7163,   7163,   7163],
                       [154915, 154915,  63960, 154915,  63960, 154915,  63960,
                        154915,  47390, 179770, 263733, 263753, 263764, 263807,
                        263808, 263955, 263998,  82931, 193044, 223736, 237565,
                        255448, 255468, 255479, 255522, 255523, 255670, 255713,
                        304225, 328345, 328346,  38643, 146265, 146291, 146322,
                        179770, 247163, 247183, 247428,  22355, 113670,  22355,
                        113670, 146291, 146322,  22355,  22355, 146265,  22355,
                         22355,  22355, 113670, 146248, 146291, 146322]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=55, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 55
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:32,  4.11s/it]
epoch:  2 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5403,   5404,   5420,   5420,   5446,   5446,   5477,
                          5477,   5503,   5503,   5503,   5503,   5503,   5503,
                          5503,   5503,   5503,   5785,   5785,   5785,   5785,
                          5785,   5785,   5785,   5785,   5785,   5785,   5785,
                          5785,   5785,   5785,   5965,   5965,   5965,   5965,
                          5965,   5965,   5965,   5965,   6898,   6898,   6918,
                          6918,   6918,   6918,   6929,   6972,   6972,   6973,
                          7120,   7163,   7163,   7163,   7163,   7163],
                       [154915, 154915,  63960, 154915,  63960, 154915,  63960,
                        154915,  47390, 179770, 263733, 263753, 263764, 263807,
                        263808, 263955, 263998,  82931, 193044, 223736, 237565,
                        255448, 255468, 255479, 255522, 255523, 255670, 255713,
                        304225, 328345, 328346,  38643, 146265, 146291, 146322,
                        179770, 247163, 247183, 247428,  22355, 113670,  22355,
                        113670, 146291, 146322,  22355,  22355, 146265,  22355,
                         22355,  22355, 113670, 146248, 146291, 146322]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=55, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 55
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:28,  4.11s/it]
masked_hor: tensor(indices=tensor([[  5403,   5404,   5420,   5420,   5446,   5446,   5477,
                          5477,   5503,   5503,   5503,   5503,   5503,   5503,
                          5503,   5503,   5503,   5785,   5785,   5785,   5785,
                          5785,   5785,   5785,   5785,   5785,   5785,   5785,
                          5785,   5785,   5785,   5965,   5965,   5965,   5965,
                          5965,   5965,   5965,   5965,   6898,   6898,   6918,
                          6918,   6918,   6918,   6929,   6972,   6972,   6973,
                          7120,   7163,   7163,   7163,   7163,   7163],
                       [154915, 154915,  63960, 154915,  63960, 154915,  63960,
                        154915,  47390, 179770, 263733, 263753, 263764, 263807,
                        263808, 263955, 263998,  82931, 193044, 223736, 237565,
                        255448, 255468, 255479, 255522, 255523, 255670, 255713,
                        304225, 328345, 328346,  38643, 146265, 146291, 146322,
                        179770, 247163, 247183, 247428,  22355, 113670,  22355,
                        113670, 146291, 146322,  22355,  22355, 146265,  22355,
                         22355,  22355, 113670, 146248, 146291, 146322]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=55, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 55
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.12s/it]
epoch:  4 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5403,   5404,   5420,   5420,   5446,   5446,   5477,
                          5477,   5503,   5503,   5503,   5503,   5503,   5503,
                          5503,   5503,   5503,   5785,   5785,   5785,   5785,
                          5785,   5785,   5785,   5785,   5785,   5785,   5785,
                          5785,   5785,   5785,   5965,   5965,   5965,   5965,
                          5965,   5965,   5965,   5965,   6898,   6898,   6918,
                          6918,   6918,   6918,   6929,   6972,   6972,   6973,
                          7120,   7163,   7163,   7163,   7163,   7163],
                       [154915, 154915,  63960, 154915,  63960, 154915,  63960,
                        154915,  47390, 179770, 263733, 263753, 263764, 263807,
                        263808, 263955, 263998,  82931, 193044, 223736, 237565,
                        255448, 255468, 255479, 255522, 255523, 255670, 255713,
                        304225, 328345, 328346,  38643, 146265, 146291, 146322,
                        179770, 247163, 247183, 247428,  22355, 113670,  22355,
                        113670, 146291, 146322,  22355,  22355, 146265,  22355,
                         22355,  22355, 113670, 146248, 146291, 146322]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=55, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 55
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.14s/it]
masked_hor: tensor(indices=tensor([[  5403,   5404,   5420,   5420,   5446,   5446,   5477,
                          5477,   5503,   5503,   5503,   5503,   5503,   5503,
                          5503,   5503,   5503,   5785,   5785,   5785,   5785,
                          5785,   5785,   5785,   5785,   5785,   5785,   5785,
                          5785,   5785,   5785,   5965,   5965,   5965,   5965,
                          5965,   5965,   5965,   5965,   6898,   6898,   6918,
                          6918,   6918,   6918,   6929,   6972,   6972,   6973,
                          7120,   7163,   7163,   7163,   7163,   7163],
                       [154915, 154915,  63960, 154915,  63960, 154915,  63960,
                        154915,  47390, 179770, 263733, 263753, 263764, 263807,
                        263808, 263955, 263998,  82931, 193044, 223736, 237565,
                        255448, 255468, 255479, 255522, 255523, 255670, 255713,
                        304225, 328345, 328346,  38643, 146265, 146291, 146322,
                        179770, 247163, 247183, 247428,  22355, 113670,  22355,
                        113670, 146291, 146322,  22355,  22355, 146265,  22355,
                         22355,  22355, 113670, 146248, 146291, 146322]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=55, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 55
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.14s/it]
epoch:  6 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5403,   5404,   5420,   5420,   5446,   5446,   5477,
                          5477,   5503,   5503,   5503,   5503,   5503,   5503,
                          5503,   5503,   5503,   5785,   5785,   5785,   5785,
                          5785,   5785,   5785,   5785,   5785,   5785,   5785,
                          5785,   5785,   5785,   5965,   5965,   5965,   5965,
                          5965,   5965,   5965,   5965,   6898,   6898,   6918,
                          6918,   6918,   6918,   6929,   6972,   6972,   6973,
                          7120,   7163,   7163,   7163,   7163,   7163],
                       [154915, 154915,  63960, 154915,  63960, 154915,  63960,
                        154915,  47390, 179770, 263733, 263753, 263764, 263807,
                        263808, 263955, 263998,  82931, 193044, 223736, 237565,
                        255448, 255468, 255479, 255522, 255523, 255670, 255713,
                        304225, 328345, 328346,  38643, 146265, 146291, 146322,
                        179770, 247163, 247183, 247428,  22355, 113670,  22355,
                        113670, 146291, 146322,  22355,  22355, 146265,  22355,
                         22355,  22355, 113670, 146248, 146291, 146322]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=55, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 55
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)


 80%|########  | 8/10 [00:33<00:08,  4.13s/it]
masked_hor: tensor(indices=tensor([[  5403,   5404,   5420,   5420,   5446,   5446,   5477,
                          5477,   5503,   5503,   5503,   5503,   5503,   5503,
                          5503,   5503,   5503,   5785,   5785,   5785,   5785,
                          5785,   5785,   5785,   5785,   5785,   5785,   5785,
                          5785,   5785,   5785,   5965,   5965,   5965,   5965,
                          5965,   5965,   5965,   5965,   6898,   6898,   6918,
                          6918,   6918,   6918,   6929,   6972,   6972,   6973,
                          7120,   7163,   7163,   7163,   7163,   7163],
                       [154915, 154915,  63960, 154915,  63960, 154915,  63960,
                        154915,  47390, 179770, 263733, 263753, 263764, 263807,
                        263808, 263955, 263998,  82931, 193044, 223736, 237565,
                        255448, 255468, 255479, 255522, 255523, 255670, 255713,
                        304225, 328345, 328346,  38643, 146265, 146291, 146322,
                        179770, 247163, 247183, 247428,  22355, 113670,  22355,
                        113670, 146291, 146322,  22355,  22355, 146265,  22355,
                         22355,  22355, 113670, 146248, 146291, 146322]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=55, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 55
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.13s/it]
epoch:  8 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5403,   5404,   5420,   5420,   5446,   5446,   5477,
                          5477,   5503,   5503,   5503,   5503,   5503,   5503,
                          5503,   5503,   5503,   5785,   5785,   5785,   5785,
                          5785,   5785,   5785,   5785,   5785,   5785,   5785,
                          5785,   5785,   5785,   5965,   5965,   5965,   5965,
                          5965,   5965,   5965,   5965,   6898,   6898,   6918,
                          6918,   6918,   6918,   6929,   6972,   6972,   6973,
                          7120,   7163,   7163,   7163,   7163,   7163],
                       [154915, 154915,  63960, 154915,  63960, 154915,  63960,
                        154915,  47390, 179770, 263733, 263753, 263764, 263807,
                        263808, 263955, 263998,  82931, 193044, 223736, 237565,
                        255448, 255468, 255479, 255522, 255523, 255670, 255713,
                        304225, 328345, 328346,  38643, 146265, 146291, 146322,
                        179770, 247163, 247183, 247428,  22355, 113670,  22355,
                        113670, 146291, 146322,  22355,  22355, 146265,  22355,
                         22355,  22355, 113670, 146248, 146291, 146322]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=55, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(1, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 55
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)
size_num_loss 0.0
most important relations 5785:  Counter()
high: [Counter({'abstract': 2}), Counter()]
least important relations: 5785 Counter()
train modality

100%|##########| 10/10 [00:41<00:00,  4.13s/it]
24
start training
masked_hor: tensor(indices=tensor([[  5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          6860,   6874,   6920,   6976,   7731,   7837,   7857,
                          7905,   7933,   7973],
                       [ 83758, 192782, 224697, 255410, 255424, 255470, 255526,
                        256281, 256387, 256407, 256455, 256483, 256523, 328345,
                         22327,  22327,  22327,  22327,  22327,  22327,  22327,
                         22327,  22327,  22327]]),
       values=tensor([0.8258, 0.8068, 0.7790, 0.0597, 0.0768, 0.0656, 0.0729,
                      0.0631, 0.0751, 0.0690, 0.0702, 0.0745, 0.0664, 0.7362,
                      0.5820, 0.7186, 0.7131, 0.7080, 0.7742, 0.6944, 0.6962,
                      0.7275, 0.6815, 0.7494]),
       size=(8285, 753935), nnz=24, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([0.8258, 0.8068, 0.7790, 0.5968, 0.7678, 0.6556, 0.7286, 0.6311, 0.7508,
        0.6904, 0.7022, 0.7445, 0.6636, 0.7362, 0.5820, 0.7186, 0.7131, 0.7080,
        0.7742, 0.6944, 0.6962, 0.7275, 0.6815, 0.7494],
       grad_fn=<IndexBackward0>)
num_high 24 original num_nodes 24
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(1.6764, grad_fn=<AddBackward0>)
size_num_loss 1.0
  0%|          | 0/10 [00:00<?, ?it/s]
epoch:  0 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          6860,   6874,   6920,   6976,   7731,   7837,   7857,
                          7905,   7933,   7973],
                       [ 83758, 192782, 224697, 255410, 255424, 255470, 255526,
                        256281, 256387, 256407, 256455, 256483, 256523, 328345,
                         22327,  22327,  22327,  22327,  22327,  22327,  22327,
                         22327,  22327,  22327]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=24, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 24
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:36,  4.11s/it]
masked_hor: tensor(indices=tensor([[  5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          6860,   6874,   6920,   6976,   7731,   7837,   7857,
                          7905,   7933,   7973],
                       [ 83758, 192782, 224697, 255410, 255424, 255470, 255526,
                        256281, 256387, 256407, 256455, 256483, 256523, 328345,
                         22327,  22327,  22327,  22327,  22327,  22327,  22327,
                         22327,  22327,  22327]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=24, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 24
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:32,  4.11s/it]
epoch:  2 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          6860,   6874,   6920,   6976,   7731,   7837,   7857,
                          7905,   7933,   7973],
                       [ 83758, 192782, 224697, 255410, 255424, 255470, 255526,
                        256281, 256387, 256407, 256455, 256483, 256523, 328345,
                         22327,  22327,  22327,  22327,  22327,  22327,  22327,
                         22327,  22327,  22327]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=24, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 24
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:28,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          6860,   6874,   6920,   6976,   7731,   7837,   7857,
                          7905,   7933,   7973],
                       [ 83758, 192782, 224697, 255410, 255424, 255470, 255526,
                        256281, 256387, 256407, 256455, 256483, 256523, 328345,
                         22327,  22327,  22327,  22327,  22327,  22327,  22327,
                         22327,  22327,  22327]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=24, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 24
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.12s/it]
epoch:  4 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          6860,   6874,   6920,   6976,   7731,   7837,   7857,
                          7905,   7933,   7973],
                       [ 83758, 192782, 224697, 255410, 255424, 255470, 255526,
                        256281, 256387, 256407, 256455, 256483, 256523, 328345,
                         22327,  22327,  22327,  22327,  22327,  22327,  22327,
                         22327,  22327,  22327]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=24, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 24
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          6860,   6874,   6920,   6976,   7731,   7837,   7857,
                          7905,   7933,   7973],
                       [ 83758, 192782, 224697, 255410, 255424, 255470, 255526,
                        256281, 256387, 256407, 256455, 256483, 256523, 328345,
                         22327,  22327,  22327,  22327,  22327,  22327,  22327,
                         22327,  22327,  22327]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=24, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 24
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.12s/it]
epoch:  6 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          6860,   6874,   6920,   6976,   7731,   7837,   7857,
                          7905,   7933,   7973],
                       [ 83758, 192782, 224697, 255410, 255424, 255470, 255526,
                        256281, 256387, 256407, 256455, 256483, 256523, 328345,
                         22327,  22327,  22327,  22327,  22327,  22327,  22327,
                         22327,  22327,  22327]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=24, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 24
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:28<00:12,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          6860,   6874,   6920,   6976,   7731,   7837,   7857,
                          7905,   7933,   7973],
                       [ 83758, 192782, 224697, 255410, 255424, 255470, 255526,
                        256281, 256387, 256407, 256455, 256483, 256523, 328345,
                         22327,  22327,  22327,  22327,  22327,  22327,  22327,
                         22327,  22327,  22327]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=24, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 24
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)


 90%|######### | 9/10 [00:37<00:04,  4.11s/it]
epoch:  8 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          5757,   5757,   5757,   5757,   5757,   5757,   5757,
                          6860,   6874,   6920,   6976,   7731,   7837,   7857,
                          7905,   7933,   7973],
                       [ 83758, 192782, 224697, 255410, 255424, 255470, 255526,
                        256281, 256387, 256407, 256455, 256483, 256523, 328345,
                         22327,  22327,  22327,  22327,  22327,  22327,  22327,
                         22327,  22327,  22327]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=24, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 24
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)
size_num_loss 0.0
train modality

100%|##########| 10/10 [00:41<00:00,  4.11s/it]
233
start training
masked_hor: tensor(indices=tensor([[  5381,   5382,   5426,   5444,   5444,   5444,   5444,
                          5446,   5446,   5446,   5446,   5449,   5449,   5449,
                          5471,   5471,   5471,   5471,   5471,   5471,   5471,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5948,   5948,
                          5948,   5948,   5948,   5948,   5948,   5948,   5948,
                          5948,   5948,   5948,   5948,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5956,   5956,   5956,
                          5956,   5956,   5956,   5956,   5956,   5956,   5956,
                          5956,   5956,   5956,   5956,   5956,   5956,   5956,
                          5974,   5974,   5974,   5974,   5974,   5974,   5974,
                          5974,   5978,   5978,   5978,   5978,   5978,   5978,
                          5978,   5989,   5989,   5989,   5989,   5989,   5989,
                          6868,   6868,   6868,   6868,   6868,   6868,   6872,
                          6872,   6872,   6872,   6872,   6936,   6936,   6936,
                          6936,   6936,   6936,   6937,   6937,   6937,   6957,
                          6957,   7006,   7006,   7006,   7015,   7015,   7015,
                          7015,   7015,   7021,   7021,   7021,   7021,   7021,
                          7065,   7065,   7065,   7065,   7065,   7065,   7065,
                          7075,   7075,   7075,   7075,   7089,   7089,   7089,
                          7089,   7104,   7104,   7104,   7104,   7107,   7107,
                          7107,   7827,   7827,   7827,   7827,   7827,   7883,
                          7883,   7883,   7931,   7931,   7931,   7931,   7934,
                          7934,   7934,   7934,   7945,   7945,   7945,   7945,
                          7945,   7945,   7945,   7958,   7958,   7958,   7958,
                          7958,   8004,   8004,   8004,   8035,   8035,   8035,
                          8035,   8035],
                       [154927, 154927, 154927,  63949,  63969,  63984, 154927,
                         63949,  63973,  63984, 154927,  63973,  63984, 154927,
                         63943,  63949,  63951,  63969,  63973,  63984, 154927,
                         47373,  47379,  47381,  47399,  47403,  47414, 179782,
                        263703, 263707, 263771, 263772, 263792, 263841, 263850,
                        263856, 263900, 263910, 263924, 263939, 263942, 264662,
                        264718, 264766, 264769, 264780, 264793, 264839, 264870,
                         82917, 193523, 223785, 237571, 255418, 255422, 255486,
                        255487, 255507, 255556, 255565, 255571, 255615, 255625,
                        255639, 255654, 255657, 256377, 256433, 256481, 256484,
                        256495, 256508, 256554, 256585, 304208, 304214, 304216,
                        304234, 304238, 304249, 328345, 328346,  38644, 146316,
                        179782, 247133, 247202, 247330, 247340, 248148, 248196,
                        248199, 248210, 248269, 248300,  38644, 146289, 146291,
                        146316, 179782, 247280, 247286,  38644, 146316, 179782,
                        247133, 247137, 247201, 247271, 247280, 247286, 247330,
                        247354, 247369, 248092, 248196, 248199, 248210, 248300,
                         38644, 146289, 146316, 179782, 247133, 247280, 247286,
                        247340,  38644, 146291, 146294, 146316, 179782, 247137,
                        247369,  38644, 146289, 146291, 146294, 146316, 179782,
                         22367, 113653, 113661, 113679, 146289, 146316,  22367,
                        113661, 113683, 146289, 146316,  22367, 113661, 146226,
                        146271, 146291, 146294,  22367, 113653, 146316,  22367,
                        146271,  22367, 113661, 146316,  22367, 113659, 113661,
                        113679, 146316,  22367, 113659, 113661, 113679, 146316,
                         22367, 113653, 113661, 146289, 146291, 146294, 146316,
                         22367, 113653, 113679, 146316,  22367, 113661, 146289,
                        146316,  22367, 113661, 113683, 146294,  22367, 146226,
                        146227,  22367, 113661, 146227, 146271, 146294,  22367,
                        113653, 146316,  22367, 113653, 113661, 146316,  22367,
                        113653, 113661, 146316,  22367, 113653, 113661, 146226,
                        146271, 146294, 146316,  22367, 146226, 146227, 146271,
                        146294,  22367, 113653, 146316,  22367, 113653, 113661,
                        146289, 146316]]),
       values=tensor([0.7647, 0.7573, 0.7471, 0.2303, 0.2477, 0.2360, 0.7303,
                      0.2336, 0.2390, 0.2533, 0.7238, 0.3524, 0.3588, 0.7207,
                      0.1195, 0.1241, 0.1267, 0.1214, 0.1203, 0.1232, 0.7170,
                      0.1250, 0.1242, 0.1268, 0.1256, 0.1257, 0.1237, 0.7547,
                      0.0346, 0.0348, 0.0346, 0.0355, 0.0336, 0.0340, 0.0346,
                      0.0362, 0.0351, 0.0344, 0.0351, 0.0341, 0.0334, 0.0357,
                      0.0340, 0.0343, 0.0337, 0.0366, 0.0337, 0.0344, 0.0340,
                      0.7189, 0.7325, 0.7405, 0.7221, 0.0358, 0.0341, 0.0342,
                      0.0336, 0.0348, 0.0348, 0.0354, 0.0347, 0.0363, 0.0338,
                      0.0360, 0.0360, 0.0355, 0.0366, 0.0353, 0.0351, 0.0346,
                      0.0339, 0.0359, 0.0347, 0.0353, 0.1220, 0.1231, 0.1236,
                      0.1199, 0.1148, 0.1195, 0.3656, 0.3624, 0.7059, 0.7203,
                      0.7407, 0.0741, 0.0751, 0.0732, 0.0744, 0.0722, 0.0712,
                      0.0742, 0.0699, 0.0716, 0.0755, 0.7398, 0.2277, 0.2466,
                      0.2484, 0.7316, 0.3713, 0.3708, 0.7500, 0.7228, 0.7277,
                      0.0532, 0.0527, 0.0524, 0.0526, 0.0538, 0.0522, 0.0518,
                      0.0503, 0.0521, 0.0514, 0.0528, 0.0531, 0.0523, 0.0517,
                      0.7406, 0.3654, 0.3677, 0.7335, 0.1862, 0.1876, 0.1843,
                      0.1860, 0.7385, 0.2549, 0.2497, 0.2347, 0.7100, 0.3643,
                      0.3799, 0.7428, 0.1854, 0.1878, 0.1828, 0.1742, 0.7476,
                      0.7242, 0.2498, 0.2395, 0.2475, 0.3565, 0.3741, 0.7595,
                      0.3783, 0.3680, 0.3636, 0.3588, 0.7330, 0.7374, 0.1871,
                      0.1806, 0.1898, 0.1709, 0.7234, 0.7087, 0.7456, 0.6951,
                      0.7352, 0.7315, 0.7247, 0.7363, 0.7175, 0.2447, 0.2369,
                      0.2336, 0.7550, 0.7539, 0.2440, 0.2340, 0.2482, 0.7449,
                      0.7663, 0.3659, 0.3666, 0.1790, 0.1818, 0.1784, 0.1753,
                      0.7099, 0.3607, 0.3608, 0.7029, 0.6946, 0.7334, 0.3746,
                      0.3604, 0.7437, 0.3719, 0.3811, 0.7139, 0.7482, 0.3624,
                      0.3546, 0.7375, 0.7397, 0.2517, 0.2468, 0.2559, 0.7215,
                      0.7137, 0.7344, 0.7501, 0.3771, 0.3697, 0.7160, 0.7121,
                      0.3610, 0.3601, 0.7339, 0.7390, 0.3642, 0.3434, 0.1809,
                      0.1825, 0.1764, 0.1843, 0.7128, 0.1841, 0.1836, 0.1822,
                      0.1785, 0.7700, 0.7489, 0.7552, 0.7424, 0.3692, 0.3686,
                      0.3635, 0.3767]),
       size=(8285, 753935), nnz=233, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([0.7647, 0.7573, 0.7471, 0.6910, 0.7432, 0.7080, 0.7303, 0.7008, 0.7171,
        0.7600, 0.7238, 0.7047, 0.7176, 0.7207, 0.7168, 0.7447, 0.7599, 0.7281,
        0.7219, 0.7390, 0.7170, 0.7502, 0.7454, 0.7606, 0.7537, 0.7540, 0.7420,
        0.7547, 0.7268, 0.7318, 0.7265, 0.7464, 0.7051, 0.7149, 0.7270, 0.7612,
        0.7368, 0.7233, 0.7366, 0.7167, 0.7018, 0.7488, 0.7147, 0.7200, 0.7072,
        0.7679, 0.7080, 0.7221, 0.7141, 0.7189, 0.7325, 0.7405, 0.7221, 0.7522,
        0.7160, 0.7174, 0.7047, 0.7317, 0.7299, 0.7432, 0.7293, 0.7633, 0.7089,
        0.7555, 0.7566, 0.7464, 0.7695, 0.7405, 0.7373, 0.7274, 0.7114, 0.7537,
        0.7279, 0.7405, 0.7321, 0.7388, 0.7414, 0.7192, 0.6890, 0.7172, 0.7313,
        0.7248, 0.7059, 0.7203, 0.7407, 0.7405, 0.7513, 0.7320, 0.7444, 0.7222,
        0.7115, 0.7419, 0.6986, 0.7157, 0.7547, 0.7398, 0.6830, 0.7399, 0.7451,
        0.7316, 0.7426, 0.7415, 0.7500, 0.7228, 0.7277, 0.7445, 0.7384, 0.7343,
        0.7359, 0.7536, 0.7310, 0.7255, 0.7037, 0.7292, 0.7200, 0.7397, 0.7441,
        0.7327, 0.7239, 0.7406, 0.7308, 0.7354, 0.7335, 0.7448, 0.7505, 0.7372,
        0.7440, 0.7385, 0.7648, 0.7491, 0.7041, 0.7100, 0.7286, 0.7598, 0.7428,
        0.7414, 0.7513, 0.7314, 0.6969, 0.7476, 0.7242, 0.7495, 0.7184, 0.7425,
        0.7130, 0.7482, 0.7595, 0.7566, 0.7359, 0.7272, 0.7175, 0.7330, 0.7374,
        0.7483, 0.7225, 0.7593, 0.6836, 0.7234, 0.7087, 0.7456, 0.6951, 0.7352,
        0.7315, 0.7247, 0.7363, 0.7175, 0.7342, 0.7107, 0.7009, 0.7550, 0.7539,
        0.7320, 0.7020, 0.7446, 0.7449, 0.7663, 0.7317, 0.7332, 0.7161, 0.7273,
        0.7137, 0.7011, 0.7099, 0.7214, 0.7215, 0.7029, 0.6946, 0.7334, 0.7493,
        0.7208, 0.7437, 0.7438, 0.7621, 0.7139, 0.7482, 0.7249, 0.7091, 0.7375,
        0.7397, 0.7550, 0.7405, 0.7678, 0.7215, 0.7137, 0.7344, 0.7501, 0.7542,
        0.7394, 0.7160, 0.7121, 0.7219, 0.7201, 0.7339, 0.7390, 0.7283, 0.6868,
        0.7237, 0.7299, 0.7054, 0.7370, 0.7128, 0.7365, 0.7343, 0.7287, 0.7138,
        0.7700, 0.7489, 0.7552, 0.7424, 0.7384, 0.7372, 0.7270, 0.7533],
       grad_fn=<IndexBackward0>)
num_high 233 original num_nodes 233
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(17.0482, grad_fn=<AddBackward0>)
size_num_loss 1.0
  0%|          | 0/10 [00:00<?, ?it/s]
epoch:  0 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5381,   5382,   5426,   5444,   5444,   5444,   5444,
                          5446,   5446,   5446,   5446,   5449,   5449,   5449,
                          5471,   5471,   5471,   5471,   5471,   5471,   5471,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5948,   5948,
                          5948,   5948,   5948,   5948,   5948,   5948,   5948,
                          5948,   5948,   5948,   5948,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5956,   5956,   5956,
                          5956,   5956,   5956,   5956,   5956,   5956,   5956,
                          5956,   5956,   5956,   5956,   5956,   5956,   5956,
                          5974,   5974,   5974,   5974,   5974,   5974,   5974,
                          5974,   5978,   5978,   5978,   5978,   5978,   5978,
                          5978,   5989,   5989,   5989,   5989,   5989,   5989,
                          6868,   6868,   6868,   6868,   6868,   6868,   6872,
                          6872,   6872,   6872,   6872,   6936,   6936,   6936,
                          6936,   6936,   6936,   6937,   6937,   6937,   6957,
                          6957,   7006,   7006,   7006,   7015,   7015,   7015,
                          7015,   7015,   7021,   7021,   7021,   7021,   7021,
                          7065,   7065,   7065,   7065,   7065,   7065,   7065,
                          7075,   7075,   7075,   7075,   7089,   7089,   7089,
                          7089,   7104,   7104,   7104,   7104,   7107,   7107,
                          7107,   7827,   7827,   7827,   7827,   7827,   7883,
                          7883,   7883,   7931,   7931,   7931,   7931,   7934,
                          7934,   7934,   7934,   7945,   7945,   7945,   7945,
                          7945,   7945,   7945,   7958,   7958,   7958,   7958,
                          7958,   8004,   8004,   8004,   8035,   8035,   8035,
                          8035,   8035],
                       [154927, 154927, 154927,  63949,  63969,  63984, 154927,
                         63949,  63973,  63984, 154927,  63973,  63984, 154927,
                         63943,  63949,  63951,  63969,  63973,  63984, 154927,
                         47373,  47379,  47381,  47399,  47403,  47414, 179782,
                        263703, 263707, 263771, 263772, 263792, 263841, 263850,
                        263856, 263900, 263910, 263924, 263939, 263942, 264662,
                        264718, 264766, 264769, 264780, 264793, 264839, 264870,
                         82917, 193523, 223785, 237571, 255418, 255422, 255486,
                        255487, 255507, 255556, 255565, 255571, 255615, 255625,
                        255639, 255654, 255657, 256377, 256433, 256481, 256484,
                        256495, 256508, 256554, 256585, 304208, 304214, 304216,
                        304234, 304238, 304249, 328345, 328346,  38644, 146316,
                        179782, 247133, 247202, 247330, 247340, 248148, 248196,
                        248199, 248210, 248269, 248300,  38644, 146289, 146291,
                        146316, 179782, 247280, 247286,  38644, 146316, 179782,
                        247133, 247137, 247201, 247271, 247280, 247286, 247330,
                        247354, 247369, 248092, 248196, 248199, 248210, 248300,
                         38644, 146289, 146316, 179782, 247133, 247280, 247286,
                        247340,  38644, 146291, 146294, 146316, 179782, 247137,
                        247369,  38644, 146289, 146291, 146294, 146316, 179782,
                         22367, 113653, 113661, 113679, 146289, 146316,  22367,
                        113661, 113683, 146289, 146316,  22367, 113661, 146226,
                        146271, 146291, 146294,  22367, 113653, 146316,  22367,
                        146271,  22367, 113661, 146316,  22367, 113659, 113661,
                        113679, 146316,  22367, 113659, 113661, 113679, 146316,
                         22367, 113653, 113661, 146289, 146291, 146294, 146316,
                         22367, 113653, 113679, 146316,  22367, 113661, 146289,
                        146316,  22367, 113661, 113683, 146294,  22367, 146226,
                        146227,  22367, 113661, 146227, 146271, 146294,  22367,
                        113653, 146316,  22367, 113653, 113661, 146316,  22367,
                        113653, 113661, 146316,  22367, 113653, 113661, 146226,
                        146271, 146294, 146316,  22367, 146226, 146227, 146271,
                        146294,  22367, 113653, 146316,  22367, 113653, 113661,
                        146289, 146316]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=233, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 233
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.21s/it]
masked_hor: tensor(indices=tensor([[  5381,   5382,   5426,   5444,   5444,   5444,   5444,
                          5446,   5446,   5446,   5446,   5449,   5449,   5449,
                          5471,   5471,   5471,   5471,   5471,   5471,   5471,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5948,   5948,
                          5948,   5948,   5948,   5948,   5948,   5948,   5948,
                          5948,   5948,   5948,   5948,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5956,   5956,   5956,
                          5956,   5956,   5956,   5956,   5956,   5956,   5956,
                          5956,   5956,   5956,   5956,   5956,   5956,   5956,
                          5974,   5974,   5974,   5974,   5974,   5974,   5974,
                          5974,   5978,   5978,   5978,   5978,   5978,   5978,
                          5978,   5989,   5989,   5989,   5989,   5989,   5989,
                          6868,   6868,   6868,   6868,   6868,   6868,   6872,
                          6872,   6872,   6872,   6872,   6936,   6936,   6936,
                          6936,   6936,   6936,   6937,   6937,   6937,   6957,
                          6957,   7006,   7006,   7006,   7015,   7015,   7015,
                          7015,   7015,   7021,   7021,   7021,   7021,   7021,
                          7065,   7065,   7065,   7065,   7065,   7065,   7065,
                          7075,   7075,   7075,   7075,   7089,   7089,   7089,
                          7089,   7104,   7104,   7104,   7104,   7107,   7107,
                          7107,   7827,   7827,   7827,   7827,   7827,   7883,
                          7883,   7883,   7931,   7931,   7931,   7931,   7934,
                          7934,   7934,   7934,   7945,   7945,   7945,   7945,
                          7945,   7945,   7945,   7958,   7958,   7958,   7958,
                          7958,   8004,   8004,   8004,   8035,   8035,   8035,
                          8035,   8035],
                       [154927, 154927, 154927,  63949,  63969,  63984, 154927,
                         63949,  63973,  63984, 154927,  63973,  63984, 154927,
                         63943,  63949,  63951,  63969,  63973,  63984, 154927,
                         47373,  47379,  47381,  47399,  47403,  47414, 179782,
                        263703, 263707, 263771, 263772, 263792, 263841, 263850,
                        263856, 263900, 263910, 263924, 263939, 263942, 264662,
                        264718, 264766, 264769, 264780, 264793, 264839, 264870,
                         82917, 193523, 223785, 237571, 255418, 255422, 255486,
                        255487, 255507, 255556, 255565, 255571, 255615, 255625,
                        255639, 255654, 255657, 256377, 256433, 256481, 256484,
                        256495, 256508, 256554, 256585, 304208, 304214, 304216,
                        304234, 304238, 304249, 328345, 328346,  38644, 146316,
                        179782, 247133, 247202, 247330, 247340, 248148, 248196,
                        248199, 248210, 248269, 248300,  38644, 146289, 146291,
                        146316, 179782, 247280, 247286,  38644, 146316, 179782,
                        247133, 247137, 247201, 247271, 247280, 247286, 247330,
                        247354, 247369, 248092, 248196, 248199, 248210, 248300,
                         38644, 146289, 146316, 179782, 247133, 247280, 247286,
                        247340,  38644, 146291, 146294, 146316, 179782, 247137,
                        247369,  38644, 146289, 146291, 146294, 146316, 179782,
                         22367, 113653, 113661, 113679, 146289, 146316,  22367,
                        113661, 113683, 146289, 146316,  22367, 113661, 146226,
                        146271, 146291, 146294,  22367, 113653, 146316,  22367,
                        146271,  22367, 113661, 146316,  22367, 113659, 113661,
                        113679, 146316,  22367, 113659, 113661, 113679, 146316,
                         22367, 113653, 113661, 146289, 146291, 146294, 146316,
                         22367, 113653, 113679, 146316,  22367, 113661, 146289,
                        146316,  22367, 113661, 113683, 146294,  22367, 146226,
                        146227,  22367, 113661, 146227, 146271, 146294,  22367,
                        113653, 146316,  22367, 113653, 113661, 146316,  22367,
                        113653, 113661, 146316,  22367, 113653, 113661, 146226,
                        146271, 146294, 146316,  22367, 146226, 146227, 146271,
                        146294,  22367, 113653, 146316,  22367, 113653, 113661,
                        146289, 146316]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=233, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 233
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:34,  4.28s/it]

epoch:  2 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5381,   5382,   5426,   5444,   5444,   5444,   5444,
                          5446,   5446,   5446,   5446,   5449,   5449,   5449,
                          5471,   5471,   5471,   5471,   5471,   5471,   5471,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5948,   5948,
                          5948,   5948,   5948,   5948,   5948,   5948,   5948,
                          5948,   5948,   5948,   5948,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5956,   5956,   5956,
                          5956,   5956,   5956,   5956,   5956,   5956,   5956,
                          5956,   5956,   5956,   5956,   5956,   5956,   5956,
                          5974,   5974,   5974,   5974,   5974,   5974,   5974,
                          5974,   5978,   5978,   5978,   5978,   5978,   5978,
                          5978,   5989,   5989,   5989,   5989,   5989,   5989,
                          6868,   6868,   6868,   6868,   6868,   6868,   6872,
                          6872,   6872,   6872,   6872,   6936,   6936,   6936,
                          6936,   6936,   6936,   6937,   6937,   6937,   6957,
                          6957,   7006,   7006,   7006,   7015,   7015,   7015,
                          7015,   7015,   7021,   7021,   7021,   7021,   7021,
                          7065,   7065,   7065,   7065,   7065,   7065,   7065,
                          7075,   7075,   7075,   7075,   7089,   7089,   7089,
                          7089,   7104,   7104,   7104,   7104,   7107,   7107,
                          7107,   7827,   7827,   7827,   7827,   7827,   7883,
                          7883,   7883,   7931,   7931,   7931,   7931,   7934,
                          7934,   7934,   7934,   7945,   7945,   7945,   7945,
                          7945,   7945,   7945,   7958,   7958,   7958,   7958,
                          7958,   8004,   8004,   8004,   8035,   8035,   8035,
                          8035,   8035],
                       [154927, 154927, 154927,  63949,  63969,  63984, 154927,
                         63949,  63973,  63984, 154927,  63973,  63984, 154927,
                         63943,  63949,  63951,  63969,  63973,  63984, 154927,
                         47373,  47379,  47381,  47399,  47403,  47414, 179782,
                        263703, 263707, 263771, 263772, 263792, 263841, 263850,
                        263856, 263900, 263910, 263924, 263939, 263942, 264662,
                        264718, 264766, 264769, 264780, 264793, 264839, 264870,
                         82917, 193523, 223785, 237571, 255418, 255422, 255486,
                        255487, 255507, 255556, 255565, 255571, 255615, 255625,
                        255639, 255654, 255657, 256377, 256433, 256481, 256484,
                        256495, 256508, 256554, 256585, 304208, 304214, 304216,
                        304234, 304238, 304249, 328345, 328346,  38644, 146316,
                        179782, 247133, 247202, 247330, 247340, 248148, 248196,
                        248199, 248210, 248269, 248300,  38644, 146289, 146291,
                        146316, 179782, 247280, 247286,  38644, 146316, 179782,
                        247133, 247137, 247201, 247271, 247280, 247286, 247330,
                        247354, 247369, 248092, 248196, 248199, 248210, 248300,
                         38644, 146289, 146316, 179782, 247133, 247280, 247286,
                        247340,  38644, 146291, 146294, 146316, 179782, 247137,
                        247369,  38644, 146289, 146291, 146294, 146316, 179782,
                         22367, 113653, 113661, 113679, 146289, 146316,  22367,
                        113661, 113683, 146289, 146316,  22367, 113661, 146226,
                        146271, 146291, 146294,  22367, 113653, 146316,  22367,
                        146271,  22367, 113661, 146316,  22367, 113659, 113661,
                        113679, 146316,  22367, 113659, 113661, 113679, 146316,
                         22367, 113653, 113661, 146289, 146291, 146294, 146316,
                         22367, 113653, 113679, 146316,  22367, 113661, 146289,
                        146316,  22367, 113661, 113683, 146294,  22367, 146226,
                        146227,  22367, 113661, 146227, 146271, 146294,  22367,
                        113653, 146316,  22367, 113653, 113661, 146316,  22367,
                        113653, 113661, 146316,  22367, 113653, 113661, 146226,
                        146271, 146294, 146316,  22367, 146226, 146227, 146271,
                        146294,  22367, 113653, 146316,  22367, 113653, 113661,
                        146289, 146316]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=233, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 233
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:25,  4.20s/it]
masked_hor: tensor(indices=tensor([[  5381,   5382,   5426,   5444,   5444,   5444,   5444,
                          5446,   5446,   5446,   5446,   5449,   5449,   5449,
                          5471,   5471,   5471,   5471,   5471,   5471,   5471,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5948,   5948,
                          5948,   5948,   5948,   5948,   5948,   5948,   5948,
                          5948,   5948,   5948,   5948,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5956,   5956,   5956,
                          5956,   5956,   5956,   5956,   5956,   5956,   5956,
                          5956,   5956,   5956,   5956,   5956,   5956,   5956,
                          5974,   5974,   5974,   5974,   5974,   5974,   5974,
                          5974,   5978,   5978,   5978,   5978,   5978,   5978,
                          5978,   5989,   5989,   5989,   5989,   5989,   5989,
                          6868,   6868,   6868,   6868,   6868,   6868,   6872,
                          6872,   6872,   6872,   6872,   6936,   6936,   6936,
                          6936,   6936,   6936,   6937,   6937,   6937,   6957,
                          6957,   7006,   7006,   7006,   7015,   7015,   7015,
                          7015,   7015,   7021,   7021,   7021,   7021,   7021,
                          7065,   7065,   7065,   7065,   7065,   7065,   7065,
                          7075,   7075,   7075,   7075,   7089,   7089,   7089,
                          7089,   7104,   7104,   7104,   7104,   7107,   7107,
                          7107,   7827,   7827,   7827,   7827,   7827,   7883,
                          7883,   7883,   7931,   7931,   7931,   7931,   7934,
                          7934,   7934,   7934,   7945,   7945,   7945,   7945,
                          7945,   7945,   7945,   7958,   7958,   7958,   7958,
                          7958,   8004,   8004,   8004,   8035,   8035,   8035,
                          8035,   8035],
                       [154927, 154927, 154927,  63949,  63969,  63984, 154927,
                         63949,  63973,  63984, 154927,  63973,  63984, 154927,
                         63943,  63949,  63951,  63969,  63973,  63984, 154927,
                         47373,  47379,  47381,  47399,  47403,  47414, 179782,
                        263703, 263707, 263771, 263772, 263792, 263841, 263850,
                        263856, 263900, 263910, 263924, 263939, 263942, 264662,
                        264718, 264766, 264769, 264780, 264793, 264839, 264870,
                         82917, 193523, 223785, 237571, 255418, 255422, 255486,
                        255487, 255507, 255556, 255565, 255571, 255615, 255625,
                        255639, 255654, 255657, 256377, 256433, 256481, 256484,
                        256495, 256508, 256554, 256585, 304208, 304214, 304216,
                        304234, 304238, 304249, 328345, 328346,  38644, 146316,
                        179782, 247133, 247202, 247330, 247340, 248148, 248196,
                        248199, 248210, 248269, 248300,  38644, 146289, 146291,
                        146316, 179782, 247280, 247286,  38644, 146316, 179782,
                        247133, 247137, 247201, 247271, 247280, 247286, 247330,
                        247354, 247369, 248092, 248196, 248199, 248210, 248300,
                         38644, 146289, 146316, 179782, 247133, 247280, 247286,
                        247340,  38644, 146291, 146294, 146316, 179782, 247137,
                        247369,  38644, 146289, 146291, 146294, 146316, 179782,
                         22367, 113653, 113661, 113679, 146289, 146316,  22367,
                        113661, 113683, 146289, 146316,  22367, 113661, 146226,
                        146271, 146291, 146294,  22367, 113653, 146316,  22367,
                        146271,  22367, 113661, 146316,  22367, 113659, 113661,
                        113679, 146316,  22367, 113659, 113661, 113679, 146316,
                         22367, 113653, 113661, 146289, 146291, 146294, 146316,
                         22367, 113653, 113679, 146316,  22367, 113661, 146289,
                        146316,  22367, 113661, 113683, 146294,  22367, 146226,
                        146227,  22367, 113661, 146227, 146271, 146294,  22367,
                        113653, 146316,  22367, 113653, 113661, 146316,  22367,
                        113653, 113661, 146316,  22367, 113653, 113661, 146226,
                        146271, 146294, 146316,  22367, 146226, 146227, 146271,
                        146294,  22367, 113653, 146316,  22367, 113653, 113661,
                        146289, 146316]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=233, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 233
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.18s/it]
epoch:  4 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5381,   5382,   5426,   5444,   5444,   5444,   5444,
                          5446,   5446,   5446,   5446,   5449,   5449,   5449,
                          5471,   5471,   5471,   5471,   5471,   5471,   5471,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5948,   5948,
                          5948,   5948,   5948,   5948,   5948,   5948,   5948,
                          5948,   5948,   5948,   5948,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5956,   5956,   5956,
                          5956,   5956,   5956,   5956,   5956,   5956,   5956,
                          5956,   5956,   5956,   5956,   5956,   5956,   5956,
                          5974,   5974,   5974,   5974,   5974,   5974,   5974,
                          5974,   5978,   5978,   5978,   5978,   5978,   5978,
                          5978,   5989,   5989,   5989,   5989,   5989,   5989,
                          6868,   6868,   6868,   6868,   6868,   6868,   6872,
                          6872,   6872,   6872,   6872,   6936,   6936,   6936,
                          6936,   6936,   6936,   6937,   6937,   6937,   6957,
                          6957,   7006,   7006,   7006,   7015,   7015,   7015,
                          7015,   7015,   7021,   7021,   7021,   7021,   7021,
                          7065,   7065,   7065,   7065,   7065,   7065,   7065,
                          7075,   7075,   7075,   7075,   7089,   7089,   7089,
                          7089,   7104,   7104,   7104,   7104,   7107,   7107,
                          7107,   7827,   7827,   7827,   7827,   7827,   7883,
                          7883,   7883,   7931,   7931,   7931,   7931,   7934,
                          7934,   7934,   7934,   7945,   7945,   7945,   7945,
                          7945,   7945,   7945,   7958,   7958,   7958,   7958,
                          7958,   8004,   8004,   8004,   8035,   8035,   8035,
                          8035,   8035],
                       [154927, 154927, 154927,  63949,  63969,  63984, 154927,
                         63949,  63973,  63984, 154927,  63973,  63984, 154927,
                         63943,  63949,  63951,  63969,  63973,  63984, 154927,
                         47373,  47379,  47381,  47399,  47403,  47414, 179782,
                        263703, 263707, 263771, 263772, 263792, 263841, 263850,
                        263856, 263900, 263910, 263924, 263939, 263942, 264662,
                        264718, 264766, 264769, 264780, 264793, 264839, 264870,
                         82917, 193523, 223785, 237571, 255418, 255422, 255486,
                        255487, 255507, 255556, 255565, 255571, 255615, 255625,
                        255639, 255654, 255657, 256377, 256433, 256481, 256484,
                        256495, 256508, 256554, 256585, 304208, 304214, 304216,
                        304234, 304238, 304249, 328345, 328346,  38644, 146316,
                        179782, 247133, 247202, 247330, 247340, 248148, 248196,
                        248199, 248210, 248269, 248300,  38644, 146289, 146291,
                        146316, 179782, 247280, 247286,  38644, 146316, 179782,
                        247133, 247137, 247201, 247271, 247280, 247286, 247330,
                        247354, 247369, 248092, 248196, 248199, 248210, 248300,
                         38644, 146289, 146316, 179782, 247133, 247280, 247286,
                        247340,  38644, 146291, 146294, 146316, 179782, 247137,
                        247369,  38644, 146289, 146291, 146294, 146316, 179782,
                         22367, 113653, 113661, 113679, 146289, 146316,  22367,
                        113661, 113683, 146289, 146316,  22367, 113661, 146226,
                        146271, 146291, 146294,  22367, 113653, 146316,  22367,
                        146271,  22367, 113661, 146316,  22367, 113659, 113661,
                        113679, 146316,  22367, 113659, 113661, 113679, 146316,
                         22367, 113653, 113661, 146289, 146291, 146294, 146316,
                         22367, 113653, 113679, 146316,  22367, 113661, 146289,
                        146316,  22367, 113661, 113683, 146294,  22367, 146226,
                        146227,  22367, 113661, 146227, 146271, 146294,  22367,
                        113653, 146316,  22367, 113653, 113661, 146316,  22367,
                        113653, 113661, 146316,  22367, 113653, 113661, 146226,
                        146271, 146294, 146316,  22367, 146226, 146227, 146271,
                        146294,  22367, 113653, 146316,  22367, 113653, 113661,
                        146289, 146316]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=233, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 233
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:25<00:16,  4.16s/it]
masked_hor: tensor(indices=tensor([[  5381,   5382,   5426,   5444,   5444,   5444,   5444,
                          5446,   5446,   5446,   5446,   5449,   5449,   5449,
                          5471,   5471,   5471,   5471,   5471,   5471,   5471,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5948,   5948,
                          5948,   5948,   5948,   5948,   5948,   5948,   5948,
                          5948,   5948,   5948,   5948,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5956,   5956,   5956,
                          5956,   5956,   5956,   5956,   5956,   5956,   5956,
                          5956,   5956,   5956,   5956,   5956,   5956,   5956,
                          5974,   5974,   5974,   5974,   5974,   5974,   5974,
                          5974,   5978,   5978,   5978,   5978,   5978,   5978,
                          5978,   5989,   5989,   5989,   5989,   5989,   5989,
                          6868,   6868,   6868,   6868,   6868,   6868,   6872,
                          6872,   6872,   6872,   6872,   6936,   6936,   6936,
                          6936,   6936,   6936,   6937,   6937,   6937,   6957,
                          6957,   7006,   7006,   7006,   7015,   7015,   7015,
                          7015,   7015,   7021,   7021,   7021,   7021,   7021,
                          7065,   7065,   7065,   7065,   7065,   7065,   7065,
                          7075,   7075,   7075,   7075,   7089,   7089,   7089,
                          7089,   7104,   7104,   7104,   7104,   7107,   7107,
                          7107,   7827,   7827,   7827,   7827,   7827,   7883,
                          7883,   7883,   7931,   7931,   7931,   7931,   7934,
                          7934,   7934,   7934,   7945,   7945,   7945,   7945,
                          7945,   7945,   7945,   7958,   7958,   7958,   7958,
                          7958,   8004,   8004,   8004,   8035,   8035,   8035,
                          8035,   8035],
                       [154927, 154927, 154927,  63949,  63969,  63984, 154927,
                         63949,  63973,  63984, 154927,  63973,  63984, 154927,
                         63943,  63949,  63951,  63969,  63973,  63984, 154927,
                         47373,  47379,  47381,  47399,  47403,  47414, 179782,
                        263703, 263707, 263771, 263772, 263792, 263841, 263850,
                        263856, 263900, 263910, 263924, 263939, 263942, 264662,
                        264718, 264766, 264769, 264780, 264793, 264839, 264870,
                         82917, 193523, 223785, 237571, 255418, 255422, 255486,
                        255487, 255507, 255556, 255565, 255571, 255615, 255625,
                        255639, 255654, 255657, 256377, 256433, 256481, 256484,
                        256495, 256508, 256554, 256585, 304208, 304214, 304216,
                        304234, 304238, 304249, 328345, 328346,  38644, 146316,
                        179782, 247133, 247202, 247330, 247340, 248148, 248196,
                        248199, 248210, 248269, 248300,  38644, 146289, 146291,
                        146316, 179782, 247280, 247286,  38644, 146316, 179782,
                        247133, 247137, 247201, 247271, 247280, 247286, 247330,
                        247354, 247369, 248092, 248196, 248199, 248210, 248300,
                         38644, 146289, 146316, 179782, 247133, 247280, 247286,
                        247340,  38644, 146291, 146294, 146316, 179782, 247137,
                        247369,  38644, 146289, 146291, 146294, 146316, 179782,
                         22367, 113653, 113661, 113679, 146289, 146316,  22367,
                        113661, 113683, 146289, 146316,  22367, 113661, 146226,
                        146271, 146291, 146294,  22367, 113653, 146316,  22367,
                        146271,  22367, 113661, 146316,  22367, 113659, 113661,
                        113679, 146316,  22367, 113659, 113661, 113679, 146316,
                         22367, 113653, 113661, 146289, 146291, 146294, 146316,
                         22367, 113653, 113679, 146316,  22367, 113661, 146289,
                        146316,  22367, 113661, 113683, 146294,  22367, 146226,
                        146227,  22367, 113661, 146227, 146271, 146294,  22367,
                        113653, 146316,  22367, 113653, 113661, 146316,  22367,
                        113653, 113661, 146316,  22367, 113653, 113661, 146226,
                        146271, 146294, 146316,  22367, 146226, 146227, 146271,
                        146294,  22367, 113653, 146316,  22367, 113653, 113661,
                        146289, 146316]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=233, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 233
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)
size_num_loss 0.0
epoch:  6 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5381,   5382,   5426,   5444,   5444,   5444,   5444,
                          5446,   5446,   5446,   5446,   5449,   5449,   5449,
                          5471,   5471,   5471,   5471,   5471,   5471,   5471,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5948,   5948,
                          5948,   5948,   5948,   5948,   5948,   5948,   5948,
                          5948,   5948,   5948,   5948,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5956,   5956,   5956,
                          5956,   5956,   5956,   5956,   5956,   5956,   5956,
                          5956,   5956,   5956,   5956,   5956,   5956,   5956,
                          5974,   5974,   5974,   5974,   5974,   5974,   5974,
                          5974,   5978,   5978,   5978,   5978,   5978,   5978,
                          5978,   5989,   5989,   5989,   5989,   5989,   5989,
                          6868,   6868,   6868,   6868,   6868,   6868,   6872,
                          6872,   6872,   6872,   6872,   6936,   6936,   6936,
                          6936,   6936,   6936,   6937,   6937,   6937,   6957,
                          6957,   7006,   7006,   7006,   7015,   7015,   7015,
                          7015,   7015,   7021,   7021,   7021,   7021,   7021,
                          7065,   7065,   7065,   7065,   7065,   7065,   7065,
                          7075,   7075,   7075,   7075,   7089,   7089,   7089,
                          7089,   7104,   7104,   7104,   7104,   7107,   7107,
                          7107,   7827,   7827,   7827,   7827,   7827,   7883,
                          7883,   7883,   7931,   7931,   7931,   7931,   7934,
                          7934,   7934,   7934,   7945,   7945,   7945,   7945,
                          7945,   7945,   7945,   7958,   7958,   7958,   7958,
                          7958,   8004,   8004,   8004,   8035,   8035,   8035,
                          8035,   8035],
                       [154927, 154927, 154927,  63949,  63969,  63984, 154927,
                         63949,  63973,  63984, 154927,  63973,  63984, 154927,
                         63943,  63949,  63951,  63969,  63973,  63984, 154927,
                         47373,  47379,  47381,  47399,  47403,  47414, 179782,
                        263703, 263707, 263771, 263772, 263792, 263841, 263850,
                        263856, 263900, 263910, 263924, 263939, 263942, 264662,
                        264718, 264766, 264769, 264780, 264793, 264839, 264870,
                         82917, 193523, 223785, 237571, 255418, 255422, 255486,
                        255487, 255507, 255556, 255565, 255571, 255615, 255625,
                        255639, 255654, 255657, 256377, 256433, 256481, 256484,
                        256495, 256508, 256554, 256585, 304208, 304214, 304216,
                        304234, 304238, 304249, 328345, 328346,  38644, 146316,
                        179782, 247133, 247202, 247330, 247340, 248148, 248196,
                        248199, 248210, 248269, 248300,  38644, 146289, 146291,
                        146316, 179782, 247280, 247286,  38644, 146316, 179782,
                        247133, 247137, 247201, 247271, 247280, 247286, 247330,
                        247354, 247369, 248092, 248196, 248199, 248210, 248300,
                         38644, 146289, 146316, 179782, 247133, 247280, 247286,
                        247340,  38644, 146291, 146294, 146316, 179782, 247137,
                        247369,  38644, 146289, 146291, 146294, 146316, 179782,
                         22367, 113653, 113661, 113679, 146289, 146316,  22367,
                        113661, 113683, 146289, 146316,  22367, 113661, 146226,
                        146271, 146291, 146294,  22367, 113653, 146316,  22367,
                        146271,  22367, 113661, 146316,  22367, 113659, 113661,
                        113679, 146316,  22367, 113659, 113661, 113679, 146316,
                         22367, 113653, 113661, 146289, 146291, 146294, 146316,
                         22367, 113653, 113679, 146316,  22367, 113661, 146289,
                        146316,  22367, 113661, 113683, 146294,  22367, 146226,
                        146227,  22367, 113661, 146227, 146271, 146294,  22367,
                        113653, 146316,  22367, 113653, 113661, 146316,  22367,
                        113653, 113661, 146316,  22367, 113653, 113661, 146226,
                        146271, 146294, 146316,  22367, 146226, 146227, 146271,
                        146294,  22367, 113653, 146316,  22367, 113653, 113661,
                        146289, 146316]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=233, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 233
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:29<00:12,  4.15s/it]
masked_hor: tensor(indices=tensor([[  5381,   5382,   5426,   5444,   5444,   5444,   5444,
                          5446,   5446,   5446,   5446,   5449,   5449,   5449,
                          5471,   5471,   5471,   5471,   5471,   5471,   5471,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5948,   5948,
                          5948,   5948,   5948,   5948,   5948,   5948,   5948,
                          5948,   5948,   5948,   5948,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5956,   5956,   5956,
                          5956,   5956,   5956,   5956,   5956,   5956,   5956,
                          5956,   5956,   5956,   5956,   5956,   5956,   5956,
                          5974,   5974,   5974,   5974,   5974,   5974,   5974,
                          5974,   5978,   5978,   5978,   5978,   5978,   5978,
                          5978,   5989,   5989,   5989,   5989,   5989,   5989,
                          6868,   6868,   6868,   6868,   6868,   6868,   6872,
                          6872,   6872,   6872,   6872,   6936,   6936,   6936,
                          6936,   6936,   6936,   6937,   6937,   6937,   6957,
                          6957,   7006,   7006,   7006,   7015,   7015,   7015,
                          7015,   7015,   7021,   7021,   7021,   7021,   7021,
                          7065,   7065,   7065,   7065,   7065,   7065,   7065,
                          7075,   7075,   7075,   7075,   7089,   7089,   7089,
                          7089,   7104,   7104,   7104,   7104,   7107,   7107,
                          7107,   7827,   7827,   7827,   7827,   7827,   7883,
                          7883,   7883,   7931,   7931,   7931,   7931,   7934,
                          7934,   7934,   7934,   7945,   7945,   7945,   7945,
                          7945,   7945,   7945,   7958,   7958,   7958,   7958,
                          7958,   8004,   8004,   8004,   8035,   8035,   8035,
                          8035,   8035],
                       [154927, 154927, 154927,  63949,  63969,  63984, 154927,
                         63949,  63973,  63984, 154927,  63973,  63984, 154927,
                         63943,  63949,  63951,  63969,  63973,  63984, 154927,
                         47373,  47379,  47381,  47399,  47403,  47414, 179782,
                        263703, 263707, 263771, 263772, 263792, 263841, 263850,
                        263856, 263900, 263910, 263924, 263939, 263942, 264662,
                        264718, 264766, 264769, 264780, 264793, 264839, 264870,
                         82917, 193523, 223785, 237571, 255418, 255422, 255486,
                        255487, 255507, 255556, 255565, 255571, 255615, 255625,
                        255639, 255654, 255657, 256377, 256433, 256481, 256484,
                        256495, 256508, 256554, 256585, 304208, 304214, 304216,
                        304234, 304238, 304249, 328345, 328346,  38644, 146316,
                        179782, 247133, 247202, 247330, 247340, 248148, 248196,
                        248199, 248210, 248269, 248300,  38644, 146289, 146291,
                        146316, 179782, 247280, 247286,  38644, 146316, 179782,
                        247133, 247137, 247201, 247271, 247280, 247286, 247330,
                        247354, 247369, 248092, 248196, 248199, 248210, 248300,
                         38644, 146289, 146316, 179782, 247133, 247280, 247286,
                        247340,  38644, 146291, 146294, 146316, 179782, 247137,
                        247369,  38644, 146289, 146291, 146294, 146316, 179782,
                         22367, 113653, 113661, 113679, 146289, 146316,  22367,
                        113661, 113683, 146289, 146316,  22367, 113661, 146226,
                        146271, 146291, 146294,  22367, 113653, 146316,  22367,
                        146271,  22367, 113661, 146316,  22367, 113659, 113661,
                        113679, 146316,  22367, 113659, 113661, 113679, 146316,
                         22367, 113653, 113661, 146289, 146291, 146294, 146316,
                         22367, 113653, 113679, 146316,  22367, 113661, 146289,
                        146316,  22367, 113661, 113683, 146294,  22367, 146226,
                        146227,  22367, 113661, 146227, 146271, 146294,  22367,
                        113653, 146316,  22367, 113653, 113661, 146316,  22367,
                        113653, 113661, 146316,  22367, 113653, 113661, 146226,
                        146271, 146294, 146316,  22367, 146226, 146227, 146271,
                        146294,  22367, 113653, 146316,  22367, 113653, 113661,
                        146289, 146316]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=233, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 233
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)


 90%|######### | 9/10 [00:37<00:04,  4.15s/it]
epoch:  8 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5381,   5382,   5426,   5444,   5444,   5444,   5444,
                          5446,   5446,   5446,   5446,   5449,   5449,   5449,
                          5471,   5471,   5471,   5471,   5471,   5471,   5471,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5797,   5797,
                          5797,   5797,   5797,   5797,   5797,   5948,   5948,
                          5948,   5948,   5948,   5948,   5948,   5948,   5948,
                          5948,   5948,   5948,   5948,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5956,   5956,   5956,
                          5956,   5956,   5956,   5956,   5956,   5956,   5956,
                          5956,   5956,   5956,   5956,   5956,   5956,   5956,
                          5974,   5974,   5974,   5974,   5974,   5974,   5974,
                          5974,   5978,   5978,   5978,   5978,   5978,   5978,
                          5978,   5989,   5989,   5989,   5989,   5989,   5989,
                          6868,   6868,   6868,   6868,   6868,   6868,   6872,
                          6872,   6872,   6872,   6872,   6936,   6936,   6936,
                          6936,   6936,   6936,   6937,   6937,   6937,   6957,
                          6957,   7006,   7006,   7006,   7015,   7015,   7015,
                          7015,   7015,   7021,   7021,   7021,   7021,   7021,
                          7065,   7065,   7065,   7065,   7065,   7065,   7065,
                          7075,   7075,   7075,   7075,   7089,   7089,   7089,
                          7089,   7104,   7104,   7104,   7104,   7107,   7107,
                          7107,   7827,   7827,   7827,   7827,   7827,   7883,
                          7883,   7883,   7931,   7931,   7931,   7931,   7934,
                          7934,   7934,   7934,   7945,   7945,   7945,   7945,
                          7945,   7945,   7945,   7958,   7958,   7958,   7958,
                          7958,   8004,   8004,   8004,   8035,   8035,   8035,
                          8035,   8035],
                       [154927, 154927, 154927,  63949,  63969,  63984, 154927,
                         63949,  63973,  63984, 154927,  63973,  63984, 154927,
                         63943,  63949,  63951,  63969,  63973,  63984, 154927,
                         47373,  47379,  47381,  47399,  47403,  47414, 179782,
                        263703, 263707, 263771, 263772, 263792, 263841, 263850,
                        263856, 263900, 263910, 263924, 263939, 263942, 264662,
                        264718, 264766, 264769, 264780, 264793, 264839, 264870,
                         82917, 193523, 223785, 237571, 255418, 255422, 255486,
                        255487, 255507, 255556, 255565, 255571, 255615, 255625,
                        255639, 255654, 255657, 256377, 256433, 256481, 256484,
                        256495, 256508, 256554, 256585, 304208, 304214, 304216,
                        304234, 304238, 304249, 328345, 328346,  38644, 146316,
                        179782, 247133, 247202, 247330, 247340, 248148, 248196,
                        248199, 248210, 248269, 248300,  38644, 146289, 146291,
                        146316, 179782, 247280, 247286,  38644, 146316, 179782,
                        247133, 247137, 247201, 247271, 247280, 247286, 247330,
                        247354, 247369, 248092, 248196, 248199, 248210, 248300,
                         38644, 146289, 146316, 179782, 247133, 247280, 247286,
                        247340,  38644, 146291, 146294, 146316, 179782, 247137,
                        247369,  38644, 146289, 146291, 146294, 146316, 179782,
                         22367, 113653, 113661, 113679, 146289, 146316,  22367,
                        113661, 113683, 146289, 146316,  22367, 113661, 146226,
                        146271, 146291, 146294,  22367, 113653, 146316,  22367,
                        146271,  22367, 113661, 146316,  22367, 113659, 113661,
                        113679, 146316,  22367, 113659, 113661, 113679, 146316,
                         22367, 113653, 113661, 146289, 146291, 146294, 146316,
                         22367, 113653, 113679, 146316,  22367, 113661, 146289,
                        146316,  22367, 113661, 113683, 146294,  22367, 146226,
                        146227,  22367, 113661, 146227, 146271, 146294,  22367,
                        113653, 146316,  22367, 113653, 113661, 146316,  22367,
                        113653, 113661, 146316,  22367, 113653, 113661, 146226,
                        146271, 146294, 146316,  22367, 146226, 146227, 146271,
                        146294,  22367, 113653, 146316,  22367, 113653, 113661,
                        146289, 146316]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=233, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 233
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

100%|##########| 10/10 [00:41<00:00,  4.17s/it]
train modality
node_idx: 5900 belonging to  2
  0%|          | 0/10 [00:00<?, ?it/s]
410
start training
masked_hor: tensor(indices=tensor([[  5349,   5352,   5352,   5371,   5396,   5459,   5459,
                          5459,   5460,   5460,   5460,   5462,   5462,   5462,
                          5471,   5471,   5471,   5492,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   6815,   6815,   6815,
                          6815,   6815,   6839,   6839,   6839,   6839,   6848,
                          6848,   6848,   6848,   6848,   6848,   6848,   6850,
                          6850,   6850,   6850,   6860,   6860,   6860,   6860,
                          6860,   6860,   6861,   6861,   6861,   6861,   6861,
                          6861,   6861,   6866,   6866,   6866,   6866,   6866,
                          6866,   6870,   6870,   6870,   6870,   6874,   6874,
                          6874,   6874,   6919,   6919,   6919,   6919,   6919,
                          6920,   6920,   6920,   6920,   6920,   6920,   6928,
                          6928,   6928,   6928,   6928,   6928,   6928,   6928,
                          6928,   6952,   6952,   6952,   6952,   6952,   6952,
                          6976,   6976,   6976,   6976,   6976,   6976,   6976,
                          6979,   7054,   7054,   7054,   7054,   7061,   7061,
                          7061,   7061,   7061,   7061,   7063,   7063,   7063,
                          7063,   7063,   7091,   7091,   7091,   7091,   7168,
                          7168,   7380,   7380,   7380,   7380,   7380,   7381,
                          7381,   7382,   7382,   7382,   7382,   7382,   7402,
                          7402,   7402,   7410,   7410,   7410,   7410,   7463,
                          7463,   7463,   7463,   7463,   7463,   7463,   7463,
                          7463,   7463,   7468,   7468,   7468,   7468,   7468,
                          7486,   7486,   7486,   7486,   7486,   7486,   7486,
                          7486,   7486,   7486,   7487,   7487,   7487,   7487,
                          7487,   7487,   7487,   7731,   7731,   7731,   7731,
                          7731,   7731,   7731,   7731,   7737,   7737,   7737,
                          7777,   7777,   7777,   7777,   7777,   7777,   7777,
                          7777,   7778,   7778,   7778,   7778,   7778,   7778,
                          7778,   7780,   7780,   7791,   7791,   7791,   7791,
                          7791,   7791,   7791,   7835,   7835,   7835,   7835,
                          7835,   7835,   7836,   7836,   7836,   7837,   7837,
                          7837,   7837,   7837,   7837,   7837,   7838,   7838,
                          7838,   7838,   7838,   7839,   7839,   7839,   7857,
                          7857,   7857,   7857,   7857,   7857,   7878,   7878,
                          7878,   7878,   7905,   7905,   7905,   7905,   7905,
                          7905,   7905,   7905,   7933,   7933,   7933,   7933,
                          7933,   7933,   7951,   7951,   7951,   7951,   7951,
                          7951,   7960,   7960,   7960,   7960,   7970,   7970,
                          7970,   7970,   7970,   7973,   7973,   7973,   7973,
                          7973,   7973,   7973,   7973],
                       [155030,  63949, 155030, 155030, 155030,  63931,  63942,
                        155030,  63942,  63949, 155030,  63942,  63949, 155030,
                         63931,  63949, 155030, 155030,  82948, 132324, 192126,
                        223785, 237645, 255365, 255389, 255398, 255400, 255410,
                        255411, 255416, 255420, 255424, 255469, 255470, 255478,
                        255502, 255526, 255529, 255604, 255611, 255613, 255641,
                        255718, 255930, 255931, 255932, 255952, 255960, 256013,
                        256018, 256036, 256037, 256281, 256287, 256327, 256328,
                        256330, 256341, 256385, 256386, 256387, 256388, 256389,
                        256407, 256428, 256455, 256483, 256501, 256510, 256520,
                        256523, 304207, 304214, 328345, 146304, 146316, 179885,
                        247080, 247104, 247115, 247135, 247241, 247319, 247645,
                        247646, 247647, 247667, 247675, 247728, 247733, 247751,
                        247752, 247996, 248002, 248056, 248101, 248102, 248103,
                        248104, 248143, 248225, 248235, 146304, 146305, 146307,
                        179885, 247080, 247113, 247125, 247126, 247184, 247185,
                        247193, 247217, 247241, 247326, 247328, 247356, 247728,
                        247751, 247752, 247996, 248042, 248043, 248056, 248100,
                        248122, 248170, 248198, 248216, 248238, 146197, 146305,
                        146307, 146316, 179885, 247125, 247126, 247139, 247193,
                        247728, 247751, 247752, 247996, 248042, 248043, 248056,
                        248100, 248122, 248170, 248238,  22470, 113641, 113652,
                        146216, 146316,  22470, 113641, 146216, 146316,  22470,
                        113652, 146216, 146241, 146305, 146307, 146316,  22470,
                        113641, 146216, 146316,  22470, 113652, 113659, 146241,
                        146305, 146307,  22470, 113652, 113659, 146241, 146304,
                        146305, 146307,  22470, 146216, 146241, 146305, 146307,
                        146316,  22470, 113641, 146216, 146316,  22470, 113659,
                        146305, 146307,  22470, 113652, 146241, 146305, 146307,
                         22470, 113652, 146241, 146305, 146307, 146316,  22470,
                        113652, 113659, 146194, 146197, 146241, 146304, 146305,
                        146307,  22470, 113652, 146241, 146304, 146305, 146307,
                         22470, 113641, 113652, 146216, 146241, 146305, 146307,
                         22470,  22470, 113641, 146216, 146316,  22470, 113652,
                        146241, 146305, 146307, 146316,  22470, 113652, 146241,
                        146305, 146307,  22470, 113652, 146305, 146307,  22470,
                        146316,  22470, 113641, 146304, 146305, 146316,  22470,
                        113641,  22470, 113641, 146304, 146316, 146337,  22470,
                        113641, 146316,  22470, 113641, 146304, 146316,  22470,
                        113641, 113652, 113659, 146216, 146304, 146305, 146307,
                        146316, 146337,  22470, 113641, 146216, 146304, 146316,
                         22470, 113641, 113652, 113659, 146197, 146216, 146304,
                        146305, 146307, 146337,  22470, 113641, 113652, 113659,
                        146216, 146304, 146337,  22470, 113641, 113652, 113659,
                        146216, 146304, 146305, 146307,  22470, 113641, 146216,
                         22470, 113652, 113659, 146197, 146304, 146305, 146307,
                        146316,  22470, 113652, 113659, 146197, 146305, 146307,
                        146316,  22470, 146197,  22470, 113641, 113652, 113659,
                        146304, 146305, 146307,  22470, 113652, 113659, 146304,
                        146305, 146307,  22470, 113641, 146216,  22470, 113641,
                        146216, 146304, 146305, 146307, 146337,  22470, 113641,
                        146216, 146304, 146316,  22470, 113641, 146216,  22470,
                        113652, 113659, 146304, 146305, 146307,  22470, 113641,
                        146216, 146304,  22470, 113652, 113659, 146197, 146304,
                        146305, 146307, 146316,  22470, 113652, 146304, 146305,
                        146307, 146316,  22470, 113652, 146197, 146216, 146304,
                        146305,  22470, 113641, 146216, 146316,  22470, 113641,
                        146216, 146304, 146316,  22470, 113652, 113659, 146197,
                        146304, 146305, 146307, 146316]]),
       values=tensor([0.7567, 0.7510, 0.7432, 0.7012, 0.7403, 0.3569, 0.3652,
                      0.7085, 0.3603, 0.3765, 0.7256, 0.3557, 0.3605, 0.7233,
                      0.3602, 0.3707, 0.7530, 0.7289, 0.7242, 0.7371, 0.7205,
                      0.7456, 0.7419, 0.0157, 0.0156, 0.0156, 0.0154, 0.0156,
                      0.0152, 0.0152, 0.0152, 0.0155, 0.0148, 0.0150, 0.0152,
                      0.0157, 0.0153, 0.0151, 0.0153, 0.0150, 0.0148, 0.0155,
                      0.0150, 0.0151, 0.0149, 0.0158, 0.0149, 0.0151, 0.0150,
                      0.0150, 0.0153, 0.0154, 0.0151, 0.0156, 0.0150, 0.0150,
                      0.0148, 0.0152, 0.0152, 0.0154, 0.0152, 0.0157, 0.0149,
                      0.0156, 0.0156, 0.0155, 0.0158, 0.0154, 0.0153, 0.0152,
                      0.0149, 0.3741, 0.3643, 0.7382, 0.3659, 0.3684, 0.7389,
                      0.0289, 0.0280, 0.0288, 0.0292, 0.0291, 0.0285, 0.0289,
                      0.0295, 0.0295, 0.0299, 0.0293, 0.0296, 0.0290, 0.0287,
                      0.0296, 0.0283, 0.0288, 0.0300, 0.0295, 0.0278, 0.0295,
                      0.0297, 0.0293, 0.0296, 0.0296, 0.2485, 0.2416, 0.2428,
                      0.7413, 0.0295, 0.0293, 0.0294, 0.0299, 0.0292, 0.0291,
                      0.0284, 0.0292, 0.0289, 0.0295, 0.0296, 0.0293, 0.0290,
                      0.0295, 0.0292, 0.0294, 0.0293, 0.0297, 0.0298, 0.0294,
                      0.0296, 0.0295, 0.0303, 0.0298, 0.0284, 0.1788, 0.1823,
                      0.1882, 0.1850, 0.7389, 0.0498, 0.0488, 0.0470, 0.0496,
                      0.0484, 0.0497, 0.0481, 0.0493, 0.0478, 0.0496, 0.0502,
                      0.0500, 0.0490, 0.0485, 0.0481, 0.7325, 0.3679, 0.3721,
                      0.3623, 0.3763, 0.6957, 0.7253, 0.3572, 0.3710, 0.7042,
                      0.7342, 0.1463, 0.1453, 0.1470, 0.1442, 0.1467, 0.7158,
                      0.7085, 0.3746, 0.3742, 0.7318, 0.3546, 0.3707, 0.2472,
                      0.2527, 0.2439, 0.7327, 0.3599, 0.3641, 0.1795, 0.1772,
                      0.1788, 0.1810, 0.7239, 0.1420, 0.1408, 0.1466, 0.1490,
                      0.1447, 0.7406, 0.7407, 0.3774, 0.3591, 0.7441, 0.7264,
                      0.3573, 0.3680, 0.7376, 0.7492, 0.2461, 0.2530, 0.2413,
                      0.7181, 0.7336, 0.1864, 0.1872, 0.1843, 0.1799, 0.7168,
                      0.3621, 0.3614, 0.1222, 0.1228, 0.1215, 0.1163, 0.1209,
                      0.1243, 0.7059, 0.7513, 0.1838, 0.1810, 0.1863, 0.1884,
                      0.7310, 0.3767, 0.3666, 0.1791, 0.1808, 0.1831, 0.1841,
                      0.7575, 0.7301, 0.7184, 0.3510, 0.3580, 0.7313, 0.7321,
                      0.1834, 0.1842, 0.1795, 0.1837, 0.7236, 0.7374, 0.2396,
                      0.2436, 0.2421, 0.7507, 0.7479, 0.3606, 0.3713, 0.7380,
                      0.7384, 0.7388, 0.7379, 0.2447, 0.2405, 0.2462, 0.7099,
                      0.7084, 0.7103, 0.7370, 0.2431, 0.2472, 0.2362, 0.7296,
                      0.7408, 0.7316, 0.7486, 0.7344, 0.3515, 0.3657, 0.7117,
                      0.2465, 0.2314, 0.2436, 0.1216, 0.1201, 0.1256, 0.1220,
                      0.1245, 0.1261, 0.7409, 0.7443, 0.2456, 0.2489, 0.2449,
                      0.7306, 0.2481, 0.2390, 0.2412, 0.1208, 0.1211, 0.1215,
                      0.1202, 0.1217, 0.1263, 0.7345, 0.2479, 0.2469, 0.2435,
                      0.2442, 0.2497, 0.2469, 0.7366, 0.2404, 0.2475, 0.2392,
                      0.1843, 0.1870, 0.1746, 0.1783, 0.7335, 0.7009, 0.7292,
                      0.7165, 0.3602, 0.3651, 0.1495, 0.1435, 0.1474, 0.1442,
                      0.1491, 0.7106, 0.3687, 0.3681, 0.1827, 0.1830, 0.1841,
                      0.1852, 0.7067, 0.7193, 0.7370, 0.2449, 0.2410, 0.2441,
                      0.2477, 0.2445, 0.2472, 0.7303, 0.3694, 0.3606, 0.2414,
                      0.2439, 0.2464, 0.7529, 0.7299, 0.7457, 0.7439, 0.7217,
                      0.1446, 0.1453, 0.1440, 0.1472, 0.1465, 0.7137, 0.7266,
                      0.2398, 0.2411, 0.2525, 0.7563, 0.7537, 0.7314, 0.7286,
                      0.3530, 0.3606, 0.2419, 0.2521, 0.2427, 0.7333, 0.7595,
                      0.3769, 0.3679, 0.7398, 0.3641, 0.3702, 0.1458, 0.1429,
                      0.1426, 0.1474, 0.1446, 0.7426, 0.7243, 0.1815, 0.1850,
                      0.1825, 0.1820, 0.7333, 0.7508, 0.1795, 0.1807, 0.1824,
                      0.1793, 0.6956, 0.7374, 0.3682, 0.3461, 0.7226, 0.7497,
                      0.2447, 0.2468, 0.2375, 0.7420, 0.3706, 0.3684, 0.1499,
                      0.1500, 0.1442, 0.1449, 0.1442]),
       size=(8285, 753935), nnz=410, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([0.7567, 0.7510, 0.7432, 0.7012, 0.7403, 0.7138, 0.7305, 0.7085, 0.7206,
        0.7531, 0.7256, 0.7114, 0.7209, 0.7233, 0.7204, 0.7414, 0.7530, 0.7289,
        0.7242, 0.7371, 0.7205, 0.7456, 0.7419, 0.7535, 0.7483, 0.7485, 0.7394,
        0.7490, 0.7279, 0.7316, 0.7276, 0.7427, 0.7116, 0.7189, 0.7280, 0.7540,
        0.7354, 0.7252, 0.7352, 0.7203, 0.7091, 0.7445, 0.7188, 0.7227, 0.7132,
        0.7592, 0.7138, 0.7243, 0.7183, 0.7219, 0.7321, 0.7382, 0.7243, 0.7471,
        0.7197, 0.7208, 0.7114, 0.7316, 0.7302, 0.7402, 0.7297, 0.7556, 0.7145,
        0.7496, 0.7504, 0.7427, 0.7604, 0.7382, 0.7358, 0.7283, 0.7163, 0.7482,
        0.7287, 0.7382, 0.7318, 0.7369, 0.7389, 0.7222, 0.6997, 0.7206, 0.7312,
        0.7264, 0.7123, 0.7229, 0.7384, 0.7382, 0.7464, 0.7318, 0.7412, 0.7244,
        0.7164, 0.7393, 0.7068, 0.7195, 0.7490, 0.7376, 0.6952, 0.7377, 0.7417,
        0.7315, 0.7398, 0.7390, 0.7455, 0.7248, 0.7285, 0.7413, 0.7366, 0.7335,
        0.7347, 0.7482, 0.7310, 0.7269, 0.7106, 0.7297, 0.7228, 0.7376, 0.7409,
        0.7323, 0.7257, 0.7382, 0.7309, 0.7344, 0.7329, 0.7414, 0.7458, 0.7357,
        0.7408, 0.7367, 0.7567, 0.7447, 0.7109, 0.7153, 0.7292, 0.7529, 0.7400,
        0.7389, 0.7464, 0.7313, 0.7056, 0.7436, 0.7259, 0.7450, 0.7215, 0.7397,
        0.7175, 0.7440, 0.7527, 0.7505, 0.7347, 0.7282, 0.7209, 0.7325, 0.7358,
        0.7441, 0.7246, 0.7525, 0.6957, 0.7253, 0.7143, 0.7421, 0.7042, 0.7342,
        0.7314, 0.7263, 0.7350, 0.7209, 0.7335, 0.7158, 0.7085, 0.7492, 0.7484,
        0.7318, 0.7093, 0.7413, 0.7416, 0.7580, 0.7316, 0.7327, 0.7199, 0.7282,
        0.7181, 0.7087, 0.7152, 0.7238, 0.7239, 0.7100, 0.7038, 0.7328, 0.7449,
        0.7234, 0.7406, 0.7407, 0.7547, 0.7182, 0.7441, 0.7264, 0.7146, 0.7359,
        0.7376, 0.7492, 0.7382, 0.7591, 0.7238, 0.7181, 0.7336, 0.7455, 0.7486,
        0.7373, 0.7197, 0.7168, 0.7242, 0.7228, 0.7332, 0.7371, 0.7290, 0.6981,
        0.7256, 0.7456, 0.7059, 0.7513, 0.7353, 0.7241, 0.7450, 0.7536, 0.7310,
        0.7533, 0.7332, 0.7163, 0.7231, 0.7322, 0.7365, 0.7575, 0.7301, 0.7184,
        0.7020, 0.7160, 0.7313, 0.7321, 0.7337, 0.7366, 0.7181, 0.7348, 0.7236,
        0.7374, 0.7189, 0.7307, 0.7262, 0.7507, 0.7479, 0.7211, 0.7426, 0.7380,
        0.7384, 0.7388, 0.7379, 0.7341, 0.7215, 0.7387, 0.7099, 0.7084, 0.7103,
        0.7370, 0.7293, 0.7417, 0.7085, 0.7296, 0.7408, 0.7316, 0.7486, 0.7344,
        0.7031, 0.7313, 0.7117, 0.7396, 0.6941, 0.7307, 0.7294, 0.7207, 0.7539,
        0.7319, 0.7471, 0.7568, 0.7409, 0.7443, 0.7367, 0.7466, 0.7347, 0.7306,
        0.7442, 0.7169, 0.7236, 0.7250, 0.7267, 0.7293, 0.7211, 0.7304, 0.7579,
        0.7345, 0.7437, 0.7407, 0.7306, 0.7325, 0.7491, 0.7407, 0.7366, 0.7211,
        0.7424, 0.7177, 0.7372, 0.7478, 0.6982, 0.7130, 0.7335, 0.7009, 0.7292,
        0.7165, 0.7204, 0.7303, 0.7473, 0.7174, 0.7370, 0.7211, 0.7453, 0.7106,
        0.7374, 0.7361, 0.7310, 0.7321, 0.7362, 0.7406, 0.7067, 0.7193, 0.7370,
        0.7347, 0.7229, 0.7322, 0.7430, 0.7336, 0.7417, 0.7303, 0.7388, 0.7212,
        0.7243, 0.7317, 0.7393, 0.7529, 0.7299, 0.7457, 0.7439, 0.7217, 0.7231,
        0.7265, 0.7200, 0.7362, 0.7323, 0.7137, 0.7266, 0.7193, 0.7234, 0.7575,
        0.7563, 0.7537, 0.7314, 0.7286, 0.7060, 0.7213, 0.7256, 0.7562, 0.7280,
        0.7333, 0.7595, 0.7538, 0.7358, 0.7398, 0.7282, 0.7404, 0.7291, 0.7145,
        0.7131, 0.7372, 0.7229, 0.7426, 0.7243, 0.7261, 0.7401, 0.7300, 0.7282,
        0.7333, 0.7508, 0.7180, 0.7227, 0.7297, 0.7173, 0.6956, 0.7374, 0.7365,
        0.6923, 0.7226, 0.7497, 0.7341, 0.7403, 0.7125, 0.7420, 0.7413, 0.7367,
        0.7494, 0.7498, 0.7208, 0.7244, 0.7208], grad_fn=<IndexBackward0>)
num_high 410 original num_nodes 410
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(29.9870, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.21s/it]
epoch:  0 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5349,   5352,   5352,   5371,   5396,   5459,   5459,
                          5459,   5460,   5460,   5460,   5462,   5462,   5462,
                          5471,   5471,   5471,   5492,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   6815,   6815,   6815,
                          6815,   6815,   6839,   6839,   6839,   6839,   6848,
                          6848,   6848,   6848,   6848,   6848,   6848,   6850,
                          6850,   6850,   6850,   6860,   6860,   6860,   6860,
                          6860,   6860,   6861,   6861,   6861,   6861,   6861,
                          6861,   6861,   6866,   6866,   6866,   6866,   6866,
                          6866,   6870,   6870,   6870,   6870,   6874,   6874,
                          6874,   6874,   6919,   6919,   6919,   6919,   6919,
                          6920,   6920,   6920,   6920,   6920,   6920,   6928,
                          6928,   6928,   6928,   6928,   6928,   6928,   6928,
                          6928,   6952,   6952,   6952,   6952,   6952,   6952,
                          6976,   6976,   6976,   6976,   6976,   6976,   6976,
                          6979,   7054,   7054,   7054,   7054,   7061,   7061,
                          7061,   7061,   7061,   7061,   7063,   7063,   7063,
                          7063,   7063,   7091,   7091,   7091,   7091,   7168,
                          7168,   7380,   7380,   7380,   7380,   7380,   7381,
                          7381,   7382,   7382,   7382,   7382,   7382,   7402,
                          7402,   7402,   7410,   7410,   7410,   7410,   7463,
                          7463,   7463,   7463,   7463,   7463,   7463,   7463,
                          7463,   7463,   7468,   7468,   7468,   7468,   7468,
                          7486,   7486,   7486,   7486,   7486,   7486,   7486,
                          7486,   7486,   7486,   7487,   7487,   7487,   7487,
                          7487,   7487,   7487,   7731,   7731,   7731,   7731,
                          7731,   7731,   7731,   7731,   7737,   7737,   7737,
                          7777,   7777,   7777,   7777,   7777,   7777,   7777,
                          7777,   7778,   7778,   7778,   7778,   7778,   7778,
                          7778,   7780,   7780,   7791,   7791,   7791,   7791,
                          7791,   7791,   7791,   7835,   7835,   7835,   7835,
                          7835,   7835,   7836,   7836,   7836,   7837,   7837,
                          7837,   7837,   7837,   7837,   7837,   7838,   7838,
                          7838,   7838,   7838,   7839,   7839,   7839,   7857,
                          7857,   7857,   7857,   7857,   7857,   7878,   7878,
                          7878,   7878,   7905,   7905,   7905,   7905,   7905,
                          7905,   7905,   7905,   7933,   7933,   7933,   7933,
                          7933,   7933,   7951,   7951,   7951,   7951,   7951,
                          7951,   7960,   7960,   7960,   7960,   7970,   7970,
                          7970,   7970,   7970,   7973,   7973,   7973,   7973,
                          7973,   7973,   7973,   7973],
                       [155030,  63949, 155030, 155030, 155030,  63931,  63942,
                        155030,  63942,  63949, 155030,  63942,  63949, 155030,
                         63931,  63949, 155030, 155030,  82948, 132324, 192126,
                        223785, 237645, 255365, 255389, 255398, 255400, 255410,
                        255411, 255416, 255420, 255424, 255469, 255470, 255478,
                        255502, 255526, 255529, 255604, 255611, 255613, 255641,
                        255718, 255930, 255931, 255932, 255952, 255960, 256013,
                        256018, 256036, 256037, 256281, 256287, 256327, 256328,
                        256330, 256341, 256385, 256386, 256387, 256388, 256389,
                        256407, 256428, 256455, 256483, 256501, 256510, 256520,
                        256523, 304207, 304214, 328345, 146304, 146316, 179885,
                        247080, 247104, 247115, 247135, 247241, 247319, 247645,
                        247646, 247647, 247667, 247675, 247728, 247733, 247751,
                        247752, 247996, 248002, 248056, 248101, 248102, 248103,
                        248104, 248143, 248225, 248235, 146304, 146305, 146307,
                        179885, 247080, 247113, 247125, 247126, 247184, 247185,
                        247193, 247217, 247241, 247326, 247328, 247356, 247728,
                        247751, 247752, 247996, 248042, 248043, 248056, 248100,
                        248122, 248170, 248198, 248216, 248238, 146197, 146305,
                        146307, 146316, 179885, 247125, 247126, 247139, 247193,
                        247728, 247751, 247752, 247996, 248042, 248043, 248056,
                        248100, 248122, 248170, 248238,  22470, 113641, 113652,
                        146216, 146316,  22470, 113641, 146216, 146316,  22470,
                        113652, 146216, 146241, 146305, 146307, 146316,  22470,
                        113641, 146216, 146316,  22470, 113652, 113659, 146241,
                        146305, 146307,  22470, 113652, 113659, 146241, 146304,
                        146305, 146307,  22470, 146216, 146241, 146305, 146307,
                        146316,  22470, 113641, 146216, 146316,  22470, 113659,
                        146305, 146307,  22470, 113652, 146241, 146305, 146307,
                         22470, 113652, 146241, 146305, 146307, 146316,  22470,
                        113652, 113659, 146194, 146197, 146241, 146304, 146305,
                        146307,  22470, 113652, 146241, 146304, 146305, 146307,
                         22470, 113641, 113652, 146216, 146241, 146305, 146307,
                         22470,  22470, 113641, 146216, 146316,  22470, 113652,
                        146241, 146305, 146307, 146316,  22470, 113652, 146241,
                        146305, 146307,  22470, 113652, 146305, 146307,  22470,
                        146316,  22470, 113641, 146304, 146305, 146316,  22470,
                        113641,  22470, 113641, 146304, 146316, 146337,  22470,
                        113641, 146316,  22470, 113641, 146304, 146316,  22470,
                        113641, 113652, 113659, 146216, 146304, 146305, 146307,
                        146316, 146337,  22470, 113641, 146216, 146304, 146316,
                         22470, 113641, 113652, 113659, 146197, 146216, 146304,
                        146305, 146307, 146337,  22470, 113641, 113652, 113659,
                        146216, 146304, 146337,  22470, 113641, 113652, 113659,
                        146216, 146304, 146305, 146307,  22470, 113641, 146216,
                         22470, 113652, 113659, 146197, 146304, 146305, 146307,
                        146316,  22470, 113652, 113659, 146197, 146305, 146307,
                        146316,  22470, 146197,  22470, 113641, 113652, 113659,
                        146304, 146305, 146307,  22470, 113652, 113659, 146304,
                        146305, 146307,  22470, 113641, 146216,  22470, 113641,
                        146216, 146304, 146305, 146307, 146337,  22470, 113641,
                        146216, 146304, 146316,  22470, 113641, 146216,  22470,
                        113652, 113659, 146304, 146305, 146307,  22470, 113641,
                        146216, 146304,  22470, 113652, 113659, 146197, 146304,
                        146305, 146307, 146316,  22470, 113652, 146304, 146305,
                        146307, 146316,  22470, 113652, 146197, 146216, 146304,
                        146305,  22470, 113641, 146216, 146316,  22470, 113641,
                        146216, 146304, 146316,  22470, 113652, 113659, 146197,
                        146304, 146305, 146307, 146316]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=410, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 410
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:33,  4.19s/it]
masked_hor: tensor(indices=tensor([[  5349,   5352,   5352,   5371,   5396,   5459,   5459,
                          5459,   5460,   5460,   5460,   5462,   5462,   5462,
                          5471,   5471,   5471,   5492,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   6815,   6815,   6815,
                          6815,   6815,   6839,   6839,   6839,   6839,   6848,
                          6848,   6848,   6848,   6848,   6848,   6848,   6850,
                          6850,   6850,   6850,   6860,   6860,   6860,   6860,
                          6860,   6860,   6861,   6861,   6861,   6861,   6861,
                          6861,   6861,   6866,   6866,   6866,   6866,   6866,
                          6866,   6870,   6870,   6870,   6870,   6874,   6874,
                          6874,   6874,   6919,   6919,   6919,   6919,   6919,
                          6920,   6920,   6920,   6920,   6920,   6920,   6928,
                          6928,   6928,   6928,   6928,   6928,   6928,   6928,
                          6928,   6952,   6952,   6952,   6952,   6952,   6952,
                          6976,   6976,   6976,   6976,   6976,   6976,   6976,
                          6979,   7054,   7054,   7054,   7054,   7061,   7061,
                          7061,   7061,   7061,   7061,   7063,   7063,   7063,
                          7063,   7063,   7091,   7091,   7091,   7091,   7168,
                          7168,   7380,   7380,   7380,   7380,   7380,   7381,
                          7381,   7382,   7382,   7382,   7382,   7382,   7402,
                          7402,   7402,   7410,   7410,   7410,   7410,   7463,
                          7463,   7463,   7463,   7463,   7463,   7463,   7463,
                          7463,   7463,   7468,   7468,   7468,   7468,   7468,
                          7486,   7486,   7486,   7486,   7486,   7486,   7486,
                          7486,   7486,   7486,   7487,   7487,   7487,   7487,
                          7487,   7487,   7487,   7731,   7731,   7731,   7731,
                          7731,   7731,   7731,   7731,   7737,   7737,   7737,
                          7777,   7777,   7777,   7777,   7777,   7777,   7777,
                          7777,   7778,   7778,   7778,   7778,   7778,   7778,
                          7778,   7780,   7780,   7791,   7791,   7791,   7791,
                          7791,   7791,   7791,   7835,   7835,   7835,   7835,
                          7835,   7835,   7836,   7836,   7836,   7837,   7837,
                          7837,   7837,   7837,   7837,   7837,   7838,   7838,
                          7838,   7838,   7838,   7839,   7839,   7839,   7857,
                          7857,   7857,   7857,   7857,   7857,   7878,   7878,
                          7878,   7878,   7905,   7905,   7905,   7905,   7905,
                          7905,   7905,   7905,   7933,   7933,   7933,   7933,
                          7933,   7933,   7951,   7951,   7951,   7951,   7951,
                          7951,   7960,   7960,   7960,   7960,   7970,   7970,
                          7970,   7970,   7970,   7973,   7973,   7973,   7973,
                          7973,   7973,   7973,   7973],
                       [155030,  63949, 155030, 155030, 155030,  63931,  63942,
                        155030,  63942,  63949, 155030,  63942,  63949, 155030,
                         63931,  63949, 155030, 155030,  82948, 132324, 192126,
                        223785, 237645, 255365, 255389, 255398, 255400, 255410,
                        255411, 255416, 255420, 255424, 255469, 255470, 255478,
                        255502, 255526, 255529, 255604, 255611, 255613, 255641,
                        255718, 255930, 255931, 255932, 255952, 255960, 256013,
                        256018, 256036, 256037, 256281, 256287, 256327, 256328,
                        256330, 256341, 256385, 256386, 256387, 256388, 256389,
                        256407, 256428, 256455, 256483, 256501, 256510, 256520,
                        256523, 304207, 304214, 328345, 146304, 146316, 179885,
                        247080, 247104, 247115, 247135, 247241, 247319, 247645,
                        247646, 247647, 247667, 247675, 247728, 247733, 247751,
                        247752, 247996, 248002, 248056, 248101, 248102, 248103,
                        248104, 248143, 248225, 248235, 146304, 146305, 146307,
                        179885, 247080, 247113, 247125, 247126, 247184, 247185,
                        247193, 247217, 247241, 247326, 247328, 247356, 247728,
                        247751, 247752, 247996, 248042, 248043, 248056, 248100,
                        248122, 248170, 248198, 248216, 248238, 146197, 146305,
                        146307, 146316, 179885, 247125, 247126, 247139, 247193,
                        247728, 247751, 247752, 247996, 248042, 248043, 248056,
                        248100, 248122, 248170, 248238,  22470, 113641, 113652,
                        146216, 146316,  22470, 113641, 146216, 146316,  22470,
                        113652, 146216, 146241, 146305, 146307, 146316,  22470,
                        113641, 146216, 146316,  22470, 113652, 113659, 146241,
                        146305, 146307,  22470, 113652, 113659, 146241, 146304,
                        146305, 146307,  22470, 146216, 146241, 146305, 146307,
                        146316,  22470, 113641, 146216, 146316,  22470, 113659,
                        146305, 146307,  22470, 113652, 146241, 146305, 146307,
                         22470, 113652, 146241, 146305, 146307, 146316,  22470,
                        113652, 113659, 146194, 146197, 146241, 146304, 146305,
                        146307,  22470, 113652, 146241, 146304, 146305, 146307,
                         22470, 113641, 113652, 146216, 146241, 146305, 146307,
                         22470,  22470, 113641, 146216, 146316,  22470, 113652,
                        146241, 146305, 146307, 146316,  22470, 113652, 146241,
                        146305, 146307,  22470, 113652, 146305, 146307,  22470,
                        146316,  22470, 113641, 146304, 146305, 146316,  22470,
                        113641,  22470, 113641, 146304, 146316, 146337,  22470,
                        113641, 146316,  22470, 113641, 146304, 146316,  22470,
                        113641, 113652, 113659, 146216, 146304, 146305, 146307,
                        146316, 146337,  22470, 113641, 146216, 146304, 146316,
                         22470, 113641, 113652, 113659, 146197, 146216, 146304,
                        146305, 146307, 146337,  22470, 113641, 113652, 113659,
                        146216, 146304, 146337,  22470, 113641, 113652, 113659,
                        146216, 146304, 146305, 146307,  22470, 113641, 146216,
                         22470, 113652, 113659, 146197, 146304, 146305, 146307,
                        146316,  22470, 113652, 113659, 146197, 146305, 146307,
                        146316,  22470, 146197,  22470, 113641, 113652, 113659,
                        146304, 146305, 146307,  22470, 113652, 113659, 146304,
                        146305, 146307,  22470, 113641, 146216,  22470, 113641,
                        146216, 146304, 146305, 146307, 146337,  22470, 113641,
                        146216, 146304, 146316,  22470, 113641, 146216,  22470,
                        113652, 113659, 146304, 146305, 146307,  22470, 113641,
                        146216, 146304,  22470, 113652, 113659, 146197, 146304,
                        146305, 146307, 146316,  22470, 113652, 146304, 146305,
                        146307, 146316,  22470, 113652, 146197, 146216, 146304,
                        146305,  22470, 113641, 146216, 146316,  22470, 113641,
                        146216, 146304, 146316,  22470, 113652, 113659, 146197,
                        146304, 146305, 146307, 146316]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=410, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 410
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:29,  4.17s/it]
epoch:  2 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5349,   5352,   5352,   5371,   5396,   5459,   5459,
                          5459,   5460,   5460,   5460,   5462,   5462,   5462,
                          5471,   5471,   5471,   5492,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   6815,   6815,   6815,
                          6815,   6815,   6839,   6839,   6839,   6839,   6848,
                          6848,   6848,   6848,   6848,   6848,   6848,   6850,
                          6850,   6850,   6850,   6860,   6860,   6860,   6860,
                          6860,   6860,   6861,   6861,   6861,   6861,   6861,
                          6861,   6861,   6866,   6866,   6866,   6866,   6866,
                          6866,   6870,   6870,   6870,   6870,   6874,   6874,
                          6874,   6874,   6919,   6919,   6919,   6919,   6919,
                          6920,   6920,   6920,   6920,   6920,   6920,   6928,
                          6928,   6928,   6928,   6928,   6928,   6928,   6928,
                          6928,   6952,   6952,   6952,   6952,   6952,   6952,
                          6976,   6976,   6976,   6976,   6976,   6976,   6976,
                          6979,   7054,   7054,   7054,   7054,   7061,   7061,
                          7061,   7061,   7061,   7061,   7063,   7063,   7063,
                          7063,   7063,   7091,   7091,   7091,   7091,   7168,
                          7168,   7380,   7380,   7380,   7380,   7380,   7381,
                          7381,   7382,   7382,   7382,   7382,   7382,   7402,
                          7402,   7402,   7410,   7410,   7410,   7410,   7463,
                          7463,   7463,   7463,   7463,   7463,   7463,   7463,
                          7463,   7463,   7468,   7468,   7468,   7468,   7468,
                          7486,   7486,   7486,   7486,   7486,   7486,   7486,
                          7486,   7486,   7486,   7487,   7487,   7487,   7487,
                          7487,   7487,   7487,   7731,   7731,   7731,   7731,
                          7731,   7731,   7731,   7731,   7737,   7737,   7737,
                          7777,   7777,   7777,   7777,   7777,   7777,   7777,
                          7777,   7778,   7778,   7778,   7778,   7778,   7778,
                          7778,   7780,   7780,   7791,   7791,   7791,   7791,
                          7791,   7791,   7791,   7835,   7835,   7835,   7835,
                          7835,   7835,   7836,   7836,   7836,   7837,   7837,
                          7837,   7837,   7837,   7837,   7837,   7838,   7838,
                          7838,   7838,   7838,   7839,   7839,   7839,   7857,
                          7857,   7857,   7857,   7857,   7857,   7878,   7878,
                          7878,   7878,   7905,   7905,   7905,   7905,   7905,
                          7905,   7905,   7905,   7933,   7933,   7933,   7933,
                          7933,   7933,   7951,   7951,   7951,   7951,   7951,
                          7951,   7960,   7960,   7960,   7960,   7970,   7970,
                          7970,   7970,   7970,   7973,   7973,   7973,   7973,
                          7973,   7973,   7973,   7973],
                       [155030,  63949, 155030, 155030, 155030,  63931,  63942,
                        155030,  63942,  63949, 155030,  63942,  63949, 155030,
                         63931,  63949, 155030, 155030,  82948, 132324, 192126,
                        223785, 237645, 255365, 255389, 255398, 255400, 255410,
                        255411, 255416, 255420, 255424, 255469, 255470, 255478,
                        255502, 255526, 255529, 255604, 255611, 255613, 255641,
                        255718, 255930, 255931, 255932, 255952, 255960, 256013,
                        256018, 256036, 256037, 256281, 256287, 256327, 256328,
                        256330, 256341, 256385, 256386, 256387, 256388, 256389,
                        256407, 256428, 256455, 256483, 256501, 256510, 256520,
                        256523, 304207, 304214, 328345, 146304, 146316, 179885,
                        247080, 247104, 247115, 247135, 247241, 247319, 247645,
                        247646, 247647, 247667, 247675, 247728, 247733, 247751,
                        247752, 247996, 248002, 248056, 248101, 248102, 248103,
                        248104, 248143, 248225, 248235, 146304, 146305, 146307,
                        179885, 247080, 247113, 247125, 247126, 247184, 247185,
                        247193, 247217, 247241, 247326, 247328, 247356, 247728,
                        247751, 247752, 247996, 248042, 248043, 248056, 248100,
                        248122, 248170, 248198, 248216, 248238, 146197, 146305,
                        146307, 146316, 179885, 247125, 247126, 247139, 247193,
                        247728, 247751, 247752, 247996, 248042, 248043, 248056,
                        248100, 248122, 248170, 248238,  22470, 113641, 113652,
                        146216, 146316,  22470, 113641, 146216, 146316,  22470,
                        113652, 146216, 146241, 146305, 146307, 146316,  22470,
                        113641, 146216, 146316,  22470, 113652, 113659, 146241,
                        146305, 146307,  22470, 113652, 113659, 146241, 146304,
                        146305, 146307,  22470, 146216, 146241, 146305, 146307,
                        146316,  22470, 113641, 146216, 146316,  22470, 113659,
                        146305, 146307,  22470, 113652, 146241, 146305, 146307,
                         22470, 113652, 146241, 146305, 146307, 146316,  22470,
                        113652, 113659, 146194, 146197, 146241, 146304, 146305,
                        146307,  22470, 113652, 146241, 146304, 146305, 146307,
                         22470, 113641, 113652, 146216, 146241, 146305, 146307,
                         22470,  22470, 113641, 146216, 146316,  22470, 113652,
                        146241, 146305, 146307, 146316,  22470, 113652, 146241,
                        146305, 146307,  22470, 113652, 146305, 146307,  22470,
                        146316,  22470, 113641, 146304, 146305, 146316,  22470,
                        113641,  22470, 113641, 146304, 146316, 146337,  22470,
                        113641, 146316,  22470, 113641, 146304, 146316,  22470,
                        113641, 113652, 113659, 146216, 146304, 146305, 146307,
                        146316, 146337,  22470, 113641, 146216, 146304, 146316,
                         22470, 113641, 113652, 113659, 146197, 146216, 146304,
                        146305, 146307, 146337,  22470, 113641, 113652, 113659,
                        146216, 146304, 146337,  22470, 113641, 113652, 113659,
                        146216, 146304, 146305, 146307,  22470, 113641, 146216,
                         22470, 113652, 113659, 146197, 146304, 146305, 146307,
                        146316,  22470, 113652, 113659, 146197, 146305, 146307,
                        146316,  22470, 146197,  22470, 113641, 113652, 113659,
                        146304, 146305, 146307,  22470, 113652, 113659, 146304,
                        146305, 146307,  22470, 113641, 146216,  22470, 113641,
                        146216, 146304, 146305, 146307, 146337,  22470, 113641,
                        146216, 146304, 146316,  22470, 113641, 146216,  22470,
                        113652, 113659, 146304, 146305, 146307,  22470, 113641,
                        146216, 146304,  22470, 113652, 113659, 146197, 146304,
                        146305, 146307, 146316,  22470, 113652, 146304, 146305,
                        146307, 146316,  22470, 113652, 146197, 146216, 146304,
                        146305,  22470, 113641, 146216, 146316,  22470, 113641,
                        146216, 146304, 146316,  22470, 113652, 113659, 146197,
                        146304, 146305, 146307, 146316]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=410, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 410
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.15s/it]
masked_hor: tensor(indices=tensor([[  5349,   5352,   5352,   5371,   5396,   5459,   5459,
                          5459,   5460,   5460,   5460,   5462,   5462,   5462,
                          5471,   5471,   5471,   5492,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   6815,   6815,   6815,
                          6815,   6815,   6839,   6839,   6839,   6839,   6848,
                          6848,   6848,   6848,   6848,   6848,   6848,   6850,
                          6850,   6850,   6850,   6860,   6860,   6860,   6860,
                          6860,   6860,   6861,   6861,   6861,   6861,   6861,
                          6861,   6861,   6866,   6866,   6866,   6866,   6866,
                          6866,   6870,   6870,   6870,   6870,   6874,   6874,
                          6874,   6874,   6919,   6919,   6919,   6919,   6919,
                          6920,   6920,   6920,   6920,   6920,   6920,   6928,
                          6928,   6928,   6928,   6928,   6928,   6928,   6928,
                          6928,   6952,   6952,   6952,   6952,   6952,   6952,
                          6976,   6976,   6976,   6976,   6976,   6976,   6976,
                          6979,   7054,   7054,   7054,   7054,   7061,   7061,
                          7061,   7061,   7061,   7061,   7063,   7063,   7063,
                          7063,   7063,   7091,   7091,   7091,   7091,   7168,
                          7168,   7380,   7380,   7380,   7380,   7380,   7381,
                          7381,   7382,   7382,   7382,   7382,   7382,   7402,
                          7402,   7402,   7410,   7410,   7410,   7410,   7463,
                          7463,   7463,   7463,   7463,   7463,   7463,   7463,
                          7463,   7463,   7468,   7468,   7468,   7468,   7468,
                          7486,   7486,   7486,   7486,   7486,   7486,   7486,
                          7486,   7486,   7486,   7487,   7487,   7487,   7487,
                          7487,   7487,   7487,   7731,   7731,   7731,   7731,
                          7731,   7731,   7731,   7731,   7737,   7737,   7737,
                          7777,   7777,   7777,   7777,   7777,   7777,   7777,
                          7777,   7778,   7778,   7778,   7778,   7778,   7778,
                          7778,   7780,   7780,   7791,   7791,   7791,   7791,
                          7791,   7791,   7791,   7835,   7835,   7835,   7835,
                          7835,   7835,   7836,   7836,   7836,   7837,   7837,
                          7837,   7837,   7837,   7837,   7837,   7838,   7838,
                          7838,   7838,   7838,   7839,   7839,   7839,   7857,
                          7857,   7857,   7857,   7857,   7857,   7878,   7878,
                          7878,   7878,   7905,   7905,   7905,   7905,   7905,
                          7905,   7905,   7905,   7933,   7933,   7933,   7933,
                          7933,   7933,   7951,   7951,   7951,   7951,   7951,
                          7951,   7960,   7960,   7960,   7960,   7970,   7970,
                          7970,   7970,   7970,   7973,   7973,   7973,   7973,
                          7973,   7973,   7973,   7973],
                       [155030,  63949, 155030, 155030, 155030,  63931,  63942,
                        155030,  63942,  63949, 155030,  63942,  63949, 155030,
                         63931,  63949, 155030, 155030,  82948, 132324, 192126,
                        223785, 237645, 255365, 255389, 255398, 255400, 255410,
                        255411, 255416, 255420, 255424, 255469, 255470, 255478,
                        255502, 255526, 255529, 255604, 255611, 255613, 255641,
                        255718, 255930, 255931, 255932, 255952, 255960, 256013,
                        256018, 256036, 256037, 256281, 256287, 256327, 256328,
                        256330, 256341, 256385, 256386, 256387, 256388, 256389,
                        256407, 256428, 256455, 256483, 256501, 256510, 256520,
                        256523, 304207, 304214, 328345, 146304, 146316, 179885,
                        247080, 247104, 247115, 247135, 247241, 247319, 247645,
                        247646, 247647, 247667, 247675, 247728, 247733, 247751,
                        247752, 247996, 248002, 248056, 248101, 248102, 248103,
                        248104, 248143, 248225, 248235, 146304, 146305, 146307,
                        179885, 247080, 247113, 247125, 247126, 247184, 247185,
                        247193, 247217, 247241, 247326, 247328, 247356, 247728,
                        247751, 247752, 247996, 248042, 248043, 248056, 248100,
                        248122, 248170, 248198, 248216, 248238, 146197, 146305,
                        146307, 146316, 179885, 247125, 247126, 247139, 247193,
                        247728, 247751, 247752, 247996, 248042, 248043, 248056,
                        248100, 248122, 248170, 248238,  22470, 113641, 113652,
                        146216, 146316,  22470, 113641, 146216, 146316,  22470,
                        113652, 146216, 146241, 146305, 146307, 146316,  22470,
                        113641, 146216, 146316,  22470, 113652, 113659, 146241,
                        146305, 146307,  22470, 113652, 113659, 146241, 146304,
                        146305, 146307,  22470, 146216, 146241, 146305, 146307,
                        146316,  22470, 113641, 146216, 146316,  22470, 113659,
                        146305, 146307,  22470, 113652, 146241, 146305, 146307,
                         22470, 113652, 146241, 146305, 146307, 146316,  22470,
                        113652, 113659, 146194, 146197, 146241, 146304, 146305,
                        146307,  22470, 113652, 146241, 146304, 146305, 146307,
                         22470, 113641, 113652, 146216, 146241, 146305, 146307,
                         22470,  22470, 113641, 146216, 146316,  22470, 113652,
                        146241, 146305, 146307, 146316,  22470, 113652, 146241,
                        146305, 146307,  22470, 113652, 146305, 146307,  22470,
                        146316,  22470, 113641, 146304, 146305, 146316,  22470,
                        113641,  22470, 113641, 146304, 146316, 146337,  22470,
                        113641, 146316,  22470, 113641, 146304, 146316,  22470,
                        113641, 113652, 113659, 146216, 146304, 146305, 146307,
                        146316, 146337,  22470, 113641, 146216, 146304, 146316,
                         22470, 113641, 113652, 113659, 146197, 146216, 146304,
                        146305, 146307, 146337,  22470, 113641, 113652, 113659,
                        146216, 146304, 146337,  22470, 113641, 113652, 113659,
                        146216, 146304, 146305, 146307,  22470, 113641, 146216,
                         22470, 113652, 113659, 146197, 146304, 146305, 146307,
                        146316,  22470, 113652, 113659, 146197, 146305, 146307,
                        146316,  22470, 146197,  22470, 113641, 113652, 113659,
                        146304, 146305, 146307,  22470, 113652, 113659, 146304,
                        146305, 146307,  22470, 113641, 146216,  22470, 113641,
                        146216, 146304, 146305, 146307, 146337,  22470, 113641,
                        146216, 146304, 146316,  22470, 113641, 146216,  22470,
                        113652, 113659, 146304, 146305, 146307,  22470, 113641,
                        146216, 146304,  22470, 113652, 113659, 146197, 146304,
                        146305, 146307, 146316,  22470, 113652, 146304, 146305,
                        146307, 146316,  22470, 113652, 146197, 146216, 146304,
                        146305,  22470, 113641, 146216, 146316,  22470, 113641,
                        146216, 146304, 146316,  22470, 113652, 113659, 146197,
                        146304, 146305, 146307, 146316]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=410, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 410
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.15s/it]
epoch:  4 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5349,   5352,   5352,   5371,   5396,   5459,   5459,
                          5459,   5460,   5460,   5460,   5462,   5462,   5462,
                          5471,   5471,   5471,   5492,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   6815,   6815,   6815,
                          6815,   6815,   6839,   6839,   6839,   6839,   6848,
                          6848,   6848,   6848,   6848,   6848,   6848,   6850,
                          6850,   6850,   6850,   6860,   6860,   6860,   6860,
                          6860,   6860,   6861,   6861,   6861,   6861,   6861,
                          6861,   6861,   6866,   6866,   6866,   6866,   6866,
                          6866,   6870,   6870,   6870,   6870,   6874,   6874,
                          6874,   6874,   6919,   6919,   6919,   6919,   6919,
                          6920,   6920,   6920,   6920,   6920,   6920,   6928,
                          6928,   6928,   6928,   6928,   6928,   6928,   6928,
                          6928,   6952,   6952,   6952,   6952,   6952,   6952,
                          6976,   6976,   6976,   6976,   6976,   6976,   6976,
                          6979,   7054,   7054,   7054,   7054,   7061,   7061,
                          7061,   7061,   7061,   7061,   7063,   7063,   7063,
                          7063,   7063,   7091,   7091,   7091,   7091,   7168,
                          7168,   7380,   7380,   7380,   7380,   7380,   7381,
                          7381,   7382,   7382,   7382,   7382,   7382,   7402,
                          7402,   7402,   7410,   7410,   7410,   7410,   7463,
                          7463,   7463,   7463,   7463,   7463,   7463,   7463,
                          7463,   7463,   7468,   7468,   7468,   7468,   7468,
                          7486,   7486,   7486,   7486,   7486,   7486,   7486,
                          7486,   7486,   7486,   7487,   7487,   7487,   7487,
                          7487,   7487,   7487,   7731,   7731,   7731,   7731,
                          7731,   7731,   7731,   7731,   7737,   7737,   7737,
                          7777,   7777,   7777,   7777,   7777,   7777,   7777,
                          7777,   7778,   7778,   7778,   7778,   7778,   7778,
                          7778,   7780,   7780,   7791,   7791,   7791,   7791,
                          7791,   7791,   7791,   7835,   7835,   7835,   7835,
                          7835,   7835,   7836,   7836,   7836,   7837,   7837,
                          7837,   7837,   7837,   7837,   7837,   7838,   7838,
                          7838,   7838,   7838,   7839,   7839,   7839,   7857,
                          7857,   7857,   7857,   7857,   7857,   7878,   7878,
                          7878,   7878,   7905,   7905,   7905,   7905,   7905,
                          7905,   7905,   7905,   7933,   7933,   7933,   7933,
                          7933,   7933,   7951,   7951,   7951,   7951,   7951,
                          7951,   7960,   7960,   7960,   7960,   7970,   7970,
                          7970,   7970,   7970,   7973,   7973,   7973,   7973,
                          7973,   7973,   7973,   7973],
                       [155030,  63949, 155030, 155030, 155030,  63931,  63942,
                        155030,  63942,  63949, 155030,  63942,  63949, 155030,
                         63931,  63949, 155030, 155030,  82948, 132324, 192126,
                        223785, 237645, 255365, 255389, 255398, 255400, 255410,
                        255411, 255416, 255420, 255424, 255469, 255470, 255478,
                        255502, 255526, 255529, 255604, 255611, 255613, 255641,
                        255718, 255930, 255931, 255932, 255952, 255960, 256013,
                        256018, 256036, 256037, 256281, 256287, 256327, 256328,
                        256330, 256341, 256385, 256386, 256387, 256388, 256389,
                        256407, 256428, 256455, 256483, 256501, 256510, 256520,
                        256523, 304207, 304214, 328345, 146304, 146316, 179885,
                        247080, 247104, 247115, 247135, 247241, 247319, 247645,
                        247646, 247647, 247667, 247675, 247728, 247733, 247751,
                        247752, 247996, 248002, 248056, 248101, 248102, 248103,
                        248104, 248143, 248225, 248235, 146304, 146305, 146307,
                        179885, 247080, 247113, 247125, 247126, 247184, 247185,
                        247193, 247217, 247241, 247326, 247328, 247356, 247728,
                        247751, 247752, 247996, 248042, 248043, 248056, 248100,
                        248122, 248170, 248198, 248216, 248238, 146197, 146305,
                        146307, 146316, 179885, 247125, 247126, 247139, 247193,
                        247728, 247751, 247752, 247996, 248042, 248043, 248056,
                        248100, 248122, 248170, 248238,  22470, 113641, 113652,
                        146216, 146316,  22470, 113641, 146216, 146316,  22470,
                        113652, 146216, 146241, 146305, 146307, 146316,  22470,
                        113641, 146216, 146316,  22470, 113652, 113659, 146241,
                        146305, 146307,  22470, 113652, 113659, 146241, 146304,
                        146305, 146307,  22470, 146216, 146241, 146305, 146307,
                        146316,  22470, 113641, 146216, 146316,  22470, 113659,
                        146305, 146307,  22470, 113652, 146241, 146305, 146307,
                         22470, 113652, 146241, 146305, 146307, 146316,  22470,
                        113652, 113659, 146194, 146197, 146241, 146304, 146305,
                        146307,  22470, 113652, 146241, 146304, 146305, 146307,
                         22470, 113641, 113652, 146216, 146241, 146305, 146307,
                         22470,  22470, 113641, 146216, 146316,  22470, 113652,
                        146241, 146305, 146307, 146316,  22470, 113652, 146241,
                        146305, 146307,  22470, 113652, 146305, 146307,  22470,
                        146316,  22470, 113641, 146304, 146305, 146316,  22470,
                        113641,  22470, 113641, 146304, 146316, 146337,  22470,
                        113641, 146316,  22470, 113641, 146304, 146316,  22470,
                        113641, 113652, 113659, 146216, 146304, 146305, 146307,
                        146316, 146337,  22470, 113641, 146216, 146304, 146316,
                         22470, 113641, 113652, 113659, 146197, 146216, 146304,
                        146305, 146307, 146337,  22470, 113641, 113652, 113659,
                        146216, 146304, 146337,  22470, 113641, 113652, 113659,
                        146216, 146304, 146305, 146307,  22470, 113641, 146216,
                         22470, 113652, 113659, 146197, 146304, 146305, 146307,
                        146316,  22470, 113652, 113659, 146197, 146305, 146307,
                        146316,  22470, 146197,  22470, 113641, 113652, 113659,
                        146304, 146305, 146307,  22470, 113652, 113659, 146304,
                        146305, 146307,  22470, 113641, 146216,  22470, 113641,
                        146216, 146304, 146305, 146307, 146337,  22470, 113641,
                        146216, 146304, 146316,  22470, 113641, 146216,  22470,
                        113652, 113659, 146304, 146305, 146307,  22470, 113641,
                        146216, 146304,  22470, 113652, 113659, 146197, 146304,
                        146305, 146307, 146316,  22470, 113652, 146304, 146305,
                        146307, 146316,  22470, 113652, 146197, 146216, 146304,
                        146305,  22470, 113641, 146216, 146316,  22470, 113641,
                        146216, 146304, 146316,  22470, 113652, 113659, 146197,
                        146304, 146305, 146307, 146316]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=410, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 410
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.15s/it]
masked_hor: tensor(indices=tensor([[  5349,   5352,   5352,   5371,   5396,   5459,   5459,
                          5459,   5460,   5460,   5460,   5462,   5462,   5462,
                          5471,   5471,   5471,   5492,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   6815,   6815,   6815,
                          6815,   6815,   6839,   6839,   6839,   6839,   6848,
                          6848,   6848,   6848,   6848,   6848,   6848,   6850,
                          6850,   6850,   6850,   6860,   6860,   6860,   6860,
                          6860,   6860,   6861,   6861,   6861,   6861,   6861,
                          6861,   6861,   6866,   6866,   6866,   6866,   6866,
                          6866,   6870,   6870,   6870,   6870,   6874,   6874,
                          6874,   6874,   6919,   6919,   6919,   6919,   6919,
                          6920,   6920,   6920,   6920,   6920,   6920,   6928,
                          6928,   6928,   6928,   6928,   6928,   6928,   6928,
                          6928,   6952,   6952,   6952,   6952,   6952,   6952,
                          6976,   6976,   6976,   6976,   6976,   6976,   6976,
                          6979,   7054,   7054,   7054,   7054,   7061,   7061,
                          7061,   7061,   7061,   7061,   7063,   7063,   7063,
                          7063,   7063,   7091,   7091,   7091,   7091,   7168,
                          7168,   7380,   7380,   7380,   7380,   7380,   7381,
                          7381,   7382,   7382,   7382,   7382,   7382,   7402,
                          7402,   7402,   7410,   7410,   7410,   7410,   7463,
                          7463,   7463,   7463,   7463,   7463,   7463,   7463,
                          7463,   7463,   7468,   7468,   7468,   7468,   7468,
                          7486,   7486,   7486,   7486,   7486,   7486,   7486,
                          7486,   7486,   7486,   7487,   7487,   7487,   7487,
                          7487,   7487,   7487,   7731,   7731,   7731,   7731,
                          7731,   7731,   7731,   7731,   7737,   7737,   7737,
                          7777,   7777,   7777,   7777,   7777,   7777,   7777,
                          7777,   7778,   7778,   7778,   7778,   7778,   7778,
                          7778,   7780,   7780,   7791,   7791,   7791,   7791,
                          7791,   7791,   7791,   7835,   7835,   7835,   7835,
                          7835,   7835,   7836,   7836,   7836,   7837,   7837,
                          7837,   7837,   7837,   7837,   7837,   7838,   7838,
                          7838,   7838,   7838,   7839,   7839,   7839,   7857,
                          7857,   7857,   7857,   7857,   7857,   7878,   7878,
                          7878,   7878,   7905,   7905,   7905,   7905,   7905,
                          7905,   7905,   7905,   7933,   7933,   7933,   7933,
                          7933,   7933,   7951,   7951,   7951,   7951,   7951,
                          7951,   7960,   7960,   7960,   7960,   7970,   7970,
                          7970,   7970,   7970,   7973,   7973,   7973,   7973,
                          7973,   7973,   7973,   7973],
                       [155030,  63949, 155030, 155030, 155030,  63931,  63942,
                        155030,  63942,  63949, 155030,  63942,  63949, 155030,
                         63931,  63949, 155030, 155030,  82948, 132324, 192126,
                        223785, 237645, 255365, 255389, 255398, 255400, 255410,
                        255411, 255416, 255420, 255424, 255469, 255470, 255478,
                        255502, 255526, 255529, 255604, 255611, 255613, 255641,
                        255718, 255930, 255931, 255932, 255952, 255960, 256013,
                        256018, 256036, 256037, 256281, 256287, 256327, 256328,
                        256330, 256341, 256385, 256386, 256387, 256388, 256389,
                        256407, 256428, 256455, 256483, 256501, 256510, 256520,
                        256523, 304207, 304214, 328345, 146304, 146316, 179885,
                        247080, 247104, 247115, 247135, 247241, 247319, 247645,
                        247646, 247647, 247667, 247675, 247728, 247733, 247751,
                        247752, 247996, 248002, 248056, 248101, 248102, 248103,
                        248104, 248143, 248225, 248235, 146304, 146305, 146307,
                        179885, 247080, 247113, 247125, 247126, 247184, 247185,
                        247193, 247217, 247241, 247326, 247328, 247356, 247728,
                        247751, 247752, 247996, 248042, 248043, 248056, 248100,
                        248122, 248170, 248198, 248216, 248238, 146197, 146305,
                        146307, 146316, 179885, 247125, 247126, 247139, 247193,
                        247728, 247751, 247752, 247996, 248042, 248043, 248056,
                        248100, 248122, 248170, 248238,  22470, 113641, 113652,
                        146216, 146316,  22470, 113641, 146216, 146316,  22470,
                        113652, 146216, 146241, 146305, 146307, 146316,  22470,
                        113641, 146216, 146316,  22470, 113652, 113659, 146241,
                        146305, 146307,  22470, 113652, 113659, 146241, 146304,
                        146305, 146307,  22470, 146216, 146241, 146305, 146307,
                        146316,  22470, 113641, 146216, 146316,  22470, 113659,
                        146305, 146307,  22470, 113652, 146241, 146305, 146307,
                         22470, 113652, 146241, 146305, 146307, 146316,  22470,
                        113652, 113659, 146194, 146197, 146241, 146304, 146305,
                        146307,  22470, 113652, 146241, 146304, 146305, 146307,
                         22470, 113641, 113652, 146216, 146241, 146305, 146307,
                         22470,  22470, 113641, 146216, 146316,  22470, 113652,
                        146241, 146305, 146307, 146316,  22470, 113652, 146241,
                        146305, 146307,  22470, 113652, 146305, 146307,  22470,
                        146316,  22470, 113641, 146304, 146305, 146316,  22470,
                        113641,  22470, 113641, 146304, 146316, 146337,  22470,
                        113641, 146316,  22470, 113641, 146304, 146316,  22470,
                        113641, 113652, 113659, 146216, 146304, 146305, 146307,
                        146316, 146337,  22470, 113641, 146216, 146304, 146316,
                         22470, 113641, 113652, 113659, 146197, 146216, 146304,
                        146305, 146307, 146337,  22470, 113641, 113652, 113659,
                        146216, 146304, 146337,  22470, 113641, 113652, 113659,
                        146216, 146304, 146305, 146307,  22470, 113641, 146216,
                         22470, 113652, 113659, 146197, 146304, 146305, 146307,
                        146316,  22470, 113652, 113659, 146197, 146305, 146307,
                        146316,  22470, 146197,  22470, 113641, 113652, 113659,
                        146304, 146305, 146307,  22470, 113652, 113659, 146304,
                        146305, 146307,  22470, 113641, 146216,  22470, 113641,
                        146216, 146304, 146305, 146307, 146337,  22470, 113641,
                        146216, 146304, 146316,  22470, 113641, 146216,  22470,
                        113652, 113659, 146304, 146305, 146307,  22470, 113641,
                        146216, 146304,  22470, 113652, 113659, 146197, 146304,
                        146305, 146307, 146316,  22470, 113652, 146304, 146305,
                        146307, 146316,  22470, 113652, 146197, 146216, 146304,
                        146305,  22470, 113641, 146216, 146316,  22470, 113641,
                        146216, 146304, 146316,  22470, 113652, 113659, 146197,
                        146304, 146305, 146307, 146316]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=410, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 410
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:29<00:12,  4.15s/it]
epoch:  6 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5349,   5352,   5352,   5371,   5396,   5459,   5459,
                          5459,   5460,   5460,   5460,   5462,   5462,   5462,
                          5471,   5471,   5471,   5492,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   6815,   6815,   6815,
                          6815,   6815,   6839,   6839,   6839,   6839,   6848,
                          6848,   6848,   6848,   6848,   6848,   6848,   6850,
                          6850,   6850,   6850,   6860,   6860,   6860,   6860,
                          6860,   6860,   6861,   6861,   6861,   6861,   6861,
                          6861,   6861,   6866,   6866,   6866,   6866,   6866,
                          6866,   6870,   6870,   6870,   6870,   6874,   6874,
                          6874,   6874,   6919,   6919,   6919,   6919,   6919,
                          6920,   6920,   6920,   6920,   6920,   6920,   6928,
                          6928,   6928,   6928,   6928,   6928,   6928,   6928,
                          6928,   6952,   6952,   6952,   6952,   6952,   6952,
                          6976,   6976,   6976,   6976,   6976,   6976,   6976,
                          6979,   7054,   7054,   7054,   7054,   7061,   7061,
                          7061,   7061,   7061,   7061,   7063,   7063,   7063,
                          7063,   7063,   7091,   7091,   7091,   7091,   7168,
                          7168,   7380,   7380,   7380,   7380,   7380,   7381,
                          7381,   7382,   7382,   7382,   7382,   7382,   7402,
                          7402,   7402,   7410,   7410,   7410,   7410,   7463,
                          7463,   7463,   7463,   7463,   7463,   7463,   7463,
                          7463,   7463,   7468,   7468,   7468,   7468,   7468,
                          7486,   7486,   7486,   7486,   7486,   7486,   7486,
                          7486,   7486,   7486,   7487,   7487,   7487,   7487,
                          7487,   7487,   7487,   7731,   7731,   7731,   7731,
                          7731,   7731,   7731,   7731,   7737,   7737,   7737,
                          7777,   7777,   7777,   7777,   7777,   7777,   7777,
                          7777,   7778,   7778,   7778,   7778,   7778,   7778,
                          7778,   7780,   7780,   7791,   7791,   7791,   7791,
                          7791,   7791,   7791,   7835,   7835,   7835,   7835,
                          7835,   7835,   7836,   7836,   7836,   7837,   7837,
                          7837,   7837,   7837,   7837,   7837,   7838,   7838,
                          7838,   7838,   7838,   7839,   7839,   7839,   7857,
                          7857,   7857,   7857,   7857,   7857,   7878,   7878,
                          7878,   7878,   7905,   7905,   7905,   7905,   7905,
                          7905,   7905,   7905,   7933,   7933,   7933,   7933,
                          7933,   7933,   7951,   7951,   7951,   7951,   7951,
                          7951,   7960,   7960,   7960,   7960,   7970,   7970,
                          7970,   7970,   7970,   7973,   7973,   7973,   7973,
                          7973,   7973,   7973,   7973],
                       [155030,  63949, 155030, 155030, 155030,  63931,  63942,
                        155030,  63942,  63949, 155030,  63942,  63949, 155030,
                         63931,  63949, 155030, 155030,  82948, 132324, 192126,
                        223785, 237645, 255365, 255389, 255398, 255400, 255410,
                        255411, 255416, 255420, 255424, 255469, 255470, 255478,
                        255502, 255526, 255529, 255604, 255611, 255613, 255641,
                        255718, 255930, 255931, 255932, 255952, 255960, 256013,
                        256018, 256036, 256037, 256281, 256287, 256327, 256328,
                        256330, 256341, 256385, 256386, 256387, 256388, 256389,
                        256407, 256428, 256455, 256483, 256501, 256510, 256520,
                        256523, 304207, 304214, 328345, 146304, 146316, 179885,
                        247080, 247104, 247115, 247135, 247241, 247319, 247645,
                        247646, 247647, 247667, 247675, 247728, 247733, 247751,
                        247752, 247996, 248002, 248056, 248101, 248102, 248103,
                        248104, 248143, 248225, 248235, 146304, 146305, 146307,
                        179885, 247080, 247113, 247125, 247126, 247184, 247185,
                        247193, 247217, 247241, 247326, 247328, 247356, 247728,
                        247751, 247752, 247996, 248042, 248043, 248056, 248100,
                        248122, 248170, 248198, 248216, 248238, 146197, 146305,
                        146307, 146316, 179885, 247125, 247126, 247139, 247193,
                        247728, 247751, 247752, 247996, 248042, 248043, 248056,
                        248100, 248122, 248170, 248238,  22470, 113641, 113652,
                        146216, 146316,  22470, 113641, 146216, 146316,  22470,
                        113652, 146216, 146241, 146305, 146307, 146316,  22470,
                        113641, 146216, 146316,  22470, 113652, 113659, 146241,
                        146305, 146307,  22470, 113652, 113659, 146241, 146304,
                        146305, 146307,  22470, 146216, 146241, 146305, 146307,
                        146316,  22470, 113641, 146216, 146316,  22470, 113659,
                        146305, 146307,  22470, 113652, 146241, 146305, 146307,
                         22470, 113652, 146241, 146305, 146307, 146316,  22470,
                        113652, 113659, 146194, 146197, 146241, 146304, 146305,
                        146307,  22470, 113652, 146241, 146304, 146305, 146307,
                         22470, 113641, 113652, 146216, 146241, 146305, 146307,
                         22470,  22470, 113641, 146216, 146316,  22470, 113652,
                        146241, 146305, 146307, 146316,  22470, 113652, 146241,
                        146305, 146307,  22470, 113652, 146305, 146307,  22470,
                        146316,  22470, 113641, 146304, 146305, 146316,  22470,
                        113641,  22470, 113641, 146304, 146316, 146337,  22470,
                        113641, 146316,  22470, 113641, 146304, 146316,  22470,
                        113641, 113652, 113659, 146216, 146304, 146305, 146307,
                        146316, 146337,  22470, 113641, 146216, 146304, 146316,
                         22470, 113641, 113652, 113659, 146197, 146216, 146304,
                        146305, 146307, 146337,  22470, 113641, 113652, 113659,
                        146216, 146304, 146337,  22470, 113641, 113652, 113659,
                        146216, 146304, 146305, 146307,  22470, 113641, 146216,
                         22470, 113652, 113659, 146197, 146304, 146305, 146307,
                        146316,  22470, 113652, 113659, 146197, 146305, 146307,
                        146316,  22470, 146197,  22470, 113641, 113652, 113659,
                        146304, 146305, 146307,  22470, 113652, 113659, 146304,
                        146305, 146307,  22470, 113641, 146216,  22470, 113641,
                        146216, 146304, 146305, 146307, 146337,  22470, 113641,
                        146216, 146304, 146316,  22470, 113641, 146216,  22470,
                        113652, 113659, 146304, 146305, 146307,  22470, 113641,
                        146216, 146304,  22470, 113652, 113659, 146197, 146304,
                        146305, 146307, 146316,  22470, 113652, 146304, 146305,
                        146307, 146316,  22470, 113652, 146197, 146216, 146304,
                        146305,  22470, 113641, 146216, 146316,  22470, 113641,
                        146216, 146304, 146316,  22470, 113652, 113659, 146197,
                        146304, 146305, 146307, 146316]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=410, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 410
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:33<00:08,  4.15s/it]
masked_hor: tensor(indices=tensor([[  5349,   5352,   5352,   5371,   5396,   5459,   5459,
                          5459,   5460,   5460,   5460,   5462,   5462,   5462,
                          5471,   5471,   5471,   5492,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   6815,   6815,   6815,
                          6815,   6815,   6839,   6839,   6839,   6839,   6848,
                          6848,   6848,   6848,   6848,   6848,   6848,   6850,
                          6850,   6850,   6850,   6860,   6860,   6860,   6860,
                          6860,   6860,   6861,   6861,   6861,   6861,   6861,
                          6861,   6861,   6866,   6866,   6866,   6866,   6866,
                          6866,   6870,   6870,   6870,   6870,   6874,   6874,
                          6874,   6874,   6919,   6919,   6919,   6919,   6919,
                          6920,   6920,   6920,   6920,   6920,   6920,   6928,
                          6928,   6928,   6928,   6928,   6928,   6928,   6928,
                          6928,   6952,   6952,   6952,   6952,   6952,   6952,
                          6976,   6976,   6976,   6976,   6976,   6976,   6976,
                          6979,   7054,   7054,   7054,   7054,   7061,   7061,
                          7061,   7061,   7061,   7061,   7063,   7063,   7063,
                          7063,   7063,   7091,   7091,   7091,   7091,   7168,
                          7168,   7380,   7380,   7380,   7380,   7380,   7381,
                          7381,   7382,   7382,   7382,   7382,   7382,   7402,
                          7402,   7402,   7410,   7410,   7410,   7410,   7463,
                          7463,   7463,   7463,   7463,   7463,   7463,   7463,
                          7463,   7463,   7468,   7468,   7468,   7468,   7468,
                          7486,   7486,   7486,   7486,   7486,   7486,   7486,
                          7486,   7486,   7486,   7487,   7487,   7487,   7487,
                          7487,   7487,   7487,   7731,   7731,   7731,   7731,
                          7731,   7731,   7731,   7731,   7737,   7737,   7737,
                          7777,   7777,   7777,   7777,   7777,   7777,   7777,
                          7777,   7778,   7778,   7778,   7778,   7778,   7778,
                          7778,   7780,   7780,   7791,   7791,   7791,   7791,
                          7791,   7791,   7791,   7835,   7835,   7835,   7835,
                          7835,   7835,   7836,   7836,   7836,   7837,   7837,
                          7837,   7837,   7837,   7837,   7837,   7838,   7838,
                          7838,   7838,   7838,   7839,   7839,   7839,   7857,
                          7857,   7857,   7857,   7857,   7857,   7878,   7878,
                          7878,   7878,   7905,   7905,   7905,   7905,   7905,
                          7905,   7905,   7905,   7933,   7933,   7933,   7933,
                          7933,   7933,   7951,   7951,   7951,   7951,   7951,
                          7951,   7960,   7960,   7960,   7960,   7970,   7970,
                          7970,   7970,   7970,   7973,   7973,   7973,   7973,
                          7973,   7973,   7973,   7973],
                       [155030,  63949, 155030, 155030, 155030,  63931,  63942,
                        155030,  63942,  63949, 155030,  63942,  63949, 155030,
                         63931,  63949, 155030, 155030,  82948, 132324, 192126,
                        223785, 237645, 255365, 255389, 255398, 255400, 255410,
                        255411, 255416, 255420, 255424, 255469, 255470, 255478,
                        255502, 255526, 255529, 255604, 255611, 255613, 255641,
                        255718, 255930, 255931, 255932, 255952, 255960, 256013,
                        256018, 256036, 256037, 256281, 256287, 256327, 256328,
                        256330, 256341, 256385, 256386, 256387, 256388, 256389,
                        256407, 256428, 256455, 256483, 256501, 256510, 256520,
                        256523, 304207, 304214, 328345, 146304, 146316, 179885,
                        247080, 247104, 247115, 247135, 247241, 247319, 247645,
                        247646, 247647, 247667, 247675, 247728, 247733, 247751,
                        247752, 247996, 248002, 248056, 248101, 248102, 248103,
                        248104, 248143, 248225, 248235, 146304, 146305, 146307,
                        179885, 247080, 247113, 247125, 247126, 247184, 247185,
                        247193, 247217, 247241, 247326, 247328, 247356, 247728,
                        247751, 247752, 247996, 248042, 248043, 248056, 248100,
                        248122, 248170, 248198, 248216, 248238, 146197, 146305,
                        146307, 146316, 179885, 247125, 247126, 247139, 247193,
                        247728, 247751, 247752, 247996, 248042, 248043, 248056,
                        248100, 248122, 248170, 248238,  22470, 113641, 113652,
                        146216, 146316,  22470, 113641, 146216, 146316,  22470,
                        113652, 146216, 146241, 146305, 146307, 146316,  22470,
                        113641, 146216, 146316,  22470, 113652, 113659, 146241,
                        146305, 146307,  22470, 113652, 113659, 146241, 146304,
                        146305, 146307,  22470, 146216, 146241, 146305, 146307,
                        146316,  22470, 113641, 146216, 146316,  22470, 113659,
                        146305, 146307,  22470, 113652, 146241, 146305, 146307,
                         22470, 113652, 146241, 146305, 146307, 146316,  22470,
                        113652, 113659, 146194, 146197, 146241, 146304, 146305,
                        146307,  22470, 113652, 146241, 146304, 146305, 146307,
                         22470, 113641, 113652, 146216, 146241, 146305, 146307,
                         22470,  22470, 113641, 146216, 146316,  22470, 113652,
                        146241, 146305, 146307, 146316,  22470, 113652, 146241,
                        146305, 146307,  22470, 113652, 146305, 146307,  22470,
                        146316,  22470, 113641, 146304, 146305, 146316,  22470,
                        113641,  22470, 113641, 146304, 146316, 146337,  22470,
                        113641, 146316,  22470, 113641, 146304, 146316,  22470,
                        113641, 113652, 113659, 146216, 146304, 146305, 146307,
                        146316, 146337,  22470, 113641, 146216, 146304, 146316,
                         22470, 113641, 113652, 113659, 146197, 146216, 146304,
                        146305, 146307, 146337,  22470, 113641, 113652, 113659,
                        146216, 146304, 146337,  22470, 113641, 113652, 113659,
                        146216, 146304, 146305, 146307,  22470, 113641, 146216,
                         22470, 113652, 113659, 146197, 146304, 146305, 146307,
                        146316,  22470, 113652, 113659, 146197, 146305, 146307,
                        146316,  22470, 146197,  22470, 113641, 113652, 113659,
                        146304, 146305, 146307,  22470, 113652, 113659, 146304,
                        146305, 146307,  22470, 113641, 146216,  22470, 113641,
                        146216, 146304, 146305, 146307, 146337,  22470, 113641,
                        146216, 146304, 146316,  22470, 113641, 146216,  22470,
                        113652, 113659, 146304, 146305, 146307,  22470, 113641,
                        146216, 146304,  22470, 113652, 113659, 146197, 146304,
                        146305, 146307, 146316,  22470, 113652, 146304, 146305,
                        146307, 146316,  22470, 113652, 146197, 146216, 146304,
                        146305,  22470, 113641, 146216, 146316,  22470, 113641,
                        146216, 146304, 146316,  22470, 113652, 113659, 146197,
                        146304, 146305, 146307, 146316]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=410, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 410
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.14s/it]
epoch:  8 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5349,   5352,   5352,   5371,   5396,   5459,   5459,
                          5459,   5460,   5460,   5460,   5462,   5462,   5462,
                          5471,   5471,   5471,   5492,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5900,   5900,   5900,
                          5900,   5900,   5900,   5900,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5936,   5936,   5936,
                          5936,   5936,   5936,   5936,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   6815,   6815,   6815,
                          6815,   6815,   6839,   6839,   6839,   6839,   6848,
                          6848,   6848,   6848,   6848,   6848,   6848,   6850,
                          6850,   6850,   6850,   6860,   6860,   6860,   6860,
                          6860,   6860,   6861,   6861,   6861,   6861,   6861,
                          6861,   6861,   6866,   6866,   6866,   6866,   6866,
                          6866,   6870,   6870,   6870,   6870,   6874,   6874,
                          6874,   6874,   6919,   6919,   6919,   6919,   6919,
                          6920,   6920,   6920,   6920,   6920,   6920,   6928,
                          6928,   6928,   6928,   6928,   6928,   6928,   6928,
                          6928,   6952,   6952,   6952,   6952,   6952,   6952,
                          6976,   6976,   6976,   6976,   6976,   6976,   6976,
                          6979,   7054,   7054,   7054,   7054,   7061,   7061,
                          7061,   7061,   7061,   7061,   7063,   7063,   7063,
                          7063,   7063,   7091,   7091,   7091,   7091,   7168,
                          7168,   7380,   7380,   7380,   7380,   7380,   7381,
                          7381,   7382,   7382,   7382,   7382,   7382,   7402,
                          7402,   7402,   7410,   7410,   7410,   7410,   7463,
                          7463,   7463,   7463,   7463,   7463,   7463,   7463,
                          7463,   7463,   7468,   7468,   7468,   7468,   7468,
                          7486,   7486,   7486,   7486,   7486,   7486,   7486,
                          7486,   7486,   7486,   7487,   7487,   7487,   7487,
                          7487,   7487,   7487,   7731,   7731,   7731,   7731,
                          7731,   7731,   7731,   7731,   7737,   7737,   7737,
                          7777,   7777,   7777,   7777,   7777,   7777,   7777,
                          7777,   7778,   7778,   7778,   7778,   7778,   7778,
                          7778,   7780,   7780,   7791,   7791,   7791,   7791,
                          7791,   7791,   7791,   7835,   7835,   7835,   7835,
                          7835,   7835,   7836,   7836,   7836,   7837,   7837,
                          7837,   7837,   7837,   7837,   7837,   7838,   7838,
                          7838,   7838,   7838,   7839,   7839,   7839,   7857,
                          7857,   7857,   7857,   7857,   7857,   7878,   7878,
                          7878,   7878,   7905,   7905,   7905,   7905,   7905,
                          7905,   7905,   7905,   7933,   7933,   7933,   7933,
                          7933,   7933,   7951,   7951,   7951,   7951,   7951,
                          7951,   7960,   7960,   7960,   7960,   7970,   7970,
                          7970,   7970,   7970,   7973,   7973,   7973,   7973,
                          7973,   7973,   7973,   7973],
                       [155030,  63949, 155030, 155030, 155030,  63931,  63942,
                        155030,  63942,  63949, 155030,  63942,  63949, 155030,
                         63931,  63949, 155030, 155030,  82948, 132324, 192126,
                        223785, 237645, 255365, 255389, 255398, 255400, 255410,
                        255411, 255416, 255420, 255424, 255469, 255470, 255478,
                        255502, 255526, 255529, 255604, 255611, 255613, 255641,
                        255718, 255930, 255931, 255932, 255952, 255960, 256013,
                        256018, 256036, 256037, 256281, 256287, 256327, 256328,
                        256330, 256341, 256385, 256386, 256387, 256388, 256389,
                        256407, 256428, 256455, 256483, 256501, 256510, 256520,
                        256523, 304207, 304214, 328345, 146304, 146316, 179885,
                        247080, 247104, 247115, 247135, 247241, 247319, 247645,
                        247646, 247647, 247667, 247675, 247728, 247733, 247751,
                        247752, 247996, 248002, 248056, 248101, 248102, 248103,
                        248104, 248143, 248225, 248235, 146304, 146305, 146307,
                        179885, 247080, 247113, 247125, 247126, 247184, 247185,
                        247193, 247217, 247241, 247326, 247328, 247356, 247728,
                        247751, 247752, 247996, 248042, 248043, 248056, 248100,
                        248122, 248170, 248198, 248216, 248238, 146197, 146305,
                        146307, 146316, 179885, 247125, 247126, 247139, 247193,
                        247728, 247751, 247752, 247996, 248042, 248043, 248056,
                        248100, 248122, 248170, 248238,  22470, 113641, 113652,
                        146216, 146316,  22470, 113641, 146216, 146316,  22470,
                        113652, 146216, 146241, 146305, 146307, 146316,  22470,
                        113641, 146216, 146316,  22470, 113652, 113659, 146241,
                        146305, 146307,  22470, 113652, 113659, 146241, 146304,
                        146305, 146307,  22470, 146216, 146241, 146305, 146307,
                        146316,  22470, 113641, 146216, 146316,  22470, 113659,
                        146305, 146307,  22470, 113652, 146241, 146305, 146307,
                         22470, 113652, 146241, 146305, 146307, 146316,  22470,
                        113652, 113659, 146194, 146197, 146241, 146304, 146305,
                        146307,  22470, 113652, 146241, 146304, 146305, 146307,
                         22470, 113641, 113652, 146216, 146241, 146305, 146307,
                         22470,  22470, 113641, 146216, 146316,  22470, 113652,
                        146241, 146305, 146307, 146316,  22470, 113652, 146241,
                        146305, 146307,  22470, 113652, 146305, 146307,  22470,
                        146316,  22470, 113641, 146304, 146305, 146316,  22470,
                        113641,  22470, 113641, 146304, 146316, 146337,  22470,
                        113641, 146316,  22470, 113641, 146304, 146316,  22470,
                        113641, 113652, 113659, 146216, 146304, 146305, 146307,
                        146316, 146337,  22470, 113641, 146216, 146304, 146316,
                         22470, 113641, 113652, 113659, 146197, 146216, 146304,
                        146305, 146307, 146337,  22470, 113641, 113652, 113659,
                        146216, 146304, 146337,  22470, 113641, 113652, 113659,
                        146216, 146304, 146305, 146307,  22470, 113641, 146216,
                         22470, 113652, 113659, 146197, 146304, 146305, 146307,
                        146316,  22470, 113652, 113659, 146197, 146305, 146307,
                        146316,  22470, 146197,  22470, 113641, 113652, 113659,
                        146304, 146305, 146307,  22470, 113652, 113659, 146304,
                        146305, 146307,  22470, 113641, 146216,  22470, 113641,
                        146216, 146304, 146305, 146307, 146337,  22470, 113641,
                        146216, 146304, 146316,  22470, 113641, 146216,  22470,
                        113652, 113659, 146304, 146305, 146307,  22470, 113641,
                        146216, 146304,  22470, 113652, 113659, 146197, 146304,
                        146305, 146307, 146316,  22470, 113652, 146304, 146305,
                        146307, 146316,  22470, 113652, 146197, 146216, 146304,
                        146305,  22470, 113641, 146216, 146316,  22470, 113641,
                        146216, 146304, 146316,  22470, 113652, 113659, 146197,
                        146304, 146305, 146307, 146316]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=410, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 410
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

100%|##########| 10/10 [00:41<00:00,  4.15s/it]
train modality
node_idx: 5677 belonging to  2
  0%|          | 0/10 [00:00<?, ?it/s]
82
start training
masked_hor: tensor(indices=tensor([[  5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   7146,   7188,   7268,   7271,   7275,   7285,
                          7286,   7328,   7335,   7336,   7350,   7411,   7436,
                          7494,   7520,   7521,   7525,   7526,   7527,   7538,
                          7541,   7561,   7562,   7570,   7577,   7579,   7580,
                          7590,   7597,   7601,   7603,   7604,   7606,   7608,
                          7609,   7625,   7627,   7640,   7641],
                       [ 82850, 194808, 223811, 255696, 255738, 255818, 255821,
                        255825, 255835, 255836, 255878, 255885, 255886, 255900,
                        255961, 255986, 256044, 256070, 256071, 256075, 256076,
                        256077, 256088, 256091, 256111, 256112, 256120, 256127,
                        256129, 256130, 256140, 256147, 256151, 256153, 256154,
                        256156, 256158, 256159, 256175, 256177, 256190, 256191,
                        328345,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  80242,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247]]),
       values=tensor([0.7860, 0.7742, 0.7578, 0.0170, 0.0193, 0.0177, 0.0187,
                      0.0174, 0.0181, 0.0200, 0.0184, 0.0176, 0.0182, 0.0183,
                      0.0181, 0.0193, 0.0200, 0.0186, 0.0183, 0.0191, 0.0181,
                      0.0196, 0.0194, 0.0200, 0.0197, 0.0197, 0.0192, 0.0197,
                      0.0186, 0.0188, 0.0185, 0.0194, 0.0176, 0.0180, 0.0186,
                      0.0200, 0.0190, 0.0184, 0.0190, 0.0181, 0.0175, 0.0195,
                      0.7032, 0.7122, 0.6902, 0.7911, 0.6915, 0.7158, 0.7021,
                      0.7104, 0.7334, 0.7469, 0.7158, 0.7660, 0.7053, 0.7079,
                      0.6859, 0.7322, 0.7291, 0.7513, 0.7280, 0.7838, 0.6932,
                      0.7714, 0.7731, 0.7565, 0.6880, 0.7127, 0.7472, 0.7469,
                      0.7646, 0.7326, 0.7528, 0.7087, 0.6976, 0.7492, 0.6750,
                      0.7049, 0.7700, 0.7456, 0.7249, 0.7682]),
       size=(8285, 753935), nnz=82, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([0.7860, 0.7742, 0.7578, 0.6618, 0.7514, 0.6915, 0.7297, 0.6790, 0.7073,
        0.7786, 0.7188, 0.6859, 0.7081, 0.7135, 0.7068, 0.7538, 0.7784, 0.7261,
        0.7155, 0.7443, 0.7072, 0.7629, 0.7549, 0.7795, 0.7685, 0.7690, 0.7494,
        0.7700, 0.7239, 0.7323, 0.7233, 0.7566, 0.6865, 0.7035, 0.7241, 0.7804,
        0.7407, 0.7178, 0.7403, 0.7066, 0.6806, 0.7605, 0.7032, 0.7122, 0.6902,
        0.7911, 0.6915, 0.7158, 0.7021, 0.7104, 0.7334, 0.7469, 0.7158, 0.7660,
        0.7053, 0.7079, 0.6859, 0.7322, 0.7291, 0.7513, 0.7280, 0.7838, 0.6932,
        0.7714, 0.7731, 0.7565, 0.6880, 0.7127, 0.7472, 0.7469, 0.7646, 0.7326,
        0.7528, 0.7087, 0.6976, 0.7492, 0.6750, 0.7049, 0.7700, 0.7456, 0.7249,
        0.7682], grad_fn=<IndexBackward0>)
num_high 82 original num_nodes 82
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(5.9893, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.13s/it]
epoch:  0 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   7146,   7188,   7268,   7271,   7275,   7285,
                          7286,   7328,   7335,   7336,   7350,   7411,   7436,
                          7494,   7520,   7521,   7525,   7526,   7527,   7538,
                          7541,   7561,   7562,   7570,   7577,   7579,   7580,
                          7590,   7597,   7601,   7603,   7604,   7606,   7608,
                          7609,   7625,   7627,   7640,   7641],
                       [ 82850, 194808, 223811, 255696, 255738, 255818, 255821,
                        255825, 255835, 255836, 255878, 255885, 255886, 255900,
                        255961, 255986, 256044, 256070, 256071, 256075, 256076,
                        256077, 256088, 256091, 256111, 256112, 256120, 256127,
                        256129, 256130, 256140, 256147, 256151, 256153, 256154,
                        256156, 256158, 256159, 256175, 256177, 256190, 256191,
                        328345,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  80242,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=82, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 82
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:33,  4.13s/it]
masked_hor: tensor(indices=tensor([[  5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   7146,   7188,   7268,   7271,   7275,   7285,
                          7286,   7328,   7335,   7336,   7350,   7411,   7436,
                          7494,   7520,   7521,   7525,   7526,   7527,   7538,
                          7541,   7561,   7562,   7570,   7577,   7579,   7580,
                          7590,   7597,   7601,   7603,   7604,   7606,   7608,
                          7609,   7625,   7627,   7640,   7641],
                       [ 82850, 194808, 223811, 255696, 255738, 255818, 255821,
                        255825, 255835, 255836, 255878, 255885, 255886, 255900,
                        255961, 255986, 256044, 256070, 256071, 256075, 256076,
                        256077, 256088, 256091, 256111, 256112, 256120, 256127,
                        256129, 256130, 256140, 256147, 256151, 256153, 256154,
                        256156, 256158, 256159, 256175, 256177, 256190, 256191,
                        328345,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  80242,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=82, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 82
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:28,  4.13s/it]
epoch:  2 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   7146,   7188,   7268,   7271,   7275,   7285,
                          7286,   7328,   7335,   7336,   7350,   7411,   7436,
                          7494,   7520,   7521,   7525,   7526,   7527,   7538,
                          7541,   7561,   7562,   7570,   7577,   7579,   7580,
                          7590,   7597,   7601,   7603,   7604,   7606,   7608,
                          7609,   7625,   7627,   7640,   7641],
                       [ 82850, 194808, 223811, 255696, 255738, 255818, 255821,
                        255825, 255835, 255836, 255878, 255885, 255886, 255900,
                        255961, 255986, 256044, 256070, 256071, 256075, 256076,
                        256077, 256088, 256091, 256111, 256112, 256120, 256127,
                        256129, 256130, 256140, 256147, 256151, 256153, 256154,
                        256156, 256158, 256159, 256175, 256177, 256190, 256191,
                        328345,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  80242,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=82, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 82
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   7146,   7188,   7268,   7271,   7275,   7285,
                          7286,   7328,   7335,   7336,   7350,   7411,   7436,
                          7494,   7520,   7521,   7525,   7526,   7527,   7538,
                          7541,   7561,   7562,   7570,   7577,   7579,   7580,
                          7590,   7597,   7601,   7603,   7604,   7606,   7608,
                          7609,   7625,   7627,   7640,   7641],
                       [ 82850, 194808, 223811, 255696, 255738, 255818, 255821,
                        255825, 255835, 255836, 255878, 255885, 255886, 255900,
                        255961, 255986, 256044, 256070, 256071, 256075, 256076,
                        256077, 256088, 256091, 256111, 256112, 256120, 256127,
                        256129, 256130, 256140, 256147, 256151, 256153, 256154,
                        256156, 256158, 256159, 256175, 256177, 256190, 256191,
                        328345,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  80242,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=82, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 82
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.12s/it]
epoch:  4 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   7146,   7188,   7268,   7271,   7275,   7285,
                          7286,   7328,   7335,   7336,   7350,   7411,   7436,
                          7494,   7520,   7521,   7525,   7526,   7527,   7538,
                          7541,   7561,   7562,   7570,   7577,   7579,   7580,
                          7590,   7597,   7601,   7603,   7604,   7606,   7608,
                          7609,   7625,   7627,   7640,   7641],
                       [ 82850, 194808, 223811, 255696, 255738, 255818, 255821,
                        255825, 255835, 255836, 255878, 255885, 255886, 255900,
                        255961, 255986, 256044, 256070, 256071, 256075, 256076,
                        256077, 256088, 256091, 256111, 256112, 256120, 256127,
                        256129, 256130, 256140, 256147, 256151, 256153, 256154,
                        256156, 256158, 256159, 256175, 256177, 256190, 256191,
                        328345,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  80242,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=82, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 82
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.15s/it]
masked_hor: tensor(indices=tensor([[  5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   7146,   7188,   7268,   7271,   7275,   7285,
                          7286,   7328,   7335,   7336,   7350,   7411,   7436,
                          7494,   7520,   7521,   7525,   7526,   7527,   7538,
                          7541,   7561,   7562,   7570,   7577,   7579,   7580,
                          7590,   7597,   7601,   7603,   7604,   7606,   7608,
                          7609,   7625,   7627,   7640,   7641],
                       [ 82850, 194808, 223811, 255696, 255738, 255818, 255821,
                        255825, 255835, 255836, 255878, 255885, 255886, 255900,
                        255961, 255986, 256044, 256070, 256071, 256075, 256076,
                        256077, 256088, 256091, 256111, 256112, 256120, 256127,
                        256129, 256130, 256140, 256147, 256151, 256153, 256154,
                        256156, 256158, 256159, 256175, 256177, 256190, 256191,
                        328345,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  80242,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=82, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 82
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:28<00:12,  4.13s/it]
epoch:  6 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   7146,   7188,   7268,   7271,   7275,   7285,
                          7286,   7328,   7335,   7336,   7350,   7411,   7436,
                          7494,   7520,   7521,   7525,   7526,   7527,   7538,
                          7541,   7561,   7562,   7570,   7577,   7579,   7580,
                          7590,   7597,   7601,   7603,   7604,   7606,   7608,
                          7609,   7625,   7627,   7640,   7641],
                       [ 82850, 194808, 223811, 255696, 255738, 255818, 255821,
                        255825, 255835, 255836, 255878, 255885, 255886, 255900,
                        255961, 255986, 256044, 256070, 256071, 256075, 256076,
                        256077, 256088, 256091, 256111, 256112, 256120, 256127,
                        256129, 256130, 256140, 256147, 256151, 256153, 256154,
                        256156, 256158, 256159, 256175, 256177, 256190, 256191,
                        328345,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  80242,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=82, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 82
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:33<00:08,  4.15s/it]
masked_hor: tensor(indices=tensor([[  5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   7146,   7188,   7268,   7271,   7275,   7285,
                          7286,   7328,   7335,   7336,   7350,   7411,   7436,
                          7494,   7520,   7521,   7525,   7526,   7527,   7538,
                          7541,   7561,   7562,   7570,   7577,   7579,   7580,
                          7590,   7597,   7601,   7603,   7604,   7606,   7608,
                          7609,   7625,   7627,   7640,   7641],
                       [ 82850, 194808, 223811, 255696, 255738, 255818, 255821,
                        255825, 255835, 255836, 255878, 255885, 255886, 255900,
                        255961, 255986, 256044, 256070, 256071, 256075, 256076,
                        256077, 256088, 256091, 256111, 256112, 256120, 256127,
                        256129, 256130, 256140, 256147, 256151, 256153, 256154,
                        256156, 256158, 256159, 256175, 256177, 256190, 256191,
                        328345,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  80242,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=82, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 82
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.14s/it]
epoch:  8 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   5677,   5677,   5677,   5677,   5677,   5677,
                          5677,   7146,   7188,   7268,   7271,   7275,   7285,
                          7286,   7328,   7335,   7336,   7350,   7411,   7436,
                          7494,   7520,   7521,   7525,   7526,   7527,   7538,
                          7541,   7561,   7562,   7570,   7577,   7579,   7580,
                          7590,   7597,   7601,   7603,   7604,   7606,   7608,
                          7609,   7625,   7627,   7640,   7641],
                       [ 82850, 194808, 223811, 255696, 255738, 255818, 255821,
                        255825, 255835, 255836, 255878, 255885, 255886, 255900,
                        255961, 255986, 256044, 256070, 256071, 256075, 256076,
                        256077, 256088, 256091, 256111, 256112, 256120, 256127,
                        256129, 256130, 256140, 256147, 256151, 256153, 256154,
                        256156, 256158, 256159, 256175, 256177, 256190, 256191,
                        328345,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  80242,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247,  22247,  22247,
                         22247,  22247,  22247,  22247,  22247]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=82, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 82
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

100%|##########| 10/10 [00:41<00:00,  4.14s/it]
train modality
node_idx: 5791 belonging to  2
  0%|          | 0/10 [00:00<?, ?it/s]
1676
start training
masked_hor: tensor(indices=tensor([[  5349,   5349,   5351,  ...,   8044,   8044,   8044],
                       [ 63959, 154921,  63910,  ..., 146198, 146304, 146307]]),
       values=tensor([0.7439, 0.7410, 0.1053,  ..., 0.1449, 0.1483, 0.1487]),
       size=(8285, 753935), nnz=1676, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([0.7439, 0.7410, 0.7371,  ..., 0.7245, 0.7416, 0.7436],
       grad_fn=<IndexBackward0>)
num_high 1676 original num_nodes 1676
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(122.5186, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.14s/it]
epoch:  0 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5349,   5349,   5351,  ...,   8044,   8044,   8044],
                       [ 63959, 154921,  63910,  ..., 146198, 146304, 146307]]),
       values=tensor([nan, nan, nan,  ..., nan, nan, nan]),
       size=(8285, 753935), nnz=1676, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 1676
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)
size_num_loss 0.0
masked_hor: tensor(indices=tensor([[  5349,   5349,   5351,  ...,   8044,   8044,   8044],
                       [ 63959, 154921,  63910,  ..., 146198, 146304, 146307]]),
       values=tensor([nan, nan, nan,  ..., nan, nan, nan]),
       size=(8285, 753935), nnz=1676, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 1676
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:33,  4.15s/it]
epoch:  2 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5349,   5349,   5351,  ...,   8044,   8044,   8044],
                       [ 63959, 154921,  63910,  ..., 146198, 146304, 146307]]),
       values=tensor([nan, nan, nan,  ..., nan, nan, nan]),
       size=(8285, 753935), nnz=1676, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 1676
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)


 40%|####      | 4/10 [00:16<00:24,  4.15s/it]
masked_hor: tensor(indices=tensor([[  5349,   5349,   5351,  ...,   8044,   8044,   8044],
                       [ 63959, 154921,  63910,  ..., 146198, 146304, 146307]]),
       values=tensor([nan, nan, nan,  ..., nan, nan, nan]),
       size=(8285, 753935), nnz=1676, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 1676
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.18s/it]
epoch:  4 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5349,   5349,   5351,  ...,   8044,   8044,   8044],
                       [ 63959, 154921,  63910,  ..., 146198, 146304, 146307]]),
       values=tensor([nan, nan, nan,  ..., nan, nan, nan]),
       size=(8285, 753935), nnz=1676, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 1676
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.17s/it]
masked_hor: tensor(indices=tensor([[  5349,   5349,   5351,  ...,   8044,   8044,   8044],
                       [ 63959, 154921,  63910,  ..., 146198, 146304, 146307]]),
       values=tensor([nan, nan, nan,  ..., nan, nan, nan]),
       size=(8285, 753935), nnz=1676, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 1676
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:29<00:12,  4.16s/it]
epoch:  6 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5349,   5349,   5351,  ...,   8044,   8044,   8044],
                       [ 63959, 154921,  63910,  ..., 146198, 146304, 146307]]),
       values=tensor([nan, nan, nan,  ..., nan, nan, nan]),
       size=(8285, 753935), nnz=1676, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 1676
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:33<00:08,  4.16s/it]
masked_hor: tensor(indices=tensor([[  5349,   5349,   5351,  ...,   8044,   8044,   8044],
                       [ 63959, 154921,  63910,  ..., 146198, 146304, 146307]]),
       values=tensor([nan, nan, nan,  ..., nan, nan, nan]),
       size=(8285, 753935), nnz=1676, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 1676
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.16s/it]
epoch:  8 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5349,   5349,   5351,  ...,   8044,   8044,   8044],
                       [ 63959, 154921,  63910,  ..., 146198, 146304, 146307]]),
       values=tensor([nan, nan, nan,  ..., nan, nan, nan]),
       size=(8285, 753935), nnz=1676, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 1676
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

100%|##########| 10/10 [00:41<00:00,  4.16s/it]
train modality
node_idx: 5811 belonging to  2
98
start training
masked_hor: tensor(indices=tensor([[  5351,   5385,   5414,   5452,   5471,   5471,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5943,   5943,   5943,   5944,   5944,   5944,
                          5944,   5956,   5956,   5956,   5956,   5956,   5956,
                          5956,   5956,   5956,   5957,   5957,   5957,   5962,
                          5962,   6991,   6991,   6991,   7006,   7006,   7006,
                          7006,   7014,   7014,   7014,   7014,   7018,   7018,
                          7018,   7034,   7034,   7034,   7034,   7035,   7035,
                          7035,   7035,   7035,   7053,   7053,   7053,   7053,
                          7082,   7082,   7089,   7089,   7089,   7117,   7117],
                       [154941, 154941, 154941, 154941,  63951, 154941,  47368,
                         47369,  47381,  47382,  47387, 179796, 263826, 263841,
                        263849, 263853, 263869, 263870, 263888, 263917, 263924,
                        263952,  82850, 191877, 223792, 237582, 255541, 255556,
                        255564, 255568, 255584, 255585, 255603, 255632, 255639,
                        255667, 304203, 304204, 304216, 304217, 304222, 328345,
                        328346,  38644, 179796, 247256,  38644, 179796, 247300,
                        247347,  38644, 146316, 179796, 247271, 247279, 247283,
                        247299, 247318, 247354,  38644, 179796, 247300,  38644,
                        179796,  22381, 113648, 146230,  22381, 113661, 146230,
                        146316,  22381, 113661, 146297, 146316,  22381, 113661,
                        146316,  22381, 113661, 146196, 146316,  22381, 113649,
                        113662, 146230, 146259,  22381, 113661, 146297, 146316,
                         22381, 113649,  22381, 113661, 146316,  22381, 146297]]),
       values=tensor([0.7816, 0.7707, 0.7556, 0.6680, 0.7497, 0.6950, 0.1460,
                      0.1367, 0.1419, 0.1550, 0.1440, 0.6899, 0.0710, 0.0715,
                      0.0709, 0.0752, 0.0775, 0.0727, 0.0717, 0.0743, 0.0709,
                      0.0760, 0.7529, 0.7756, 0.7654, 0.7659, 0.0748, 0.0767,
                      0.0725, 0.0732, 0.0724, 0.0755, 0.0690, 0.0706, 0.0725,
                      0.0776, 0.1480, 0.1438, 0.1479, 0.1418, 0.1370, 0.3790,
                      0.3528, 0.7138, 0.6938, 0.7864, 0.6950, 0.7171, 0.3523,
                      0.3561, 0.7332, 0.7456, 0.7171, 0.1272, 0.1179, 0.1183,
                      0.1150, 0.1220, 0.1215, 0.7496, 0.7283, 0.7796, 0.6965,
                      0.7681, 0.7697, 0.7544, 0.7887, 0.7455, 0.7407, 0.3627,
                      0.3502, 0.7654, 0.7262, 0.3728, 0.3663, 0.7429, 0.7469,
                      0.7127, 0.6648, 0.7095, 0.3657, 0.3607, 0.7525, 0.3659,
                      0.3743, 0.3736, 0.3800, 0.7182, 0.7116, 0.3734, 0.3711,
                      0.7360, 0.7384, 0.7653, 0.7310, 0.7224, 0.7025, 0.7345]),
       size=(8285, 753935), nnz=98, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([0.7816, 0.7707, 0.7556, 0.6680, 0.7497, 0.6950, 0.7298, 0.6837, 0.7094,
        0.7748, 0.7199, 0.6899, 0.7101, 0.7151, 0.7089, 0.7519, 0.7746, 0.7266,
        0.7169, 0.7432, 0.7092, 0.7602, 0.7529, 0.7756, 0.7654, 0.7659, 0.7479,
        0.7669, 0.7245, 0.7322, 0.7239, 0.7545, 0.6904, 0.7059, 0.7247, 0.7765,
        0.7399, 0.7190, 0.7396, 0.7088, 0.6851, 0.7581, 0.7056, 0.7138, 0.6938,
        0.7864, 0.6950, 0.7171, 0.7046, 0.7122, 0.7332, 0.7456, 0.7171, 0.7632,
        0.7076, 0.7099, 0.6899, 0.7321, 0.7293, 0.7496, 0.7283, 0.7796, 0.6965,
        0.7681, 0.7697, 0.7544, 0.7887, 0.7455, 0.7407, 0.7255, 0.7004, 0.7654,
        0.7262, 0.7455, 0.7326, 0.7429, 0.7469, 0.7127, 0.6648, 0.7095, 0.7314,
        0.7214, 0.7525, 0.7319, 0.7487, 0.7471, 0.7600, 0.7182, 0.7116, 0.7469,
        0.7423, 0.7360, 0.7384, 0.7653, 0.7310, 0.7224, 0.7025, 0.7345],
       grad_fn=<IndexBackward0>)
num_high 98 original num_nodes 98
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(7.1720, grad_fn=<AddBackward0>)
size_num_loss 1.0
  0%|          | 0/10 [00:00<?, ?it/s]
epoch:  0 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5351,   5385,   5414,   5452,   5471,   5471,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5943,   5943,   5943,   5944,   5944,   5944,
                          5944,   5956,   5956,   5956,   5956,   5956,   5956,
                          5956,   5956,   5956,   5957,   5957,   5957,   5962,
                          5962,   6991,   6991,   6991,   7006,   7006,   7006,
                          7006,   7014,   7014,   7014,   7014,   7018,   7018,
                          7018,   7034,   7034,   7034,   7034,   7035,   7035,
                          7035,   7035,   7035,   7053,   7053,   7053,   7053,
                          7082,   7082,   7089,   7089,   7089,   7117,   7117],
                       [154941, 154941, 154941, 154941,  63951, 154941,  47368,
                         47369,  47381,  47382,  47387, 179796, 263826, 263841,
                        263849, 263853, 263869, 263870, 263888, 263917, 263924,
                        263952,  82850, 191877, 223792, 237582, 255541, 255556,
                        255564, 255568, 255584, 255585, 255603, 255632, 255639,
                        255667, 304203, 304204, 304216, 304217, 304222, 328345,
                        328346,  38644, 179796, 247256,  38644, 179796, 247300,
                        247347,  38644, 146316, 179796, 247271, 247279, 247283,
                        247299, 247318, 247354,  38644, 179796, 247300,  38644,
                        179796,  22381, 113648, 146230,  22381, 113661, 146230,
                        146316,  22381, 113661, 146297, 146316,  22381, 113661,
                        146316,  22381, 113661, 146196, 146316,  22381, 113649,
                        113662, 146230, 146259,  22381, 113661, 146297, 146316,
                         22381, 113649,  22381, 113661, 146316,  22381, 146297]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan]),
       size=(8285, 753935), nnz=98, layout=torch.sparse_coo,

 10%|#         | 1/10 [00:04<00:37,  4.13s/it]
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 98
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:33,  4.13s/it]
masked_hor: tensor(indices=tensor([[  5351,   5385,   5414,   5452,   5471,   5471,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5943,   5943,   5943,   5944,   5944,   5944,
                          5944,   5956,   5956,   5956,   5956,   5956,   5956,
                          5956,   5956,   5956,   5957,   5957,   5957,   5962,
                          5962,   6991,   6991,   6991,   7006,   7006,   7006,
                          7006,   7014,   7014,   7014,   7014,   7018,   7018,
                          7018,   7034,   7034,   7034,   7034,   7035,   7035,
                          7035,   7035,   7035,   7053,   7053,   7053,   7053,
                          7082,   7082,   7089,   7089,   7089,   7117,   7117],
                       [154941, 154941, 154941, 154941,  63951, 154941,  47368,
                         47369,  47381,  47382,  47387, 179796, 263826, 263841,
                        263849, 263853, 263869, 263870, 263888, 263917, 263924,
                        263952,  82850, 191877, 223792, 237582, 255541, 255556,
                        255564, 255568, 255584, 255585, 255603, 255632, 255639,
                        255667, 304203, 304204, 304216, 304217, 304222, 328345,
                        328346,  38644, 179796, 247256,  38644, 179796, 247300,
                        247347,  38644, 146316, 179796, 247271, 247279, 247283,
                        247299, 247318, 247354,  38644, 179796, 247300,  38644,
                        179796,  22381, 113648, 146230,  22381, 113661, 146230,
                        146316,  22381, 113661, 146297, 146316,  22381, 113661,
                        146316,  22381, 113661, 146196, 146316,  22381, 113649,
                        113662, 146230, 146259,  22381, 113661, 146297, 146316,
                         22381, 113649,  22381, 113661, 146316,  22381, 146297]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan]),
       size=(8285, 753935), nnz=98, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 98
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:29,  4.14s/it]
epoch:  2 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5351,   5385,   5414,   5452,   5471,   5471,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5943,   5943,   5943,   5944,   5944,   5944,
                          5944,   5956,   5956,   5956,   5956,   5956,   5956,
                          5956,   5956,   5956,   5957,   5957,   5957,   5962,
                          5962,   6991,   6991,   6991,   7006,   7006,   7006,
                          7006,   7014,   7014,   7014,   7014,   7018,   7018,
                          7018,   7034,   7034,   7034,   7034,   7035,   7035,
                          7035,   7035,   7035,   7053,   7053,   7053,   7053,
                          7082,   7082,   7089,   7089,   7089,   7117,   7117],
                       [154941, 154941, 154941, 154941,  63951, 154941,  47368,
                         47369,  47381,  47382,  47387, 179796, 263826, 263841,
                        263849, 263853, 263869, 263870, 263888, 263917, 263924,
                        263952,  82850, 191877, 223792, 237582, 255541, 255556,
                        255564, 255568, 255584, 255585, 255603, 255632, 255639,
                        255667, 304203, 304204, 304216, 304217, 304222, 328345,
                        328346,  38644, 179796, 247256,  38644, 179796, 247300,
                        247347,  38644, 146316, 179796, 247271, 247279, 247283,
                        247299, 247318, 247354,  38644, 179796, 247300,  38644,
                        179796,  22381, 113648, 146230,  22381, 113661, 146230,
                        146316,  22381, 113661, 146297, 146316,  22381, 113661,
                        146316,  22381, 113661, 146196, 146316,  22381, 113649,
                        113662, 146230, 146259,  22381, 113661, 146297, 146316,
                         22381, 113649,  22381, 113661, 146316,  22381, 146297]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan]),
       size=(8285, 753935), nnz=98, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 98
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.14s/it]
masked_hor: tensor(indices=tensor([[  5351,   5385,   5414,   5452,   5471,   5471,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5943,   5943,   5943,   5944,   5944,   5944,
                          5944,   5956,   5956,   5956,   5956,   5956,   5956,
                          5956,   5956,   5956,   5957,   5957,   5957,   5962,
                          5962,   6991,   6991,   6991,   7006,   7006,   7006,
                          7006,   7014,   7014,   7014,   7014,   7018,   7018,
                          7018,   7034,   7034,   7034,   7034,   7035,   7035,
                          7035,   7035,   7035,   7053,   7053,   7053,   7053,
                          7082,   7082,   7089,   7089,   7089,   7117,   7117],
                       [154941, 154941, 154941, 154941,  63951, 154941,  47368,
                         47369,  47381,  47382,  47387, 179796, 263826, 263841,
                        263849, 263853, 263869, 263870, 263888, 263917, 263924,
                        263952,  82850, 191877, 223792, 237582, 255541, 255556,
                        255564, 255568, 255584, 255585, 255603, 255632, 255639,
                        255667, 304203, 304204, 304216, 304217, 304222, 328345,
                        328346,  38644, 179796, 247256,  38644, 179796, 247300,
                        247347,  38644, 146316, 179796, 247271, 247279, 247283,
                        247299, 247318, 247354,  38644, 179796, 247300,  38644,
                        179796,  22381, 113648, 146230,  22381, 113661, 146230,
                        146316,  22381, 113661, 146297, 146316,  22381, 113661,
                        146316,  22381, 113661, 146196, 146316,  22381, 113649,
                        113662, 146230, 146259,  22381, 113661, 146297, 146316,
                         22381, 113649,  22381, 113661, 146316,  22381, 146297]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan]),
       size=(8285, 753935), nnz=98, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 98
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.13s/it]
epoch:  4 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5351,   5385,   5414,   5452,   5471,   5471,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5943,   5943,   5943,   5944,   5944,   5944,
                          5944,   5956,   5956,   5956,   5956,   5956,   5956,
                          5956,   5956,   5956,   5957,   5957,   5957,   5962,
                          5962,   6991,   6991,   6991,   7006,   7006,   7006,
                          7006,   7014,   7014,   7014,   7014,   7018,   7018,
                          7018,   7034,   7034,   7034,   7034,   7035,   7035,
                          7035,   7035,   7035,   7053,   7053,   7053,   7053,
                          7082,   7082,   7089,   7089,   7089,   7117,   7117],
                       [154941, 154941, 154941, 154941,  63951, 154941,  47368,
                         47369,  47381,  47382,  47387, 179796, 263826, 263841,
                        263849, 263853, 263869, 263870, 263888, 263917, 263924,
                        263952,  82850, 191877, 223792, 237582, 255541, 255556,
                        255564, 255568, 255584, 255585, 255603, 255632, 255639,
                        255667, 304203, 304204, 304216, 304217, 304222, 328345,
                        328346,  38644, 179796, 247256,  38644, 179796, 247300,
                        247347,  38644, 146316, 179796, 247271, 247279, 247283,
                        247299, 247318, 247354,  38644, 179796, 247300,  38644,
                        179796,  22381, 113648, 146230,  22381, 113661, 146230,
                        146316,  22381, 113661, 146297, 146316,  22381, 113661,
                        146316,  22381, 113661, 146196, 146316,  22381, 113649,
                        113662, 146230, 146259,  22381, 113661, 146297, 146316,
                         22381, 113649,  22381, 113661, 146316,  22381, 146297]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan]),
       size=(8285, 753935), nnz=98, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 98
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.14s/it]
masked_hor: tensor(indices=tensor([[  5351,   5385,   5414,   5452,   5471,   5471,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5943,   5943,   5943,   5944,   5944,   5944,
                          5944,   5956,   5956,   5956,   5956,   5956,   5956,
                          5956,   5956,   5956,   5957,   5957,   5957,   5962,
                          5962,   6991,   6991,   6991,   7006,   7006,   7006,
                          7006,   7014,   7014,   7014,   7014,   7018,   7018,
                          7018,   7034,   7034,   7034,   7034,   7035,   7035,
                          7035,   7035,   7035,   7053,   7053,   7053,   7053,
                          7082,   7082,   7089,   7089,   7089,   7117,   7117],
                       [154941, 154941, 154941, 154941,  63951, 154941,  47368,
                         47369,  47381,  47382,  47387, 179796, 263826, 263841,
                        263849, 263853, 263869, 263870, 263888, 263917, 263924,
                        263952,  82850, 191877, 223792, 237582, 255541, 255556,
                        255564, 255568, 255584, 255585, 255603, 255632, 255639,
                        255667, 304203, 304204, 304216, 304217, 304222, 328345,
                        328346,  38644, 179796, 247256,  38644, 179796, 247300,
                        247347,  38644, 146316, 179796, 247271, 247279, 247283,
                        247299, 247318, 247354,  38644, 179796, 247300,  38644,
                        179796,  22381, 113648, 146230,  22381, 113661, 146230,
                        146316,  22381, 113661, 146297, 146316,  22381, 113661,
                        146316,  22381, 113661, 146196, 146316,  22381, 113649,
                        113662, 146230, 146259,  22381, 113661, 146297, 146316,
                         22381, 113649,  22381, 113661, 146316,  22381, 146297]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan]),
       size=(8285, 753935), nnz=98, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 98
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:28<00:12,  4.14s/it]
epoch:  6 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5351,   5385,   5414,   5452,   5471,   5471,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5943,   5943,   5943,   5944,   5944,   5944,
                          5944,   5956,   5956,   5956,   5956,   5956,   5956,
                          5956,   5956,   5956,   5957,   5957,   5957,   5962,
                          5962,   6991,   6991,   6991,   7006,   7006,   7006,
                          7006,   7014,   7014,   7014,   7014,   7018,   7018,
                          7018,   7034,   7034,   7034,   7034,   7035,   7035,
                          7035,   7035,   7035,   7053,   7053,   7053,   7053,
                          7082,   7082,   7089,   7089,   7089,   7117,   7117],
                       [154941, 154941, 154941, 154941,  63951, 154941,  47368,
                         47369,  47381,  47382,  47387, 179796, 263826, 263841,
                        263849, 263853, 263869, 263870, 263888, 263917, 263924,
                        263952,  82850, 191877, 223792, 237582, 255541, 255556,
                        255564, 255568, 255584, 255585, 255603, 255632, 255639,
                        255667, 304203, 304204, 304216, 304217, 304222, 328345,
                        328346,  38644, 179796, 247256,  38644, 179796, 247300,
                        247347,  38644, 146316, 179796, 247271, 247279, 247283,
                        247299, 247318, 247354,  38644, 179796, 247300,  38644,
                        179796,  22381, 113648, 146230,  22381, 113661, 146230,
                        146316,  22381, 113661, 146297, 146316,  22381, 113661,
                        146316,  22381, 113661, 146196, 146316,  22381, 113649,
                        113662, 146230, 146259,  22381, 113661, 146297, 146316,
                         22381, 113649,  22381, 113661, 146316,  22381, 146297]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan]),
       size=(8285, 753935), nnz=98, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 98
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:33<00:08,  4.14s/it]
masked_hor: tensor(indices=tensor([[  5351,   5385,   5414,   5452,   5471,   5471,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5943,   5943,   5943,   5944,   5944,   5944,
                          5944,   5956,   5956,   5956,   5956,   5956,   5956,
                          5956,   5956,   5956,   5957,   5957,   5957,   5962,
                          5962,   6991,   6991,   6991,   7006,   7006,   7006,
                          7006,   7014,   7014,   7014,   7014,   7018,   7018,
                          7018,   7034,   7034,   7034,   7034,   7035,   7035,
                          7035,   7035,   7035,   7053,   7053,   7053,   7053,
                          7082,   7082,   7089,   7089,   7089,   7117,   7117],
                       [154941, 154941, 154941, 154941,  63951, 154941,  47368,
                         47369,  47381,  47382,  47387, 179796, 263826, 263841,
                        263849, 263853, 263869, 263870, 263888, 263917, 263924,
                        263952,  82850, 191877, 223792, 237582, 255541, 255556,
                        255564, 255568, 255584, 255585, 255603, 255632, 255639,
                        255667, 304203, 304204, 304216, 304217, 304222, 328345,
                        328346,  38644, 179796, 247256,  38644, 179796, 247300,
                        247347,  38644, 146316, 179796, 247271, 247279, 247283,
                        247299, 247318, 247354,  38644, 179796, 247300,  38644,
                        179796,  22381, 113648, 146230,  22381, 113661, 146230,
                        146316,  22381, 113661, 146297, 146316,  22381, 113661,
                        146316,  22381, 113661, 146196, 146316,  22381, 113649,
                        113662, 146230, 146259,  22381, 113661, 146297, 146316,
                         22381, 113649,  22381, 113661, 146316,  22381, 146297]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan]),
       size=(8285, 753935), nnz=98, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 98
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.14s/it]
epoch:  8 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5351,   5385,   5414,   5452,   5471,   5471,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5811,   5811,   5811,   5811,   5811,   5811,
                          5811,   5943,   5943,   5943,   5944,   5944,   5944,
                          5944,   5956,   5956,   5956,   5956,   5956,   5956,
                          5956,   5956,   5956,   5957,   5957,   5957,   5962,
                          5962,   6991,   6991,   6991,   7006,   7006,   7006,
                          7006,   7014,   7014,   7014,   7014,   7018,   7018,
                          7018,   7034,   7034,   7034,   7034,   7035,   7035,
                          7035,   7035,   7035,   7053,   7053,   7053,   7053,
                          7082,   7082,   7089,   7089,   7089,   7117,   7117],
                       [154941, 154941, 154941, 154941,  63951, 154941,  47368,
                         47369,  47381,  47382,  47387, 179796, 263826, 263841,
                        263849, 263853, 263869, 263870, 263888, 263917, 263924,
                        263952,  82850, 191877, 223792, 237582, 255541, 255556,
                        255564, 255568, 255584, 255585, 255603, 255632, 255639,
                        255667, 304203, 304204, 304216, 304217, 304222, 328345,
                        328346,  38644, 179796, 247256,  38644, 179796, 247300,
                        247347,  38644, 146316, 179796, 247271, 247279, 247283,
                        247299, 247318, 247354,  38644, 179796, 247300,  38644,
                        179796,  22381, 113648, 146230,  22381, 113661, 146230,
                        146316,  22381, 113661, 146297, 146316,  22381, 113661,
                        146316,  22381, 113661, 146196, 146316,  22381, 113649,
                        113662, 146230, 146259,  22381, 113661, 146297, 146316,
                         22381, 113649,  22381, 113661, 146316,  22381, 146297]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan]),
       size=(8285, 753935), nnz=98, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 98
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

100%|##########| 10/10 [00:41<00:00,  4.14s/it]
train modality
node_idx: 5831 belonging to  2
  0%|          | 0/10 [00:00<?, ?it/s]
33
start training
masked_hor: tensor(indices=tensor([[  5398,   5444,   5459,   5462,   5473,   5478,   5504,
                          5504,   5504,   5504,   5504,   5831,   5831,   5831,
                          5831,   5831,   5831,   5831,   5831,   5831,   5831,
                          5982,   5982,   5982,   5982,   5982,   7102,   7102,
                          7116,   7116,   7116,   7117,   7117],
                       [154961, 154961, 154961, 154961, 154961, 154961,  47407,
                        179816, 263937, 263951, 263952,  82941, 192426, 223714,
                        237599, 255652, 255666, 255667, 304242, 328345, 328346,
                         38644, 179816, 247367, 247381, 247382,  22401, 113687,
                         22401, 113687, 146289,  22401, 113687]]),
       values=tensor([0.8137, 0.7968, 0.7724, 0.6181, 0.7626, 0.6673, 0.7290,
                      0.6468, 0.2310, 0.2677, 0.2372, 0.6580, 0.6944, 0.7031,
                      0.6923, 0.2554, 0.2676, 0.2290, 0.7201, 0.4029, 0.3731,
                      0.7100, 0.7456, 0.2307, 0.2442, 0.2588, 0.6864, 0.7010,
                      0.6651, 0.8209, 0.6673, 0.7068, 0.6572]),
       size=(8285, 753935), nnz=33, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([0.8137, 0.7968, 0.7724, 0.6181, 0.7626, 0.6673, 0.7290, 0.6468, 0.6931,
        0.8031, 0.7116, 0.6580, 0.6944, 0.7031, 0.6923, 0.7663, 0.8029, 0.6869,
        0.7201, 0.8058, 0.7462, 0.7100, 0.7456, 0.6920, 0.7327, 0.7765, 0.6864,
        0.7010, 0.6651, 0.8209, 0.6673, 0.7068, 0.6572],
       grad_fn=<IndexBackward0>)
num_high 33 original num_nodes 33
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(2.3554, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:36,  4.10s/it]
epoch:  0 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5398,   5444,   5459,   5462,   5473,   5478,   5504,
                          5504,   5504,   5504,   5504,   5831,   5831,   5831,
                          5831,   5831,   5831,   5831,   5831,   5831,   5831,
                          5982,   5982,   5982,   5982,   5982,   7102,   7102,
                          7116,   7116,   7116,   7117,   7117],
                       [154961, 154961, 154961, 154961, 154961, 154961,  47407,
                        179816, 263937, 263951, 263952,  82941, 192426, 223714,
                        237599, 255652, 255666, 255667, 304242, 328345, 328346,
                         38644, 179816, 247367, 247381, 247382,  22401, 113687,
                         22401, 113687, 146289,  22401, 113687]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=33, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 33
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:32,  4.11s/it]
masked_hor: tensor(indices=tensor([[  5398,   5444,   5459,   5462,   5473,   5478,   5504,
                          5504,   5504,   5504,   5504,   5831,   5831,   5831,
                          5831,   5831,   5831,   5831,   5831,   5831,   5831,
                          5982,   5982,   5982,   5982,   5982,   7102,   7102,
                          7116,   7116,   7116,   7117,   7117],
                       [154961, 154961, 154961, 154961, 154961, 154961,  47407,
                        179816, 263937, 263951, 263952,  82941, 192426, 223714,
                        237599, 255652, 255666, 255667, 304242, 328345, 328346,
                         38644, 179816, 247367, 247381, 247382,  22401, 113687,
                         22401, 113687, 146289,  22401, 113687]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=33, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 33
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:28,  4.11s/it]
epoch:  2 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5398,   5444,   5459,   5462,   5473,   5478,   5504,
                          5504,   5504,   5504,   5504,   5831,   5831,   5831,
                          5831,   5831,   5831,   5831,   5831,   5831,   5831,
                          5982,   5982,   5982,   5982,   5982,   7102,   7102,
                          7116,   7116,   7116,   7117,   7117],
                       [154961, 154961, 154961, 154961, 154961, 154961,  47407,
                        179816, 263937, 263951, 263952,  82941, 192426, 223714,
                        237599, 255652, 255666, 255667, 304242, 328345, 328346,
                         38644, 179816, 247367, 247381, 247382,  22401, 113687,
                         22401, 113687, 146289,  22401, 113687]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=33, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 33
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5398,   5444,   5459,   5462,   5473,   5478,   5504,
                          5504,   5504,   5504,   5504,   5831,   5831,   5831,
                          5831,   5831,   5831,   5831,   5831,   5831,   5831,
                          5982,   5982,   5982,   5982,   5982,   7102,   7102,
                          7116,   7116,   7116,   7117,   7117],
                       [154961, 154961, 154961, 154961, 154961, 154961,  47407,
                        179816, 263937, 263951, 263952,  82941, 192426, 223714,
                        237599, 255652, 255666, 255667, 304242, 328345, 328346,
                         38644, 179816, 247367, 247381, 247382,  22401, 113687,
                         22401, 113687, 146289,  22401, 113687]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=33, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 33
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.12s/it]
epoch:  4 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5398,   5444,   5459,   5462,   5473,   5478,   5504,
                          5504,   5504,   5504,   5504,   5831,   5831,   5831,
                          5831,   5831,   5831,   5831,   5831,   5831,   5831,
                          5982,   5982,   5982,   5982,   5982,   7102,   7102,
                          7116,   7116,   7116,   7117,   7117],
                       [154961, 154961, 154961, 154961, 154961, 154961,  47407,
                        179816, 263937, 263951, 263952,  82941, 192426, 223714,
                        237599, 255652, 255666, 255667, 304242, 328345, 328346,
                         38644, 179816, 247367, 247381, 247382,  22401, 113687,
                         22401, 113687, 146289,  22401, 113687]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=33, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 33
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5398,   5444,   5459,   5462,   5473,   5478,   5504,
                          5504,   5504,   5504,   5504,   5831,   5831,   5831,
                          5831,   5831,   5831,   5831,   5831,   5831,   5831,
                          5982,   5982,   5982,   5982,   5982,   7102,   7102,
                          7116,   7116,   7116,   7117,   7117],
                       [154961, 154961, 154961, 154961, 154961, 154961,  47407,
                        179816, 263937, 263951, 263952,  82941, 192426, 223714,
                        237599, 255652, 255666, 255667, 304242, 328345, 328346,
                         38644, 179816, 247367, 247381, 247382,  22401, 113687,
                         22401, 113687, 146289,  22401, 113687]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=33, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 33
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:28<00:12,  4.12s/it]
epoch:  6 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5398,   5444,   5459,   5462,   5473,   5478,   5504,
                          5504,   5504,   5504,   5504,   5831,   5831,   5831,
                          5831,   5831,   5831,   5831,   5831,   5831,   5831,
                          5982,   5982,   5982,   5982,   5982,   7102,   7102,
                          7116,   7116,   7116,   7117,   7117],
                       [154961, 154961, 154961, 154961, 154961, 154961,  47407,
                        179816, 263937, 263951, 263952,  82941, 192426, 223714,
                        237599, 255652, 255666, 255667, 304242, 328345, 328346,
                         38644, 179816, 247367, 247381, 247382,  22401, 113687,
                         22401, 113687, 146289,  22401, 113687]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=33, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 33
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:32<00:08,  4.13s/it]
masked_hor: tensor(indices=tensor([[  5398,   5444,   5459,   5462,   5473,   5478,   5504,
                          5504,   5504,   5504,   5504,   5831,   5831,   5831,
                          5831,   5831,   5831,   5831,   5831,   5831,   5831,
                          5982,   5982,   5982,   5982,   5982,   7102,   7102,
                          7116,   7116,   7116,   7117,   7117],
                       [154961, 154961, 154961, 154961, 154961, 154961,  47407,
                        179816, 263937, 263951, 263952,  82941, 192426, 223714,
                        237599, 255652, 255666, 255667, 304242, 328345, 328346,
                         38644, 179816, 247367, 247381, 247382,  22401, 113687,
                         22401, 113687, 146289,  22401, 113687]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=33, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 33
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.13s/it]
epoch:  8 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5398,   5444,   5459,   5462,   5473,   5478,   5504,
                          5504,   5504,   5504,   5504,   5831,   5831,   5831,
                          5831,   5831,   5831,   5831,   5831,   5831,   5831,
                          5982,   5982,   5982,   5982,   5982,   7102,   7102,
                          7116,   7116,   7116,   7117,   7117],
                       [154961, 154961, 154961, 154961, 154961, 154961,  47407,
                        179816, 263937, 263951, 263952,  82941, 192426, 223714,
                        237599, 255652, 255666, 255667, 304242, 328345, 328346,
                         38644, 179816, 247367, 247381, 247382,  22401, 113687,
                         22401, 113687, 146289,  22401, 113687]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=33, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 33
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

100%|##########| 10/10 [00:41<00:00,  4.12s/it]
train modality
node_idx: 5839 belonging to  2
14
start training
masked_hor: tensor(indices=tensor([[  5504,   5504,   5504,   5839,   5839,   5839,   5839,
                          5839,   5839,   5839,   5839,   5985,   5985,   7169],
                       [ 47410, 179824, 264004,  82917, 194451, 223761, 237605,
                        255719, 304245, 328345, 328346,  38644, 179824,  22409]]),
       values=tensor([0.7553, 0.7405, 0.7481, 0.7478, 0.6401, 0.7170, 0.8623,
                      0.6811, 0.7640, 0.3752, 0.3845, 0.7868, 0.8053, 0.5894]),
       size=(8285, 753935), nnz=14, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([0.7553, 0.7405, 0.7481, 0.7478, 0.6401, 0.7170, 0.8623, 0.6811, 0.7640,
        0.7505, 0.7689, 0.7868, 0.8053, 0.5894], grad_fn=<IndexBackward0>)
num_high 14 original num_nodes 14
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(0.9896, grad_fn=<AddBackward0>)
size_num_loss 1.0
  0%|          | 0/10 [00:00<?, ?it/s]
epoch:  0 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5504,   5504,   5504,   5839,   5839,   5839,   5839,
                          5839,   5839,   5839,   5839,   5985,   5985,   7169],
                       [ 47410, 179824, 264004,  82917, 194451, 223761, 237605,
                        255719, 304245, 328345, 328346,  38644, 179824,  22409]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=14, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 14
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.16s/it]
masked_hor: tensor(indices=tensor([[  5504,   5504,   5504,   5839,   5839,   5839,   5839,
                          5839,   5839,   5839,   5839,   5985,   5985,   7169],
                       [ 47410, 179824, 264004,  82917, 194451, 223761, 237605,
                        255719, 304245, 328345, 328346,  38644, 179824,  22409]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=14, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 14
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:33,  4.14s/it]
epoch:  2 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5504,   5504,   5504,   5839,   5839,   5839,   5839,
                          5839,   5839,   5839,   5839,   5985,   5985,   7169],
                       [ 47410, 179824, 264004,  82917, 194451, 223761, 237605,
                        255719, 304245, 328345, 328346,  38644, 179824,  22409]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=14, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 14
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:28,  4.13s/it]
masked_hor: tensor(indices=tensor([[  5504,   5504,   5504,   5839,   5839,   5839,   5839,
                          5839,   5839,   5839,   5839,   5985,   5985,   7169],
                       [ 47410, 179824, 264004,  82917, 194451, 223761, 237605,
                        255719, 304245, 328345, 328346,  38644, 179824,  22409]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=14, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 14
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.13s/it]
epoch:  4 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5504,   5504,   5504,   5839,   5839,   5839,   5839,
                          5839,   5839,   5839,   5839,   5985,   5985,   7169],
                       [ 47410, 179824, 264004,  82917, 194451, 223761, 237605,
                        255719, 304245, 328345, 328346,  38644, 179824,  22409]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=14, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 14
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)


 60%|######    | 6/10 [00:24<00:16,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5504,   5504,   5504,   5839,   5839,   5839,   5839,
                          5839,   5839,   5839,   5839,   5985,   5985,   7169],
                       [ 47410, 179824, 264004,  82917, 194451, 223761, 237605,
                        255719, 304245, 328345, 328346,  38644, 179824,  22409]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=14, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 14
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:28<00:12,  4.13s/it]
epoch:  6 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5504,   5504,   5504,   5839,   5839,   5839,   5839,
                          5839,   5839,   5839,   5839,   5985,   5985,   7169],
                       [ 47410, 179824, 264004,  82917, 194451, 223761, 237605,
                        255719, 304245, 328345, 328346,  38644, 179824,  22409]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=14, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 14
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:33<00:08,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5504,   5504,   5504,   5839,   5839,   5839,   5839,
                          5839,   5839,   5839,   5839,   5985,   5985,   7169],
                       [ 47410, 179824, 264004,  82917, 194451, 223761, 237605,
                        255719, 304245, 328345, 328346,  38644, 179824,  22409]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=14, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 14
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.12s/it]
epoch:  8 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5504,   5504,   5504,   5839,   5839,   5839,   5839,
                          5839,   5839,   5839,   5839,   5985,   5985,   7169],
                       [ 47410, 179824, 264004,  82917, 194451, 223761, 237605,
                        255719, 304245, 328345, 328346,  38644, 179824,  22409]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=14, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 14
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

100%|##########| 10/10 [00:41<00:00,  4.14s/it]
train modality
node_idx: 5755 belonging to  2
  0%|          | 0/10 [00:00<?, ?it/s]
207
start training
masked_hor: tensor(indices=tensor([[  5360,   5439,   5439,   5439,   5444,   5444,   5463,
                          5463,   5463,   5471,   5471,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          6821,   6821,   6821,   6821,   6821,   6961,   6961,
                          6961,   6961,   6961,   6962,   6962,   6962,   6962,
                          6962,   6964,   6964,   6964,   6964,   6964,   6964,
                          7037,   7037,   7037,   7037,   7037,   7037,   7051,
                          7051,   7055,   7055,   7055,   7055,   7088,   7088,
                          7102,   7102,   7121,   7121,   7121,   7121,   7121,
                          7121,   7753,   7753,   7753,   7753,   7753,   7777,
                          7777,   7777,   7777,   7778,   7778,   7778,   7778,
                          7778,   7779,   7779,   7779,   7904,   7904,   7904,
                          7904,   7904,   7904,   7950,   7950,   7950,   7950,
                          7950,   7962,   7962,   7962,   7962,   7969,   7969,
                          7969,   7969,   7969,   8009,   8009,   8016,   8016,
                          8016,   8016,   8017,   8017,   8017,   8017,   8026,
                          8026,   8026,   8026,   8026],
                       [154885,  63942,  63949, 154885,  63949, 154885,  63942,
                         63949, 154885,  63949, 154885,  47372,  47379, 179740,
                        263656, 263796, 263797, 263799, 263872, 263886, 263890,
                        263923, 263937, 263956, 264588, 264612, 264613, 264614,
                        264739, 264785, 264797, 264804, 264844, 264851, 264852,
                        264861,  82929, 193174, 223786, 237542, 255371, 255511,
                        255512, 255514, 255587, 255601, 255605, 255638, 255652,
                        255671, 256303, 256327, 256328, 256329, 256454, 256500,
                        256512, 256519, 256559, 256566, 256567, 256576, 304207,
                        304214, 328345, 328346,  38644, 146284, 146308, 179740,
                        247086, 247226, 247227, 247229, 247302, 247316, 247320,
                        247367, 247386, 248018, 248042, 248043, 248044, 248169,
                        248215, 248227, 248234, 248274, 248281, 248282, 248291,
                         38644, 146284, 146289, 146308, 146316, 179740, 247226,
                        247227, 247229, 247302, 247386, 248018, 248042, 248043,
                        248044, 248169, 248215, 248227, 248234, 248282, 248291,
                         22325, 113652, 146289, 146308, 146316,  22325, 113652,
                        113659, 146308, 146316,  22325, 113652, 113659, 146308,
                        146316,  22325, 113652, 113659, 146205, 146308, 146316,
                         22325, 113652, 113659, 146289, 146308, 146316,  22325,
                        113652,  22325, 113652, 146308, 146316,  22325, 146308,
                         22325, 113652,  22325, 113652, 113659, 146205, 146308,
                        146316,  22325, 113652, 113659, 146308, 146316,  22325,
                        113652, 113659, 146316,  22325, 113652, 113659, 146308,
                        146316,  22325, 113652, 113659,  22325, 113652, 113659,
                        146284, 146308, 146316,  22325, 113652, 113659, 146205,
                        146308,  22325, 113652, 113659, 146308,  22325, 113652,
                        113659, 146308, 146316,  22325, 113652,  22325, 113652,
                        146205, 146308,  22325, 113652, 113659, 146316,  22325,
                        113652, 113659, 146205, 146308]]),
       values=tensor([0.7666, 0.3794, 0.3741, 0.6885, 0.7440, 0.7065, 0.3651,
                      0.3495, 0.7163, 0.7617, 0.7234, 0.3515, 0.3584, 0.7201,
                      0.0325, 0.0339, 0.0346, 0.0331, 0.0328, 0.0336, 0.0326,
                      0.0342, 0.0339, 0.0346, 0.0343, 0.0343, 0.0338, 0.0344,
                      0.0330, 0.0333, 0.0330, 0.0340, 0.0320, 0.0324, 0.0330,
                      0.0347, 0.7372, 0.7228, 0.7369, 0.7158, 0.0318, 0.0341,
                      0.0324, 0.0327, 0.0321, 0.0350, 0.0321, 0.0328, 0.0324,
                      0.0326, 0.0333, 0.0337, 0.0328, 0.0342, 0.0325, 0.0326,
                      0.0320, 0.0333, 0.0332, 0.0338, 0.0331, 0.0348, 0.3538,
                      0.3785, 0.3790, 0.3736, 0.7717, 0.3705, 0.3689, 0.7272,
                      0.0338, 0.0360, 0.0347, 0.0353, 0.0349, 0.0352, 0.0353,
                      0.0342, 0.0327, 0.0341, 0.0348, 0.0345, 0.0335, 0.0343,
                      0.0353, 0.0353, 0.0358, 0.0349, 0.0355, 0.0344, 0.0338,
                      0.7426, 0.1741, 0.1787, 0.1890, 0.1851, 0.6799, 0.0494,
                      0.0497, 0.0488, 0.0496, 0.0495, 0.0501, 0.0482, 0.0485,
                      0.0497, 0.0493, 0.0490, 0.0491, 0.0503, 0.0487, 0.0483,
                      0.7020, 0.7291, 0.2398, 0.2467, 0.2483, 0.7328, 0.3617,
                      0.3706, 0.3654, 0.3678, 0.7336, 0.3728, 0.3758, 0.3688,
                      0.3724, 0.7389, 0.3834, 0.3751, 0.2341, 0.2362, 0.2428,
                      0.7615, 0.3718, 0.3710, 0.2508, 0.2438, 0.2316, 0.7486,
                      0.7237, 0.7505, 0.7176, 0.3716, 0.3559, 0.7492, 0.7612,
                      0.7582, 0.7362, 0.7270, 0.3583, 0.3665, 0.2459, 0.2498,
                      0.2407, 0.7609, 0.3403, 0.3615, 0.3537, 0.3732, 0.6928,
                      0.3677, 0.3658, 0.7243, 0.7366, 0.3584, 0.3672, 0.3547,
                      0.3495, 0.7564, 0.3776, 0.3660, 0.7001, 0.3727, 0.3729,
                      0.2561, 0.2439, 0.2445, 0.7152, 0.3635, 0.3563, 0.3496,
                      0.3543, 0.7208, 0.3605, 0.3505, 0.6922, 0.7335, 0.3752,
                      0.3601, 0.3722, 0.3687, 0.7150, 0.7109, 0.7214, 0.7195,
                      0.3670, 0.3697, 0.7282, 0.3652, 0.3616, 0.7514, 0.6953,
                      0.3796, 0.3685, 0.3606, 0.3753]),
       size=(8285, 753935), nnz=207, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([0.7666, 0.7588, 0.7481, 0.6885, 0.7440, 0.7065, 0.7302, 0.6989, 0.7163,
        0.7617, 0.7234, 0.7031, 0.7168, 0.7201, 0.7159, 0.7455, 0.7616, 0.7280,
        0.7213, 0.7395, 0.7162, 0.7514, 0.7463, 0.7623, 0.7551, 0.7554, 0.7427,
        0.7561, 0.7266, 0.7319, 0.7262, 0.7473, 0.7035, 0.7139, 0.7267, 0.7629,
        0.7372, 0.7228, 0.7369, 0.7158, 0.6999, 0.7499, 0.7137, 0.7193, 0.7057,
        0.7701, 0.7065, 0.7215, 0.7130, 0.7182, 0.7326, 0.7411, 0.7215, 0.7535,
        0.7150, 0.7166, 0.7031, 0.7318, 0.7298, 0.7439, 0.7292, 0.7652, 0.7076,
        0.7569, 0.7581, 0.7473, 0.7717, 0.7410, 0.7377, 0.7272, 0.7102, 0.7550,
        0.7277, 0.7411, 0.7322, 0.7392, 0.7420, 0.7185, 0.6864, 0.7163, 0.7313,
        0.7245, 0.7044, 0.7196, 0.7413, 0.7411, 0.7525, 0.7321, 0.7452, 0.7217,
        0.7103, 0.7426, 0.6965, 0.7148, 0.7561, 0.7403, 0.6799, 0.7404, 0.7459,
        0.7316, 0.7433, 0.7422, 0.7512, 0.7223, 0.7275, 0.7454, 0.7388, 0.7345,
        0.7361, 0.7549, 0.7310, 0.7252, 0.7020, 0.7291, 0.7193, 0.7402, 0.7449,
        0.7328, 0.7235, 0.7411, 0.7308, 0.7357, 0.7336, 0.7456, 0.7517, 0.7376,
        0.7447, 0.7389, 0.7667, 0.7502, 0.7024, 0.7087, 0.7284, 0.7615, 0.7435,
        0.7420, 0.7525, 0.7314, 0.6948, 0.7486, 0.7237, 0.7505, 0.7176, 0.7432,
        0.7119, 0.7492, 0.7612, 0.7582, 0.7362, 0.7270, 0.7167, 0.7331, 0.7377,
        0.7493, 0.7220, 0.7609, 0.6805, 0.7229, 0.7073, 0.7465, 0.6928, 0.7355,
        0.7315, 0.7243, 0.7366, 0.7167, 0.7344, 0.7094, 0.6990, 0.7564, 0.7552,
        0.7321, 0.7001, 0.7454, 0.7458, 0.7684, 0.7318, 0.7334, 0.7152, 0.7270,
        0.7127, 0.6992, 0.7085, 0.7208, 0.7209, 0.7011, 0.6922, 0.7335, 0.7504,
        0.7202, 0.7444, 0.7373, 0.7150, 0.7109, 0.7214, 0.7195, 0.7340, 0.7395,
        0.7282, 0.7304, 0.7233, 0.7514, 0.6953, 0.7592, 0.7370, 0.7213, 0.7506],
       grad_fn=<IndexBackward0>)
num_high 207 original num_nodes 207
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(15.1344, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.14s/it]
epoch:  0 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5360,   5439,   5439,   5439,   5444,   5444,   5463,
                          5463,   5463,   5471,   5471,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          6821,   6821,   6821,   6821,   6821,   6961,   6961,
                          6961,   6961,   6961,   6962,   6962,   6962,   6962,
                          6962,   6964,   6964,   6964,   6964,   6964,   6964,
                          7037,   7037,   7037,   7037,   7037,   7037,   7051,
                          7051,   7055,   7055,   7055,   7055,   7088,   7088,
                          7102,   7102,   7121,   7121,   7121,   7121,   7121,
                          7121,   7753,   7753,   7753,   7753,   7753,   7777,
                          7777,   7777,   7777,   7778,   7778,   7778,   7778,
                          7778,   7779,   7779,   7779,   7904,   7904,   7904,
                          7904,   7904,   7904,   7950,   7950,   7950,   7950,
                          7950,   7962,   7962,   7962,   7962,   7969,   7969,
                          7969,   7969,   7969,   8009,   8009,   8016,   8016,
                          8016,   8016,   8017,   8017,   8017,   8017,   8026,
                          8026,   8026,   8026,   8026],
                       [154885,  63942,  63949, 154885,  63949, 154885,  63942,
                         63949, 154885,  63949, 154885,  47372,  47379, 179740,
                        263656, 263796, 263797, 263799, 263872, 263886, 263890,
                        263923, 263937, 263956, 264588, 264612, 264613, 264614,
                        264739, 264785, 264797, 264804, 264844, 264851, 264852,
                        264861,  82929, 193174, 223786, 237542, 255371, 255511,
                        255512, 255514, 255587, 255601, 255605, 255638, 255652,
                        255671, 256303, 256327, 256328, 256329, 256454, 256500,
                        256512, 256519, 256559, 256566, 256567, 256576, 304207,
                        304214, 328345, 328346,  38644, 146284, 146308, 179740,
                        247086, 247226, 247227, 247229, 247302, 247316, 247320,
                        247367, 247386, 248018, 248042, 248043, 248044, 248169,
                        248215, 248227, 248234, 248274, 248281, 248282, 248291,
                         38644, 146284, 146289, 146308, 146316, 179740, 247226,
                        247227, 247229, 247302, 247386, 248018, 248042, 248043,
                        248044, 248169, 248215, 248227, 248234, 248282, 248291,
                         22325, 113652, 146289, 146308, 146316,  22325, 113652,
                        113659, 146308, 146316,  22325, 113652, 113659, 146308,
                        146316,  22325, 113652, 113659, 146205, 146308, 146316,
                         22325, 113652, 113659, 146289, 146308, 146316,  22325,
                        113652,  22325, 113652, 146308, 146316,  22325, 146308,
                         22325, 113652,  22325, 113652, 113659, 146205, 146308,
                        146316,  22325, 113652, 113659, 146308, 146316,  22325,
                        113652, 113659, 146316,  22325, 113652, 113659, 146308,
                        146316,  22325, 113652, 113659,  22325, 113652, 113659,
                        146284, 146308, 146316,  22325, 113652, 113659, 146205,
                        146308,  22325, 113652, 113659, 146308,  22325, 113652,
                        113659, 146308, 146316,  22325, 113652,  22325, 113652,
                        146205, 146308,  22325, 113652, 113659, 146316,  22325,
                        113652, 113659, 146205, 146308]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=207, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 207
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:33,  4.14s/it]
masked_hor: tensor(indices=tensor([[  5360,   5439,   5439,   5439,   5444,   5444,   5463,
                          5463,   5463,   5471,   5471,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          6821,   6821,   6821,   6821,   6821,   6961,   6961,
                          6961,   6961,   6961,   6962,   6962,   6962,   6962,
                          6962,   6964,   6964,   6964,   6964,   6964,   6964,
                          7037,   7037,   7037,   7037,   7037,   7037,   7051,
                          7051,   7055,   7055,   7055,   7055,   7088,   7088,
                          7102,   7102,   7121,   7121,   7121,   7121,   7121,
                          7121,   7753,   7753,   7753,   7753,   7753,   7777,
                          7777,   7777,   7777,   7778,   7778,   7778,   7778,
                          7778,   7779,   7779,   7779,   7904,   7904,   7904,
                          7904,   7904,   7904,   7950,   7950,   7950,   7950,
                          7950,   7962,   7962,   7962,   7962,   7969,   7969,
                          7969,   7969,   7969,   8009,   8009,   8016,   8016,
                          8016,   8016,   8017,   8017,   8017,   8017,   8026,
                          8026,   8026,   8026,   8026],
                       [154885,  63942,  63949, 154885,  63949, 154885,  63942,
                         63949, 154885,  63949, 154885,  47372,  47379, 179740,
                        263656, 263796, 263797, 263799, 263872, 263886, 263890,
                        263923, 263937, 263956, 264588, 264612, 264613, 264614,
                        264739, 264785, 264797, 264804, 264844, 264851, 264852,
                        264861,  82929, 193174, 223786, 237542, 255371, 255511,
                        255512, 255514, 255587, 255601, 255605, 255638, 255652,
                        255671, 256303, 256327, 256328, 256329, 256454, 256500,
                        256512, 256519, 256559, 256566, 256567, 256576, 304207,
                        304214, 328345, 328346,  38644, 146284, 146308, 179740,
                        247086, 247226, 247227, 247229, 247302, 247316, 247320,
                        247367, 247386, 248018, 248042, 248043, 248044, 248169,
                        248215, 248227, 248234, 248274, 248281, 248282, 248291,
                         38644, 146284, 146289, 146308, 146316, 179740, 247226,
                        247227, 247229, 247302, 247386, 248018, 248042, 248043,
                        248044, 248169, 248215, 248227, 248234, 248282, 248291,
                         22325, 113652, 146289, 146308, 146316,  22325, 113652,
                        113659, 146308, 146316,  22325, 113652, 113659, 146308,
                        146316,  22325, 113652, 113659, 146205, 146308, 146316,
                         22325, 113652, 113659, 146289, 146308, 146316,  22325,
                        113652,  22325, 113652, 146308, 146316,  22325, 146308,
                         22325, 113652,  22325, 113652, 113659, 146205, 146308,
                        146316,  22325, 113652, 113659, 146308, 146316,  22325,
                        113652, 113659, 146316,  22325, 113652, 113659, 146308,
                        146316,  22325, 113652, 113659,  22325, 113652, 113659,
                        146284, 146308, 146316,  22325, 113652, 113659, 146205,
                        146308,  22325, 113652, 113659, 146308,  22325, 113652,
                        113659, 146308, 146316,  22325, 113652,  22325, 113652,
                        146205, 146308,  22325, 113652, 113659, 146316,  22325,
                        113652, 113659, 146205, 146308]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=207, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 207
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)
size_num_loss 0.0
epoch:  2 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5360,   5439,   5439,   5439,   5444,   5444,   5463,
                          5463,   5463,   5471,   5471,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          6821,   6821,   6821,   6821,   6821,   6961,   6961,
                          6961,   6961,   6961,   6962,   6962,   6962,   6962,
                          6962,   6964,   6964,   6964,   6964,   6964,   6964,
                          7037,   7037,   7037,   7037,   7037,   7037,   7051,
                          7051,   7055,   7055,   7055,   7055,   7088,   7088,
                          7102,   7102,   7121,   7121,   7121,   7121,   7121,
                          7121,   7753,   7753,   7753,   7753,   7753,   7777,
                          7777,   7777,   7777,   7778,   7778,   7778,   7778,
                          7778,   7779,   7779,   7779,   7904,   7904,   7904,
                          7904,   7904,   7904,   7950,   7950,   7950,   7950,
                          7950,   7962,   7962,   7962,   7962,   7969,   7969,
                          7969,   7969,   7969,   8009,   8009,   8016,   8016,
                          8016,   8016,   8017,   8017,   8017,   8017,   8026,
                          8026,   8026,   8026,   8026],
                       [154885,  63942,  63949, 154885,  63949, 154885,  63942,
                         63949, 154885,  63949, 154885,  47372,  47379, 179740,
                        263656, 263796, 263797, 263799, 263872, 263886, 263890,
                        263923, 263937, 263956, 264588, 264612, 264613, 264614,
                        264739, 264785, 264797, 264804, 264844, 264851, 264852,
                        264861,  82929, 193174, 223786, 237542, 255371, 255511,
                        255512, 255514, 255587, 255601, 255605, 255638, 255652,
                        255671, 256303, 256327, 256328, 256329, 256454, 256500,
                        256512, 256519, 256559, 256566, 256567, 256576, 304207,
                        304214, 328345, 328346,  38644, 146284, 146308, 179740,
                        247086, 247226, 247227, 247229, 247302, 247316, 247320,
                        247367, 247386, 248018, 248042, 248043, 248044, 248169,
                        248215, 248227, 248234, 248274, 248281, 248282, 248291,
                         38644, 146284, 146289, 146308, 146316, 179740, 247226,
                        247227, 247229, 247302, 247386, 248018, 248042, 248043,
                        248044, 248169, 248215, 248227, 248234, 248282, 248291,
                         22325, 113652, 146289, 146308, 146316,  22325, 113652,
                        113659, 146308, 146316,  22325, 113652, 113659, 146308,
                        146316,  22325, 113652, 113659, 146205, 146308, 146316,
                         22325, 113652, 113659, 146289, 146308, 146316,  22325,
                        113652,  22325, 113652, 146308, 146316,  22325, 146308,
                         22325, 113652,  22325, 113652, 113659, 146205, 146308,
                        146316,  22325, 113652, 113659, 146308, 146316,  22325,
                        113652, 113659, 146316,  22325, 113652, 113659, 146308,
                        146316,  22325, 113652, 113659,  22325, 113652, 113659,
                        146284, 146308, 146316,  22325, 113652, 113659, 146205,
                        146308,  22325, 113652, 113659, 146308,  22325, 113652,
                        113659, 146308, 146316,  22325, 113652,  22325, 113652,
                        146205, 146308,  22325, 113652, 113659, 146316,  22325,
                        113652, 113659, 146205, 146308]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=207, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 207
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:29,  4.15s/it]
masked_hor: tensor(indices=tensor([[  5360,   5439,   5439,   5439,   5444,   5444,   5463,
                          5463,   5463,   5471,   5471,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          6821,   6821,   6821,   6821,   6821,   6961,   6961,
                          6961,   6961,   6961,   6962,   6962,   6962,   6962,
                          6962,   6964,   6964,   6964,   6964,   6964,   6964,
                          7037,   7037,   7037,   7037,   7037,   7037,   7051,
                          7051,   7055,   7055,   7055,   7055,   7088,   7088,
                          7102,   7102,   7121,   7121,   7121,   7121,   7121,
                          7121,   7753,   7753,   7753,   7753,   7753,   7777,
                          7777,   7777,   7777,   7778,   7778,   7778,   7778,
                          7778,   7779,   7779,   7779,   7904,   7904,   7904,
                          7904,   7904,   7904,   7950,   7950,   7950,   7950,
                          7950,   7962,   7962,   7962,   7962,   7969,   7969,
                          7969,   7969,   7969,   8009,   8009,   8016,   8016,
                          8016,   8016,   8017,   8017,   8017,   8017,   8026,
                          8026,   8026,   8026,   8026],
                       [154885,  63942,  63949, 154885,  63949, 154885,  63942,
                         63949, 154885,  63949, 154885,  47372,  47379, 179740,
                        263656, 263796, 263797, 263799, 263872, 263886, 263890,
                        263923, 263937, 263956, 264588, 264612, 264613, 264614,
                        264739, 264785, 264797, 264804, 264844, 264851, 264852,
                        264861,  82929, 193174, 223786, 237542, 255371, 255511,
                        255512, 255514, 255587, 255601, 255605, 255638, 255652,
                        255671, 256303, 256327, 256328, 256329, 256454, 256500,
                        256512, 256519, 256559, 256566, 256567, 256576, 304207,
                        304214, 328345, 328346,  38644, 146284, 146308, 179740,
                        247086, 247226, 247227, 247229, 247302, 247316, 247320,
                        247367, 247386, 248018, 248042, 248043, 248044, 248169,
                        248215, 248227, 248234, 248274, 248281, 248282, 248291,
                         38644, 146284, 146289, 146308, 146316, 179740, 247226,
                        247227, 247229, 247302, 247386, 248018, 248042, 248043,
                        248044, 248169, 248215, 248227, 248234, 248282, 248291,
                         22325, 113652, 146289, 146308, 146316,  22325, 113652,
                        113659, 146308, 146316,  22325, 113652, 113659, 146308,
                        146316,  22325, 113652, 113659, 146205, 146308, 146316,
                         22325, 113652, 113659, 146289, 146308, 146316,  22325,
                        113652,  22325, 113652, 146308, 146316,  22325, 146308,
                         22325, 113652,  22325, 113652, 113659, 146205, 146308,
                        146316,  22325, 113652, 113659, 146308, 146316,  22325,
                        113652, 113659, 146316,  22325, 113652, 113659, 146308,
                        146316,  22325, 113652, 113659,  22325, 113652, 113659,
                        146284, 146308, 146316,  22325, 113652, 113659, 146205,
                        146308,  22325, 113652, 113659, 146308,  22325, 113652,
                        113659, 146308, 146316,  22325, 113652,  22325, 113652,
                        146205, 146308,  22325, 113652, 113659, 146316,  22325,
                        113652, 113659, 146205, 146308]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=207, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 207
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.14s/it]
epoch:  4 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5360,   5439,   5439,   5439,   5444,   5444,   5463,
                          5463,   5463,   5471,   5471,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          6821,   6821,   6821,   6821,   6821,   6961,   6961,
                          6961,   6961,   6961,   6962,   6962,   6962,   6962,
                          6962,   6964,   6964,   6964,   6964,   6964,   6964,
                          7037,   7037,   7037,   7037,   7037,   7037,   7051,
                          7051,   7055,   7055,   7055,   7055,   7088,   7088,
                          7102,   7102,   7121,   7121,   7121,   7121,   7121,
                          7121,   7753,   7753,   7753,   7753,   7753,   7777,
                          7777,   7777,   7777,   7778,   7778,   7778,   7778,
                          7778,   7779,   7779,   7779,   7904,   7904,   7904,
                          7904,   7904,   7904,   7950,   7950,   7950,   7950,
                          7950,   7962,   7962,   7962,   7962,   7969,   7969,
                          7969,   7969,   7969,   8009,   8009,   8016,   8016,
                          8016,   8016,   8017,   8017,   8017,   8017,   8026,
                          8026,   8026,   8026,   8026],
                       [154885,  63942,  63949, 154885,  63949, 154885,  63942,
                         63949, 154885,  63949, 154885,  47372,  47379, 179740,
                        263656, 263796, 263797, 263799, 263872, 263886, 263890,
                        263923, 263937, 263956, 264588, 264612, 264613, 264614,
                        264739, 264785, 264797, 264804, 264844, 264851, 264852,
                        264861,  82929, 193174, 223786, 237542, 255371, 255511,
                        255512, 255514, 255587, 255601, 255605, 255638, 255652,
                        255671, 256303, 256327, 256328, 256329, 256454, 256500,
                        256512, 256519, 256559, 256566, 256567, 256576, 304207,
                        304214, 328345, 328346,  38644, 146284, 146308, 179740,
                        247086, 247226, 247227, 247229, 247302, 247316, 247320,
                        247367, 247386, 248018, 248042, 248043, 248044, 248169,
                        248215, 248227, 248234, 248274, 248281, 248282, 248291,
                         38644, 146284, 146289, 146308, 146316, 179740, 247226,
                        247227, 247229, 247302, 247386, 248018, 248042, 248043,
                        248044, 248169, 248215, 248227, 248234, 248282, 248291,
                         22325, 113652, 146289, 146308, 146316,  22325, 113652,
                        113659, 146308, 146316,  22325, 113652, 113659, 146308,
                        146316,  22325, 113652, 113659, 146205, 146308, 146316,
                         22325, 113652, 113659, 146289, 146308, 146316,  22325,
                        113652,  22325, 113652, 146308, 146316,  22325, 146308,
                         22325, 113652,  22325, 113652, 113659, 146205, 146308,
                        146316,  22325, 113652, 113659, 146308, 146316,  22325,
                        113652, 113659, 146316,  22325, 113652, 113659, 146308,
                        146316,  22325, 113652, 113659,  22325, 113652, 113659,
                        146284, 146308, 146316,  22325, 113652, 113659, 146205,
                        146308,  22325, 113652, 113659, 146308,  22325, 113652,
                        113659, 146308, 146316,  22325, 113652,  22325, 113652,
                        146205, 146308,  22325, 113652, 113659, 146316,  22325,
                        113652, 113659, 146205, 146308]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=207, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 207
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.15s/it]
masked_hor: tensor(indices=tensor([[  5360,   5439,   5439,   5439,   5444,   5444,   5463,
                          5463,   5463,   5471,   5471,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          6821,   6821,   6821,   6821,   6821,   6961,   6961,
                          6961,   6961,   6961,   6962,   6962,   6962,   6962,
                          6962,   6964,   6964,   6964,   6964,   6964,   6964,
                          7037,   7037,   7037,   7037,   7037,   7037,   7051,
                          7051,   7055,   7055,   7055,   7055,   7088,   7088,
                          7102,   7102,   7121,   7121,   7121,   7121,   7121,
                          7121,   7753,   7753,   7753,   7753,   7753,   7777,
                          7777,   7777,   7777,   7778,   7778,   7778,   7778,
                          7778,   7779,   7779,   7779,   7904,   7904,   7904,
                          7904,   7904,   7904,   7950,   7950,   7950,   7950,
                          7950,   7962,   7962,   7962,   7962,   7969,   7969,
                          7969,   7969,   7969,   8009,   8009,   8016,   8016,
                          8016,   8016,   8017,   8017,   8017,   8017,   8026,
                          8026,   8026,   8026,   8026],
                       [154885,  63942,  63949, 154885,  63949, 154885,  63942,
                         63949, 154885,  63949, 154885,  47372,  47379, 179740,
                        263656, 263796, 263797, 263799, 263872, 263886, 263890,
                        263923, 263937, 263956, 264588, 264612, 264613, 264614,
                        264739, 264785, 264797, 264804, 264844, 264851, 264852,
                        264861,  82929, 193174, 223786, 237542, 255371, 255511,
                        255512, 255514, 255587, 255601, 255605, 255638, 255652,
                        255671, 256303, 256327, 256328, 256329, 256454, 256500,
                        256512, 256519, 256559, 256566, 256567, 256576, 304207,
                        304214, 328345, 328346,  38644, 146284, 146308, 179740,
                        247086, 247226, 247227, 247229, 247302, 247316, 247320,
                        247367, 247386, 248018, 248042, 248043, 248044, 248169,
                        248215, 248227, 248234, 248274, 248281, 248282, 248291,
                         38644, 146284, 146289, 146308, 146316, 179740, 247226,
                        247227, 247229, 247302, 247386, 248018, 248042, 248043,
                        248044, 248169, 248215, 248227, 248234, 248282, 248291,
                         22325, 113652, 146289, 146308, 146316,  22325, 113652,
                        113659, 146308, 146316,  22325, 113652, 113659, 146308,
                        146316,  22325, 113652, 113659, 146205, 146308, 146316,
                         22325, 113652, 113659, 146289, 146308, 146316,  22325,
                        113652,  22325, 113652, 146308, 146316,  22325, 146308,
                         22325, 113652,  22325, 113652, 113659, 146205, 146308,
                        146316,  22325, 113652, 113659, 146308, 146316,  22325,
                        113652, 113659, 146316,  22325, 113652, 113659, 146308,
                        146316,  22325, 113652, 113659,  22325, 113652, 113659,
                        146284, 146308, 146316,  22325, 113652, 113659, 146205,
                        146308,  22325, 113652, 113659, 146308,  22325, 113652,
                        113659, 146308, 146316,  22325, 113652,  22325, 113652,
                        146205, 146308,  22325, 113652, 113659, 146316,  22325,
                        113652, 113659, 146205, 146308]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=207, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 207
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.14s/it]
epoch:  6 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5360,   5439,   5439,   5439,   5444,   5444,   5463,
                          5463,   5463,   5471,   5471,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          6821,   6821,   6821,   6821,   6821,   6961,   6961,
                          6961,   6961,   6961,   6962,   6962,   6962,   6962,
                          6962,   6964,   6964,   6964,   6964,   6964,   6964,
                          7037,   7037,   7037,   7037,   7037,   7037,   7051,
                          7051,   7055,   7055,   7055,   7055,   7088,   7088,
                          7102,   7102,   7121,   7121,   7121,   7121,   7121,
                          7121,   7753,   7753,   7753,   7753,   7753,   7777,
                          7777,   7777,   7777,   7778,   7778,   7778,   7778,
                          7778,   7779,   7779,   7779,   7904,   7904,   7904,
                          7904,   7904,   7904,   7950,   7950,   7950,   7950,
                          7950,   7962,   7962,   7962,   7962,   7969,   7969,
                          7969,   7969,   7969,   8009,   8009,   8016,   8016,
                          8016,   8016,   8017,   8017,   8017,   8017,   8026,
                          8026,   8026,   8026,   8026],
                       [154885,  63942,  63949, 154885,  63949, 154885,  63942,
                         63949, 154885,  63949, 154885,  47372,  47379, 179740,
                        263656, 263796, 263797, 263799, 263872, 263886, 263890,
                        263923, 263937, 263956, 264588, 264612, 264613, 264614,
                        264739, 264785, 264797, 264804, 264844, 264851, 264852,
                        264861,  82929, 193174, 223786, 237542, 255371, 255511,
                        255512, 255514, 255587, 255601, 255605, 255638, 255652,
                        255671, 256303, 256327, 256328, 256329, 256454, 256500,
                        256512, 256519, 256559, 256566, 256567, 256576, 304207,
                        304214, 328345, 328346,  38644, 146284, 146308, 179740,
                        247086, 247226, 247227, 247229, 247302, 247316, 247320,
                        247367, 247386, 248018, 248042, 248043, 248044, 248169,
                        248215, 248227, 248234, 248274, 248281, 248282, 248291,
                         38644, 146284, 146289, 146308, 146316, 179740, 247226,
                        247227, 247229, 247302, 247386, 248018, 248042, 248043,
                        248044, 248169, 248215, 248227, 248234, 248282, 248291,
                         22325, 113652, 146289, 146308, 146316,  22325, 113652,
                        113659, 146308, 146316,  22325, 113652, 113659, 146308,
                        146316,  22325, 113652, 113659, 146205, 146308, 146316,
                         22325, 113652, 113659, 146289, 146308, 146316,  22325,
                        113652,  22325, 113652, 146308, 146316,  22325, 146308,
                         22325, 113652,  22325, 113652, 113659, 146205, 146308,
                        146316,  22325, 113652, 113659, 146308, 146316,  22325,
                        113652, 113659, 146316,  22325, 113652, 113659, 146308,
                        146316,  22325, 113652, 113659,  22325, 113652, 113659,
                        146284, 146308, 146316,  22325, 113652, 113659, 146205,
                        146308,  22325, 113652, 113659, 146308,  22325, 113652,
                        113659, 146308, 146316,  22325, 113652,  22325, 113652,
                        146205, 146308,  22325, 113652, 113659, 146316,  22325,
                        113652, 113659, 146205, 146308]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=207, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 207
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)


 80%|########  | 8/10 [00:33<00:08,  4.21s/it]
masked_hor: tensor(indices=tensor([[  5360,   5439,   5439,   5439,   5444,   5444,   5463,
                          5463,   5463,   5471,   5471,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          6821,   6821,   6821,   6821,   6821,   6961,   6961,
                          6961,   6961,   6961,   6962,   6962,   6962,   6962,
                          6962,   6964,   6964,   6964,   6964,   6964,   6964,
                          7037,   7037,   7037,   7037,   7037,   7037,   7051,
                          7051,   7055,   7055,   7055,   7055,   7088,   7088,
                          7102,   7102,   7121,   7121,   7121,   7121,   7121,
                          7121,   7753,   7753,   7753,   7753,   7753,   7777,
                          7777,   7777,   7777,   7778,   7778,   7778,   7778,
                          7778,   7779,   7779,   7779,   7904,   7904,   7904,
                          7904,   7904,   7904,   7950,   7950,   7950,   7950,
                          7950,   7962,   7962,   7962,   7962,   7969,   7969,
                          7969,   7969,   7969,   8009,   8009,   8016,   8016,
                          8016,   8016,   8017,   8017,   8017,   8017,   8026,
                          8026,   8026,   8026,   8026],
                       [154885,  63942,  63949, 154885,  63949, 154885,  63942,
                         63949, 154885,  63949, 154885,  47372,  47379, 179740,
                        263656, 263796, 263797, 263799, 263872, 263886, 263890,
                        263923, 263937, 263956, 264588, 264612, 264613, 264614,
                        264739, 264785, 264797, 264804, 264844, 264851, 264852,
                        264861,  82929, 193174, 223786, 237542, 255371, 255511,
                        255512, 255514, 255587, 255601, 255605, 255638, 255652,
                        255671, 256303, 256327, 256328, 256329, 256454, 256500,
                        256512, 256519, 256559, 256566, 256567, 256576, 304207,
                        304214, 328345, 328346,  38644, 146284, 146308, 179740,
                        247086, 247226, 247227, 247229, 247302, 247316, 247320,
                        247367, 247386, 248018, 248042, 248043, 248044, 248169,
                        248215, 248227, 248234, 248274, 248281, 248282, 248291,
                         38644, 146284, 146289, 146308, 146316, 179740, 247226,
                        247227, 247229, 247302, 247386, 248018, 248042, 248043,
                        248044, 248169, 248215, 248227, 248234, 248282, 248291,
                         22325, 113652, 146289, 146308, 146316,  22325, 113652,
                        113659, 146308, 146316,  22325, 113652, 113659, 146308,
                        146316,  22325, 113652, 113659, 146205, 146308, 146316,
                         22325, 113652, 113659, 146289, 146308, 146316,  22325,
                        113652,  22325, 113652, 146308, 146316,  22325, 146308,
                         22325, 113652,  22325, 113652, 113659, 146205, 146308,
                        146316,  22325, 113652, 113659, 146308, 146316,  22325,
                        113652, 113659, 146316,  22325, 113652, 113659, 146308,
                        146316,  22325, 113652, 113659,  22325, 113652, 113659,
                        146284, 146308, 146316,  22325, 113652, 113659, 146205,
                        146308,  22325, 113652, 113659, 146308,  22325, 113652,
                        113659, 146308, 146316,  22325, 113652,  22325, 113652,
                        146205, 146308,  22325, 113652, 113659, 146316,  22325,
                        113652, 113659, 146205, 146308]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=207, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 207
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.21s/it]
epoch:  8 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5360,   5439,   5439,   5439,   5444,   5444,   5463,
                          5463,   5463,   5471,   5471,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5504,   5504,   5504,   5504,   5504,   5504,
                          5504,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5755,   5755,   5755,   5755,
                          5755,   5755,   5755,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5947,   5947,   5947,   5947,   5947,   5947,   5947,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          5954,   5954,   5954,   5954,   5954,   5954,   5954,
                          6821,   6821,   6821,   6821,   6821,   6961,   6961,
                          6961,   6961,   6961,   6962,   6962,   6962,   6962,
                          6962,   6964,   6964,   6964,   6964,   6964,   6964,
                          7037,   7037,   7037,   7037,   7037,   7037,   7051,
                          7051,   7055,   7055,   7055,   7055,   7088,   7088,
                          7102,   7102,   7121,   7121,   7121,   7121,   7121,
                          7121,   7753,   7753,   7753,   7753,   7753,   7777,
                          7777,   7777,   7777,   7778,   7778,   7778,   7778,
                          7778,   7779,   7779,   7779,   7904,   7904,   7904,
                          7904,   7904,   7904,   7950,   7950,   7950,   7950,
                          7950,   7962,   7962,   7962,   7962,   7969,   7969,
                          7969,   7969,   7969,   8009,   8009,   8016,   8016,
                          8016,   8016,   8017,   8017,   8017,   8017,   8026,
                          8026,   8026,   8026,   8026],
                       [154885,  63942,  63949, 154885,  63949, 154885,  63942,
                         63949, 154885,  63949, 154885,  47372,  47379, 179740,
                        263656, 263796, 263797, 263799, 263872, 263886, 263890,
                        263923, 263937, 263956, 264588, 264612, 264613, 264614,
                        264739, 264785, 264797, 264804, 264844, 264851, 264852,
                        264861,  82929, 193174, 223786, 237542, 255371, 255511,
                        255512, 255514, 255587, 255601, 255605, 255638, 255652,
                        255671, 256303, 256327, 256328, 256329, 256454, 256500,
                        256512, 256519, 256559, 256566, 256567, 256576, 304207,
                        304214, 328345, 328346,  38644, 146284, 146308, 179740,
                        247086, 247226, 247227, 247229, 247302, 247316, 247320,
                        247367, 247386, 248018, 248042, 248043, 248044, 248169,
                        248215, 248227, 248234, 248274, 248281, 248282, 248291,
                         38644, 146284, 146289, 146308, 146316, 179740, 247226,
                        247227, 247229, 247302, 247386, 248018, 248042, 248043,
                        248044, 248169, 248215, 248227, 248234, 248282, 248291,
                         22325, 113652, 146289, 146308, 146316,  22325, 113652,
                        113659, 146308, 146316,  22325, 113652, 113659, 146308,
                        146316,  22325, 113652, 113659, 146205, 146308, 146316,
                         22325, 113652, 113659, 146289, 146308, 146316,  22325,
                        113652,  22325, 113652, 146308, 146316,  22325, 146308,
                         22325, 113652,  22325, 113652, 113659, 146205, 146308,
                        146316,  22325, 113652, 113659, 146308, 146316,  22325,
                        113652, 113659, 146316,  22325, 113652, 113659, 146308,
                        146316,  22325, 113652, 113659,  22325, 113652, 113659,
                        146284, 146308, 146316,  22325, 113652, 113659, 146205,
                        146308,  22325, 113652, 113659, 146308,  22325, 113652,
                        113659, 146308, 146316,  22325, 113652,  22325, 113652,
                        146205, 146308,  22325, 113652, 113659, 146316,  22325,
                        113652, 113659, 146205, 146308]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=207, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 207
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

100%|##########| 10/10 [00:41<00:00,  4.17s/it]
train modality
node_idx: 5844 belonging to  2
  0%|          | 0/10 [00:00<?, ?it/s]
9
start training
masked_hor: tensor(indices=tensor([[  5844,   5844,   5844,   5844,   5844,   5844,   5844,
                          7650,   7674],
                       [ 82850, 124275, 191970, 223811, 256200, 256224, 328345,
                         22414,  22414]]),
       values=tensor([0.7611, 0.7428, 0.7522, 0.7519, 0.3078, 0.3567, 0.8850,
                      0.6680, 0.7716]),
       size=(8285, 753935), nnz=9, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([0.7611, 0.7428, 0.7522, 0.7519, 0.6155, 0.7134, 0.8850, 0.6680, 0.7716],
       grad_fn=<IndexBackward0>)
num_high 9 original num_nodes 9
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(0.6110, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.12s/it]
epoch:  0 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5844,   5844,   5844,   5844,   5844,   5844,   5844,
                          7650,   7674],
                       [ 82850, 124275, 191970, 223811, 256200, 256224, 328345,
                         22414,  22414]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=9, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 9
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:33,  4.13s/it]
masked_hor: tensor(indices=tensor([[  5844,   5844,   5844,   5844,   5844,   5844,   5844,
                          7650,   7674],
                       [ 82850, 124275, 191970, 223811, 256200, 256224, 328345,
                         22414,  22414]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=9, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 9
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:28,  4.14s/it]
epoch:  2 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5844,   5844,   5844,   5844,   5844,   5844,   5844,
                          7650,   7674],
                       [ 82850, 124275, 191970, 223811, 256200, 256224, 328345,
                         22414,  22414]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=9, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 9
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.14s/it]
masked_hor: tensor(indices=tensor([[  5844,   5844,   5844,   5844,   5844,   5844,   5844,
                          7650,   7674],
                       [ 82850, 124275, 191970, 223811, 256200, 256224, 328345,
                         22414,  22414]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=9, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 9
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.17s/it]
epoch:  4 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5844,   5844,   5844,   5844,   5844,   5844,   5844,
                          7650,   7674],
                       [ 82850, 124275, 191970, 223811, 256200, 256224, 328345,
                         22414,  22414]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=9, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 9
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.16s/it]
masked_hor: tensor(indices=tensor([[  5844,   5844,   5844,   5844,   5844,   5844,   5844,
                          7650,   7674],
                       [ 82850, 124275, 191970, 223811, 256200, 256224, 328345,
                         22414,  22414]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=9, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 9
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)
size_num_loss 0.0
epoch:  6 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5844,   5844,   5844,   5844,   5844,   5844,   5844,
                          7650,   7674],
                       [ 82850, 124275, 191970, 223811, 256200, 256224, 328345,
                         22414,  22414]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=9, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 9
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:29<00:12,  4.14s/it]
masked_hor: tensor(indices=tensor([[  5844,   5844,   5844,   5844,   5844,   5844,   5844,
                          7650,   7674],
                       [ 82850, 124275, 191970, 223811, 256200, 256224, 328345,
                         22414,  22414]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=9, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 9
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:33<00:08,  4.13s/it]
epoch:  8 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5844,   5844,   5844,   5844,   5844,   5844,   5844,
                          7650,   7674],
                       [ 82850, 124275, 191970, 223811, 256200, 256224, 328345,
                         22414,  22414]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=9, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 9
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.14s/it]
train modality

100%|##########| 10/10 [00:41<00:00,  4.15s/it]
  0%|          | 0/10 [00:00<?, ?it/s]
253
start training
masked_hor: tensor(indices=tensor([[  5351,   5406,   5443,   5444,   5471,   5471,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5931,   5931,   5931,   5931,   5931,   5931,
                          5931,   5931,   5931,   5931,   5931,   5931,   5931,
                          5931,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   6813,
                          6813,   6813,   7011,   7019,   7056,   7076,   7076,
                          7105,   7105,   7178,   7178,   7178,   7183,   7183,
                          7183,   7183,   7185,   7185,   7187,   7188,   7188,
                          7188,   7188,   7189,   7189,   7189,   7194,   7194,
                          7194,   7194,   7222,   7223,   7224,   7224,   7225,
                          7225,   7225,   7227,   7227,   7227,   7228,   7229,
                          7229,   7229,   7231,   7232,   7232,   7232,   7233,
                          7233,   7233,   7234,   7234,   7234,   7235,   7235,
                          7235,   7237,   7238,   7238,   7238,   7239,   7241,
                          7242,   7242,   7242,   7245,   7246,   7246,   7246,
                          7264,   7302,   7324,   7324,   7339,   7343,   7343,
                          7343,   7344,   7344,   7345,   7346,   7347,   7348,
                          7349,   7350,   7352,   7353,   7354,   7355,   7380,
                          7380,   7380,   7401,   7401,   7412,   7412,   7412,
                          7412,   7460,   7471,   7471,   7471,   7473,   7473,
                          7474,   7474,   7480,   7480,   7480,   7548,   7548,
                          7633,   7633,   7633,   7740,   7740,   7740,   7759,
                          7759,   7759,   7759,   7760,   7760,   7760,   7761,
                          7761,   7761,   7761,   7762,   7762,   7795,   7804,
                          7804],
                       [154991, 154991, 154991, 154991,  63928, 154991,  82859,
                        132333, 194492, 223703, 237620, 255363, 255561, 255569,
                        255606, 255626, 255655, 255728, 255733, 255735, 255737,
                        255738, 255739, 255744, 255772, 255773, 255774, 255775,
                        255777, 255778, 255779, 255781, 255782, 255783, 255784,
                        255785, 255787, 255788, 255789, 255791, 255792, 255795,
                        255796, 255814, 255852, 255874, 255889, 255893, 255894,
                        255895, 255896, 255897, 255898, 255899, 255900, 255902,
                        255903, 255904, 255905, 255930, 255951, 255962, 256010,
                        256021, 256023, 256024, 256030, 256098, 256183, 256290,
                        256309, 256310, 256311, 256312, 256345, 256354, 304191,
                        328345, 179846, 247490, 247492, 247494, 247497, 247498,
                        247499, 247500, 247503, 247507, 247511, 247608, 247677,
                        247745, 146316, 179846, 247341, 247443, 247448, 247450,
                        247453, 247454, 247489, 247490, 247492, 247494, 247497,
                        247498, 247499, 247500, 247507, 247511, 247608, 247609,
                        247645, 247677, 247738, 247739, 247745, 248069,  22431,
                        146288, 146316,  22431,  22431,  22431,  22431, 113638,
                         22431, 146316,  22431, 113638, 146316,  22431, 113638,
                        146251, 146316,  22431, 113638,  22431,  22431, 113638,
                        146251, 146316,  22431, 113638, 146316,  22431, 146251,
                        146289, 146316,  22431,  22431,  22431, 113638,  22431,
                        113636, 113638,  22431, 113636, 113638,  22431,  22431,
                        113636, 113638,  22431,  22431, 113636, 113638,  22431,
                        113636, 113638,  22431, 113636, 113638,  22431, 113636,
                        113638,  22431,  22431, 113636, 146316,  22431,  22431,
                         22431, 113636, 113638,  22431,  22431, 113636, 113638,
                         22431,  22431,  22431, 146288,  22431,  22431, 113636,
                        113638,  22431, 113638,  22431,  22431,  22431,  22431,
                         22431,  80426,  22431,  22431,  22431,  22431,  22431,
                        113638, 146316,  22431, 146316,  22431, 113636, 113638,
                        146316,  22431,  22431, 146288, 146316,  22431, 113638,
                         22431, 113638,  22431, 113636, 113638,  22431, 146316,
                         22431, 146288, 146316,  22431, 146196, 146288,  22431,
                        146196, 146288, 146316,  22431, 146196, 146288,  22431,
                        146196, 146288, 146316,  22431, 146288,  22431,  22431,
                        113638]]),
       values=tensor([0.7634, 0.7563, 0.7465, 0.6927, 0.7428, 0.7089, 0.7303,
                      0.7021, 0.7177, 0.7589, 0.7241, 0.0109, 0.0110, 0.0111,
                      0.0110, 0.0114, 0.0117, 0.0112, 0.0111, 0.0114, 0.0110,
                      0.0115, 0.0115, 0.0117, 0.0116, 0.0116, 0.0114, 0.0116,
                      0.0112, 0.0113, 0.0112, 0.0115, 0.0109, 0.0110, 0.0112,
                      0.0117, 0.0113, 0.0111, 0.0113, 0.0110, 0.0108, 0.0115,
                      0.0110, 0.0111, 0.0109, 0.0118, 0.0109, 0.0111, 0.0110,
                      0.0111, 0.0113, 0.0114, 0.0111, 0.0116, 0.0110, 0.0110,
                      0.0109, 0.0113, 0.0112, 0.0114, 0.0112, 0.0117, 0.0109,
                      0.0116, 0.0116, 0.0115, 0.0118, 0.0114, 0.0113, 0.0112,
                      0.0110, 0.0116, 0.0112, 0.0114, 0.0113, 0.0114, 0.7410,
                      0.7197, 0.6908, 0.0552, 0.0562, 0.0558, 0.0544, 0.0554,
                      0.0569, 0.0569, 0.0577, 0.0563, 0.0572, 0.0556, 0.0548,
                      0.0570, 0.6999, 0.7163, 0.0314, 0.0308, 0.0285, 0.0308,
                      0.0310, 0.0305, 0.0309, 0.0309, 0.0312, 0.0301, 0.0303,
                      0.0310, 0.0308, 0.0306, 0.0307, 0.0314, 0.0305, 0.0302,
                      0.0294, 0.0304, 0.0300, 0.0308, 0.0310, 0.0305, 0.7242,
                      0.3701, 0.3654, 0.7352, 0.7334, 0.7442, 0.7498, 0.7370,
                      0.7435, 0.7382, 0.7635, 0.7484, 0.7052, 0.7109, 0.7287,
                      0.3793, 0.3712, 0.7410, 0.7505, 0.7314, 0.6983, 0.7469,
                      0.3622, 0.3744, 0.7189, 0.7420, 0.7137, 0.7475, 0.2528,
                      0.2519, 0.2452, 0.7274, 0.7181, 0.7329, 0.7371, 0.7476,
                      0.3614, 0.3791, 0.6856, 0.3618, 0.3548, 0.7450, 0.6966,
                      0.3675, 0.3657, 0.7250, 0.7360, 0.3590, 0.3671, 0.7115,
                      0.3511, 0.3770, 0.7530, 0.3660, 0.3516, 0.7441, 0.3722,
                      0.3825, 0.7317, 0.7332, 0.7167, 0.7274, 0.7145, 0.7024,
                      0.7107, 0.3609, 0.3609, 0.7040, 0.6961, 0.3666, 0.3743,
                      0.7212, 0.7432, 0.7433, 0.7609, 0.7146, 0.7475, 0.3626,
                      0.3550, 0.7373, 0.7393, 0.7541, 0.7402, 0.7663, 0.7219,
                      0.7145, 0.7343, 0.7493, 0.7533, 0.7390, 0.7166, 0.7128,
                      0.7223, 0.7206, 0.7337, 0.7387, 0.7285, 0.3443, 0.3620,
                      0.7495, 0.6988, 0.7566, 0.3682, 0.3611, 0.7488, 0.7596,
                      0.7310, 0.7592, 0.7337, 0.3561, 0.3605, 0.7325, 0.7380,
                      0.7644, 0.3649, 0.3575, 0.6938, 0.3559, 0.3657, 0.7410,
                      0.2471, 0.2436, 0.2396, 0.7408, 0.3520, 0.3510, 0.7044,
                      0.2467, 0.2395, 0.2450, 0.7022, 0.7291, 0.7434, 0.7317,
                      0.7533]),
       size=(8285, 753935), nnz=253, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([0.7634, 0.7563, 0.7465, 0.6927, 0.7428, 0.7089, 0.7303, 0.7021, 0.7177,
        0.7589, 0.7241, 0.7058, 0.7181, 0.7212, 0.7174, 0.7442, 0.7588, 0.7283,
        0.7223, 0.7387, 0.7176, 0.7495, 0.7448, 0.7594, 0.7528, 0.7531, 0.7416,
        0.7537, 0.7270, 0.7318, 0.7266, 0.7458, 0.7062, 0.7156, 0.7271, 0.7600,
        0.7366, 0.7236, 0.7364, 0.7173, 0.7030, 0.7481, 0.7154, 0.7204, 0.7082,
        0.7665, 0.7089, 0.7224, 0.7148, 0.7194, 0.7324, 0.7402, 0.7224, 0.7514,
        0.7166, 0.7180, 0.7058, 0.7317, 0.7299, 0.7427, 0.7293, 0.7621, 0.7099,
        0.7545, 0.7556, 0.7458, 0.7680, 0.7401, 0.7371, 0.7276, 0.7122, 0.7528,
        0.7280, 0.7401, 0.7320, 0.7384, 0.7410, 0.7197, 0.6908, 0.7177, 0.7312,
        0.7251, 0.7070, 0.7207, 0.7403, 0.7401, 0.7505, 0.7320, 0.7439, 0.7226,
        0.7123, 0.7415, 0.6999, 0.7163, 0.7537, 0.7394, 0.6850, 0.7395, 0.7446,
        0.7316, 0.7421, 0.7411, 0.7493, 0.7231, 0.7278, 0.7440, 0.7381, 0.7342,
        0.7357, 0.7527, 0.7310, 0.7257, 0.7048, 0.7293, 0.7205, 0.7393, 0.7436,
        0.7326, 0.7242, 0.7402, 0.7308, 0.7352, 0.7334, 0.7442, 0.7498, 0.7370,
        0.7435, 0.7382, 0.7635, 0.7484, 0.7052, 0.7109, 0.7287, 0.7587, 0.7423,
        0.7410, 0.7505, 0.7314, 0.6983, 0.7469, 0.7244, 0.7487, 0.7189, 0.7420,
        0.7137, 0.7475, 0.7584, 0.7556, 0.7357, 0.7274, 0.7181, 0.7329, 0.7371,
        0.7476, 0.7228, 0.7582, 0.6856, 0.7237, 0.7097, 0.7450, 0.6966, 0.7350,
        0.7315, 0.7250, 0.7360, 0.7181, 0.7341, 0.7115, 0.7021, 0.7540, 0.7530,
        0.7320, 0.7032, 0.7441, 0.7444, 0.7650, 0.7317, 0.7332, 0.7167, 0.7274,
        0.7145, 0.7024, 0.7107, 0.7218, 0.7219, 0.7040, 0.6961, 0.7333, 0.7486,
        0.7212, 0.7432, 0.7433, 0.7609, 0.7146, 0.7475, 0.7251, 0.7100, 0.7373,
        0.7393, 0.7541, 0.7402, 0.7663, 0.7219, 0.7145, 0.7343, 0.7493, 0.7533,
        0.7390, 0.7166, 0.7128, 0.7223, 0.7206, 0.7337, 0.7387, 0.7285, 0.6887,
        0.7240, 0.7495, 0.6988, 0.7566, 0.7364, 0.7222, 0.7488, 0.7596, 0.7310,
        0.7592, 0.7337, 0.7121, 0.7209, 0.7325, 0.7380, 0.7644, 0.7298, 0.7149,
        0.6938, 0.7117, 0.7314, 0.7410, 0.7412, 0.7307, 0.7189, 0.7408, 0.7039,
        0.7020, 0.7044, 0.7400, 0.7184, 0.7349, 0.7022, 0.7291, 0.7434, 0.7317,
        0.7533], grad_fn=<IndexBackward0>)
num_high 253 original num_nodes 253
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(18.4993, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:38,  4.30s/it]
epoch:  0 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5351,   5406,   5443,   5444,   5471,   5471,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5931,   5931,   5931,   5931,   5931,   5931,
                          5931,   5931,   5931,   5931,   5931,   5931,   5931,
                          5931,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   6813,
                          6813,   6813,   7011,   7019,   7056,   7076,   7076,
                          7105,   7105,   7178,   7178,   7178,   7183,   7183,
                          7183,   7183,   7185,   7185,   7187,   7188,   7188,
                          7188,   7188,   7189,   7189,   7189,   7194,   7194,
                          7194,   7194,   7222,   7223,   7224,   7224,   7225,
                          7225,   7225,   7227,   7227,   7227,   7228,   7229,
                          7229,   7229,   7231,   7232,   7232,   7232,   7233,
                          7233,   7233,   7234,   7234,   7234,   7235,   7235,
                          7235,   7237,   7238,   7238,   7238,   7239,   7241,
                          7242,   7242,   7242,   7245,   7246,   7246,   7246,
                          7264,   7302,   7324,   7324,   7339,   7343,   7343,
                          7343,   7344,   7344,   7345,   7346,   7347,   7348,
                          7349,   7350,   7352,   7353,   7354,   7355,   7380,
                          7380,   7380,   7401,   7401,   7412,   7412,   7412,
                          7412,   7460,   7471,   7471,   7471,   7473,   7473,
                          7474,   7474,   7480,   7480,   7480,   7548,   7548,
                          7633,   7633,   7633,   7740,   7740,   7740,   7759,
                          7759,   7759,   7759,   7760,   7760,   7760,   7761,
                          7761,   7761,   7761,   7762,   7762,   7795,   7804,
                          7804],
                       [154991, 154991, 154991, 154991,  63928, 154991,  82859,
                        132333, 194492, 223703, 237620, 255363, 255561, 255569,
                        255606, 255626, 255655, 255728, 255733, 255735, 255737,
                        255738, 255739, 255744, 255772, 255773, 255774, 255775,
                        255777, 255778, 255779, 255781, 255782, 255783, 255784,
                        255785, 255787, 255788, 255789, 255791, 255792, 255795,
                        255796, 255814, 255852, 255874, 255889, 255893, 255894,
                        255895, 255896, 255897, 255898, 255899, 255900, 255902,
                        255903, 255904, 255905, 255930, 255951, 255962, 256010,
                        256021, 256023, 256024, 256030, 256098, 256183, 256290,
                        256309, 256310, 256311, 256312, 256345, 256354, 304191,
                        328345, 179846, 247490, 247492, 247494, 247497, 247498,
                        247499, 247500, 247503, 247507, 247511, 247608, 247677,
                        247745, 146316, 179846, 247341, 247443, 247448, 247450,
                        247453, 247454, 247489, 247490, 247492, 247494, 247497,
                        247498, 247499, 247500, 247507, 247511, 247608, 247609,
                        247645, 247677, 247738, 247739, 247745, 248069,  22431,
                        146288, 146316,  22431,  22431,  22431,  22431, 113638,
                         22431, 146316,  22431, 113638, 146316,  22431, 113638,
                        146251, 146316,  22431, 113638,  22431,  22431, 113638,
                        146251, 146316,  22431, 113638, 146316,  22431, 146251,
                        146289, 146316,  22431,  22431,  22431, 113638,  22431,
                        113636, 113638,  22431, 113636, 113638,  22431,  22431,
                        113636, 113638,  22431,  22431, 113636, 113638,  22431,
                        113636, 113638,  22431, 113636, 113638,  22431, 113636,
                        113638,  22431,  22431, 113636, 146316,  22431,  22431,
                         22431, 113636, 113638,  22431,  22431, 113636, 113638,
                         22431,  22431,  22431, 146288,  22431,  22431, 113636,
                        113638,  22431, 113638,  22431,  22431,  22431,  22431,
                         22431,  80426,  22431,  22431,  22431,  22431,  22431,
                        113638, 146316,  22431, 146316,  22431, 113636, 113638,
                        146316,  22431,  22431, 146288, 146316,  22431, 113638,
                         22431, 113638,  22431, 113636, 113638,  22431, 146316,
                         22431, 146288, 146316,  22431, 146196, 146288,  22431,
                        146196, 146288, 146316,  22431, 146196, 146288,  22431,
                        146196, 146288, 146316,  22431, 146288,  22431,  22431,
                        113638]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=253, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 253
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:33,  4.23s/it]
masked_hor: tensor(indices=tensor([[  5351,   5406,   5443,   5444,   5471,   5471,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5931,   5931,   5931,   5931,   5931,   5931,
                          5931,   5931,   5931,   5931,   5931,   5931,   5931,
                          5931,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   6813,
                          6813,   6813,   7011,   7019,   7056,   7076,   7076,
                          7105,   7105,   7178,   7178,   7178,   7183,   7183,
                          7183,   7183,   7185,   7185,   7187,   7188,   7188,
                          7188,   7188,   7189,   7189,   7189,   7194,   7194,
                          7194,   7194,   7222,   7223,   7224,   7224,   7225,
                          7225,   7225,   7227,   7227,   7227,   7228,   7229,
                          7229,   7229,   7231,   7232,   7232,   7232,   7233,
                          7233,   7233,   7234,   7234,   7234,   7235,   7235,
                          7235,   7237,   7238,   7238,   7238,   7239,   7241,
                          7242,   7242,   7242,   7245,   7246,   7246,   7246,
                          7264,   7302,   7324,   7324,   7339,   7343,   7343,
                          7343,   7344,   7344,   7345,   7346,   7347,   7348,
                          7349,   7350,   7352,   7353,   7354,   7355,   7380,
                          7380,   7380,   7401,   7401,   7412,   7412,   7412,
                          7412,   7460,   7471,   7471,   7471,   7473,   7473,
                          7474,   7474,   7480,   7480,   7480,   7548,   7548,
                          7633,   7633,   7633,   7740,   7740,   7740,   7759,
                          7759,   7759,   7759,   7760,   7760,   7760,   7761,
                          7761,   7761,   7761,   7762,   7762,   7795,   7804,
                          7804],
                       [154991, 154991, 154991, 154991,  63928, 154991,  82859,
                        132333, 194492, 223703, 237620, 255363, 255561, 255569,
                        255606, 255626, 255655, 255728, 255733, 255735, 255737,
                        255738, 255739, 255744, 255772, 255773, 255774, 255775,
                        255777, 255778, 255779, 255781, 255782, 255783, 255784,
                        255785, 255787, 255788, 255789, 255791, 255792, 255795,
                        255796, 255814, 255852, 255874, 255889, 255893, 255894,
                        255895, 255896, 255897, 255898, 255899, 255900, 255902,
                        255903, 255904, 255905, 255930, 255951, 255962, 256010,
                        256021, 256023, 256024, 256030, 256098, 256183, 256290,
                        256309, 256310, 256311, 256312, 256345, 256354, 304191,
                        328345, 179846, 247490, 247492, 247494, 247497, 247498,
                        247499, 247500, 247503, 247507, 247511, 247608, 247677,
                        247745, 146316, 179846, 247341, 247443, 247448, 247450,
                        247453, 247454, 247489, 247490, 247492, 247494, 247497,
                        247498, 247499, 247500, 247507, 247511, 247608, 247609,
                        247645, 247677, 247738, 247739, 247745, 248069,  22431,
                        146288, 146316,  22431,  22431,  22431,  22431, 113638,
                         22431, 146316,  22431, 113638, 146316,  22431, 113638,
                        146251, 146316,  22431, 113638,  22431,  22431, 113638,
                        146251, 146316,  22431, 113638, 146316,  22431, 146251,
                        146289, 146316,  22431,  22431,  22431, 113638,  22431,
                        113636, 113638,  22431, 113636, 113638,  22431,  22431,
                        113636, 113638,  22431,  22431, 113636, 113638,  22431,
                        113636, 113638,  22431, 113636, 113638,  22431, 113636,
                        113638,  22431,  22431, 113636, 146316,  22431,  22431,
                         22431, 113636, 113638,  22431,  22431, 113636, 113638,
                         22431,  22431,  22431, 146288,  22431,  22431, 113636,
                        113638,  22431, 113638,  22431,  22431,  22431,  22431,
                         22431,  80426,  22431,  22431,  22431,  22431,  22431,
                        113638, 146316,  22431, 146316,  22431, 113636, 113638,
                        146316,  22431,  22431, 146288, 146316,  22431, 113638,
                         22431, 113638,  22431, 113636, 113638,  22431, 146316,
                         22431, 146288, 146316,  22431, 146196, 146288,  22431,
                        146196, 146288, 146316,  22431, 146196, 146288,  22431,
                        146196, 146288, 146316,  22431, 146288,  22431,  22431,
                        113638]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=253, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 253
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)
size_num_loss 0.0
epoch:  2 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5351,   5406,   5443,   5444,   5471,   5471,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5931,   5931,   5931,   5931,   5931,   5931,
                          5931,   5931,   5931,   5931,   5931,   5931,   5931,
                          5931,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   6813,
                          6813,   6813,   7011,   7019,   7056,   7076,   7076,
                          7105,   7105,   7178,   7178,   7178,   7183,   7183,
                          7183,   7183,   7185,   7185,   7187,   7188,   7188,
                          7188,   7188,   7189,   7189,   7189,   7194,   7194,
                          7194,   7194,   7222,   7223,   7224,   7224,   7225,
                          7225,   7225,   7227,   7227,   7227,   7228,   7229,
                          7229,   7229,   7231,   7232,   7232,   7232,   7233,
                          7233,   7233,   7234,   7234,   7234,   7235,   7235,
                          7235,   7237,   7238,   7238,   7238,   7239,   7241,
                          7242,   7242,   7242,   7245,   7246,   7246,   7246,
                          7264,   7302,   7324,   7324,   7339,   7343,   7343,
                          7343,   7344,   7344,   7345,   7346,   7347,   7348,
                          7349,   7350,   7352,   7353,   7354,   7355,   7380,
                          7380,   7380,   7401,   7401,   7412,   7412,   7412,
                          7412,   7460,   7471,   7471,   7471,   7473,   7473,
                          7474,   7474,   7480,   7480,   7480,   7548,   7548,
                          7633,   7633,   7633,   7740,   7740,   7740,   7759,
                          7759,   7759,   7759,   7760,   7760,   7760,   7761,
                          7761,   7761,   7761,   7762,   7762,   7795,   7804,
                          7804],
                       [154991, 154991, 154991, 154991,  63928, 154991,  82859,
                        132333, 194492, 223703, 237620, 255363, 255561, 255569,
                        255606, 255626, 255655, 255728, 255733, 255735, 255737,
                        255738, 255739, 255744, 255772, 255773, 255774, 255775,
                        255777, 255778, 255779, 255781, 255782, 255783, 255784,
                        255785, 255787, 255788, 255789, 255791, 255792, 255795,
                        255796, 255814, 255852, 255874, 255889, 255893, 255894,
                        255895, 255896, 255897, 255898, 255899, 255900, 255902,
                        255903, 255904, 255905, 255930, 255951, 255962, 256010,
                        256021, 256023, 256024, 256030, 256098, 256183, 256290,
                        256309, 256310, 256311, 256312, 256345, 256354, 304191,
                        328345, 179846, 247490, 247492, 247494, 247497, 247498,
                        247499, 247500, 247503, 247507, 247511, 247608, 247677,
                        247745, 146316, 179846, 247341, 247443, 247448, 247450,
                        247453, 247454, 247489, 247490, 247492, 247494, 247497,
                        247498, 247499, 247500, 247507, 247511, 247608, 247609,
                        247645, 247677, 247738, 247739, 247745, 248069,  22431,
                        146288, 146316,  22431,  22431,  22431,  22431, 113638,
                         22431, 146316,  22431, 113638, 146316,  22431, 113638,
                        146251, 146316,  22431, 113638,  22431,  22431, 113638,
                        146251, 146316,  22431, 113638, 146316,  22431, 146251,
                        146289, 146316,  22431,  22431,  22431, 113638,  22431,
                        113636, 113638,  22431, 113636, 113638,  22431,  22431,
                        113636, 113638,  22431,  22431, 113636, 113638,  22431,
                        113636, 113638,  22431, 113636, 113638,  22431, 113636,
                        113638,  22431,  22431, 113636, 146316,  22431,  22431,
                         22431, 113636, 113638,  22431,  22431, 113636, 113638,
                         22431,  22431,  22431, 146288,  22431,  22431, 113636,
                        113638,  22431, 113638,  22431,  22431,  22431,  22431,
                         22431,  80426,  22431,  22431,  22431,  22431,  22431,
                        113638, 146316,  22431, 146316,  22431, 113636, 113638,
                        146316,  22431,  22431, 146288, 146316,  22431, 113638,
                         22431, 113638,  22431, 113636, 113638,  22431, 146316,
                         22431, 146288, 146316,  22431, 146196, 146288,  22431,
                        146196, 146288, 146316,  22431, 146196, 146288,  22431,
                        146196, 146288, 146316,  22431, 146288,  22431,  22431,
                        113638]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=253, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 253
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:29,  4.19s/it]
masked_hor: tensor(indices=tensor([[  5351,   5406,   5443,   5444,   5471,   5471,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5931,   5931,   5931,   5931,   5931,   5931,
                          5931,   5931,   5931,   5931,   5931,   5931,   5931,
                          5931,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   6813,
                          6813,   6813,   7011,   7019,   7056,   7076,   7076,
                          7105,   7105,   7178,   7178,   7178,   7183,   7183,
                          7183,   7183,   7185,   7185,   7187,   7188,   7188,
                          7188,   7188,   7189,   7189,   7189,   7194,   7194,
                          7194,   7194,   7222,   7223,   7224,   7224,   7225,
                          7225,   7225,   7227,   7227,   7227,   7228,   7229,
                          7229,   7229,   7231,   7232,   7232,   7232,   7233,
                          7233,   7233,   7234,   7234,   7234,   7235,   7235,
                          7235,   7237,   7238,   7238,   7238,   7239,   7241,
                          7242,   7242,   7242,   7245,   7246,   7246,   7246,
                          7264,   7302,   7324,   7324,   7339,   7343,   7343,
                          7343,   7344,   7344,   7345,   7346,   7347,   7348,
                          7349,   7350,   7352,   7353,   7354,   7355,   7380,
                          7380,   7380,   7401,   7401,   7412,   7412,   7412,
                          7412,   7460,   7471,   7471,   7471,   7473,   7473,
                          7474,   7474,   7480,   7480,   7480,   7548,   7548,
                          7633,   7633,   7633,   7740,   7740,   7740,   7759,
                          7759,   7759,   7759,   7760,   7760,   7760,   7761,
                          7761,   7761,   7761,   7762,   7762,   7795,   7804,
                          7804],
                       [154991, 154991, 154991, 154991,  63928, 154991,  82859,
                        132333, 194492, 223703, 237620, 255363, 255561, 255569,
                        255606, 255626, 255655, 255728, 255733, 255735, 255737,
                        255738, 255739, 255744, 255772, 255773, 255774, 255775,
                        255777, 255778, 255779, 255781, 255782, 255783, 255784,
                        255785, 255787, 255788, 255789, 255791, 255792, 255795,
                        255796, 255814, 255852, 255874, 255889, 255893, 255894,
                        255895, 255896, 255897, 255898, 255899, 255900, 255902,
                        255903, 255904, 255905, 255930, 255951, 255962, 256010,
                        256021, 256023, 256024, 256030, 256098, 256183, 256290,
                        256309, 256310, 256311, 256312, 256345, 256354, 304191,
                        328345, 179846, 247490, 247492, 247494, 247497, 247498,
                        247499, 247500, 247503, 247507, 247511, 247608, 247677,
                        247745, 146316, 179846, 247341, 247443, 247448, 247450,
                        247453, 247454, 247489, 247490, 247492, 247494, 247497,
                        247498, 247499, 247500, 247507, 247511, 247608, 247609,
                        247645, 247677, 247738, 247739, 247745, 248069,  22431,
                        146288, 146316,  22431,  22431,  22431,  22431, 113638,
                         22431, 146316,  22431, 113638, 146316,  22431, 113638,
                        146251, 146316,  22431, 113638,  22431,  22431, 113638,
                        146251, 146316,  22431, 113638, 146316,  22431, 146251,
                        146289, 146316,  22431,  22431,  22431, 113638,  22431,
                        113636, 113638,  22431, 113636, 113638,  22431,  22431,
                        113636, 113638,  22431,  22431, 113636, 113638,  22431,
                        113636, 113638,  22431, 113636, 113638,  22431, 113636,
                        113638,  22431,  22431, 113636, 146316,  22431,  22431,
                         22431, 113636, 113638,  22431,  22431, 113636, 113638,
                         22431,  22431,  22431, 146288,  22431,  22431, 113636,
                        113638,  22431, 113638,  22431,  22431,  22431,  22431,
                         22431,  80426,  22431,  22431,  22431,  22431,  22431,
                        113638, 146316,  22431, 146316,  22431, 113636, 113638,
                        146316,  22431,  22431, 146288, 146316,  22431, 113638,
                         22431, 113638,  22431, 113636, 113638,  22431, 146316,
                         22431, 146288, 146316,  22431, 146196, 146288,  22431,
                        146196, 146288, 146316,  22431, 146196, 146288,  22431,
                        146196, 146288, 146316,  22431, 146288,  22431,  22431,
                        113638]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=253, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 253
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:25,  4.17s/it]
epoch:  4 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5351,   5406,   5443,   5444,   5471,   5471,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5931,   5931,   5931,   5931,   5931,   5931,
                          5931,   5931,   5931,   5931,   5931,   5931,   5931,
                          5931,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   6813,
                          6813,   6813,   7011,   7019,   7056,   7076,   7076,
                          7105,   7105,   7178,   7178,   7178,   7183,   7183,
                          7183,   7183,   7185,   7185,   7187,   7188,   7188,
                          7188,   7188,   7189,   7189,   7189,   7194,   7194,
                          7194,   7194,   7222,   7223,   7224,   7224,   7225,
                          7225,   7225,   7227,   7227,   7227,   7228,   7229,
                          7229,   7229,   7231,   7232,   7232,   7232,   7233,
                          7233,   7233,   7234,   7234,   7234,   7235,   7235,
                          7235,   7237,   7238,   7238,   7238,   7239,   7241,
                          7242,   7242,   7242,   7245,   7246,   7246,   7246,
                          7264,   7302,   7324,   7324,   7339,   7343,   7343,
                          7343,   7344,   7344,   7345,   7346,   7347,   7348,
                          7349,   7350,   7352,   7353,   7354,   7355,   7380,
                          7380,   7380,   7401,   7401,   7412,   7412,   7412,
                          7412,   7460,   7471,   7471,   7471,   7473,   7473,
                          7474,   7474,   7480,   7480,   7480,   7548,   7548,
                          7633,   7633,   7633,   7740,   7740,   7740,   7759,
                          7759,   7759,   7759,   7760,   7760,   7760,   7761,
                          7761,   7761,   7761,   7762,   7762,   7795,   7804,
                          7804],
                       [154991, 154991, 154991, 154991,  63928, 154991,  82859,
                        132333, 194492, 223703, 237620, 255363, 255561, 255569,
                        255606, 255626, 255655, 255728, 255733, 255735, 255737,
                        255738, 255739, 255744, 255772, 255773, 255774, 255775,
                        255777, 255778, 255779, 255781, 255782, 255783, 255784,
                        255785, 255787, 255788, 255789, 255791, 255792, 255795,
                        255796, 255814, 255852, 255874, 255889, 255893, 255894,
                        255895, 255896, 255897, 255898, 255899, 255900, 255902,
                        255903, 255904, 255905, 255930, 255951, 255962, 256010,
                        256021, 256023, 256024, 256030, 256098, 256183, 256290,
                        256309, 256310, 256311, 256312, 256345, 256354, 304191,
                        328345, 179846, 247490, 247492, 247494, 247497, 247498,
                        247499, 247500, 247503, 247507, 247511, 247608, 247677,
                        247745, 146316, 179846, 247341, 247443, 247448, 247450,
                        247453, 247454, 247489, 247490, 247492, 247494, 247497,
                        247498, 247499, 247500, 247507, 247511, 247608, 247609,
                        247645, 247677, 247738, 247739, 247745, 248069,  22431,
                        146288, 146316,  22431,  22431,  22431,  22431, 113638,
                         22431, 146316,  22431, 113638, 146316,  22431, 113638,
                        146251, 146316,  22431, 113638,  22431,  22431, 113638,
                        146251, 146316,  22431, 113638, 146316,  22431, 146251,
                        146289, 146316,  22431,  22431,  22431, 113638,  22431,
                        113636, 113638,  22431, 113636, 113638,  22431,  22431,
                        113636, 113638,  22431,  22431, 113636, 113638,  22431,
                        113636, 113638,  22431, 113636, 113638,  22431, 113636,
                        113638,  22431,  22431, 113636, 146316,  22431,  22431,
                         22431, 113636, 113638,  22431,  22431, 113636, 113638,
                         22431,  22431,  22431, 146288,  22431,  22431, 113636,
                        113638,  22431, 113638,  22431,  22431,  22431,  22431,
                         22431,  80426,  22431,  22431,  22431,  22431,  22431,
                        113638, 146316,  22431, 146316,  22431, 113636, 113638,
                        146316,  22431,  22431, 146288, 146316,  22431, 113638,
                         22431, 113638,  22431, 113636, 113638,  22431, 146316,
                         22431, 146288, 146316,  22431, 146196, 146288,  22431,
                        146196, 146288, 146316,  22431, 146196, 146288,  22431,
                        146196, 146288, 146316,  22431, 146288,  22431,  22431,
                        113638]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=253, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 253
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.16s/it]
masked_hor: tensor(indices=tensor([[  5351,   5406,   5443,   5444,   5471,   5471,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5931,   5931,   5931,   5931,   5931,   5931,
                          5931,   5931,   5931,   5931,   5931,   5931,   5931,
                          5931,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   6813,
                          6813,   6813,   7011,   7019,   7056,   7076,   7076,
                          7105,   7105,   7178,   7178,   7178,   7183,   7183,
                          7183,   7183,   7185,   7185,   7187,   7188,   7188,
                          7188,   7188,   7189,   7189,   7189,   7194,   7194,
                          7194,   7194,   7222,   7223,   7224,   7224,   7225,
                          7225,   7225,   7227,   7227,   7227,   7228,   7229,
                          7229,   7229,   7231,   7232,   7232,   7232,   7233,
                          7233,   7233,   7234,   7234,   7234,   7235,   7235,
                          7235,   7237,   7238,   7238,   7238,   7239,   7241,
                          7242,   7242,   7242,   7245,   7246,   7246,   7246,
                          7264,   7302,   7324,   7324,   7339,   7343,   7343,
                          7343,   7344,   7344,   7345,   7346,   7347,   7348,
                          7349,   7350,   7352,   7353,   7354,   7355,   7380,
                          7380,   7380,   7401,   7401,   7412,   7412,   7412,
                          7412,   7460,   7471,   7471,   7471,   7473,   7473,
                          7474,   7474,   7480,   7480,   7480,   7548,   7548,
                          7633,   7633,   7633,   7740,   7740,   7740,   7759,
                          7759,   7759,   7759,   7760,   7760,   7760,   7761,
                          7761,   7761,   7761,   7762,   7762,   7795,   7804,
                          7804],
                       [154991, 154991, 154991, 154991,  63928, 154991,  82859,
                        132333, 194492, 223703, 237620, 255363, 255561, 255569,
                        255606, 255626, 255655, 255728, 255733, 255735, 255737,
                        255738, 255739, 255744, 255772, 255773, 255774, 255775,
                        255777, 255778, 255779, 255781, 255782, 255783, 255784,
                        255785, 255787, 255788, 255789, 255791, 255792, 255795,
                        255796, 255814, 255852, 255874, 255889, 255893, 255894,
                        255895, 255896, 255897, 255898, 255899, 255900, 255902,
                        255903, 255904, 255905, 255930, 255951, 255962, 256010,
                        256021, 256023, 256024, 256030, 256098, 256183, 256290,
                        256309, 256310, 256311, 256312, 256345, 256354, 304191,
                        328345, 179846, 247490, 247492, 247494, 247497, 247498,
                        247499, 247500, 247503, 247507, 247511, 247608, 247677,
                        247745, 146316, 179846, 247341, 247443, 247448, 247450,
                        247453, 247454, 247489, 247490, 247492, 247494, 247497,
                        247498, 247499, 247500, 247507, 247511, 247608, 247609,
                        247645, 247677, 247738, 247739, 247745, 248069,  22431,
                        146288, 146316,  22431,  22431,  22431,  22431, 113638,
                         22431, 146316,  22431, 113638, 146316,  22431, 113638,
                        146251, 146316,  22431, 113638,  22431,  22431, 113638,
                        146251, 146316,  22431, 113638, 146316,  22431, 146251,
                        146289, 146316,  22431,  22431,  22431, 113638,  22431,
                        113636, 113638,  22431, 113636, 113638,  22431,  22431,
                        113636, 113638,  22431,  22431, 113636, 113638,  22431,
                        113636, 113638,  22431, 113636, 113638,  22431, 113636,
                        113638,  22431,  22431, 113636, 146316,  22431,  22431,
                         22431, 113636, 113638,  22431,  22431, 113636, 113638,
                         22431,  22431,  22431, 146288,  22431,  22431, 113636,
                        113638,  22431, 113638,  22431,  22431,  22431,  22431,
                         22431,  80426,  22431,  22431,  22431,  22431,  22431,
                        113638, 146316,  22431, 146316,  22431, 113636, 113638,
                        146316,  22431,  22431, 146288, 146316,  22431, 113638,
                         22431, 113638,  22431, 113636, 113638,  22431, 146316,
                         22431, 146288, 146316,  22431, 146196, 146288,  22431,
                        146196, 146288, 146316,  22431, 146196, 146288,  22431,
                        146196, 146288, 146316,  22431, 146288,  22431,  22431,
                        113638]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=253, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 253
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:25<00:16,  4.15s/it]
epoch:  6 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5351,   5406,   5443,   5444,   5471,   5471,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5931,   5931,   5931,   5931,   5931,   5931,
                          5931,   5931,   5931,   5931,   5931,   5931,   5931,
                          5931,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   6813,
                          6813,   6813,   7011,   7019,   7056,   7076,   7076,
                          7105,   7105,   7178,   7178,   7178,   7183,   7183,
                          7183,   7183,   7185,   7185,   7187,   7188,   7188,
                          7188,   7188,   7189,   7189,   7189,   7194,   7194,
                          7194,   7194,   7222,   7223,   7224,   7224,   7225,
                          7225,   7225,   7227,   7227,   7227,   7228,   7229,
                          7229,   7229,   7231,   7232,   7232,   7232,   7233,
                          7233,   7233,   7234,   7234,   7234,   7235,   7235,
                          7235,   7237,   7238,   7238,   7238,   7239,   7241,
                          7242,   7242,   7242,   7245,   7246,   7246,   7246,
                          7264,   7302,   7324,   7324,   7339,   7343,   7343,
                          7343,   7344,   7344,   7345,   7346,   7347,   7348,
                          7349,   7350,   7352,   7353,   7354,   7355,   7380,
                          7380,   7380,   7401,   7401,   7412,   7412,   7412,
                          7412,   7460,   7471,   7471,   7471,   7473,   7473,
                          7474,   7474,   7480,   7480,   7480,   7548,   7548,
                          7633,   7633,   7633,   7740,   7740,   7740,   7759,
                          7759,   7759,   7759,   7760,   7760,   7760,   7761,
                          7761,   7761,   7761,   7762,   7762,   7795,   7804,
                          7804],
                       [154991, 154991, 154991, 154991,  63928, 154991,  82859,
                        132333, 194492, 223703, 237620, 255363, 255561, 255569,
                        255606, 255626, 255655, 255728, 255733, 255735, 255737,
                        255738, 255739, 255744, 255772, 255773, 255774, 255775,
                        255777, 255778, 255779, 255781, 255782, 255783, 255784,
                        255785, 255787, 255788, 255789, 255791, 255792, 255795,
                        255796, 255814, 255852, 255874, 255889, 255893, 255894,
                        255895, 255896, 255897, 255898, 255899, 255900, 255902,
                        255903, 255904, 255905, 255930, 255951, 255962, 256010,
                        256021, 256023, 256024, 256030, 256098, 256183, 256290,
                        256309, 256310, 256311, 256312, 256345, 256354, 304191,
                        328345, 179846, 247490, 247492, 247494, 247497, 247498,
                        247499, 247500, 247503, 247507, 247511, 247608, 247677,
                        247745, 146316, 179846, 247341, 247443, 247448, 247450,
                        247453, 247454, 247489, 247490, 247492, 247494, 247497,
                        247498, 247499, 247500, 247507, 247511, 247608, 247609,
                        247645, 247677, 247738, 247739, 247745, 248069,  22431,
                        146288, 146316,  22431,  22431,  22431,  22431, 113638,
                         22431, 146316,  22431, 113638, 146316,  22431, 113638,
                        146251, 146316,  22431, 113638,  22431,  22431, 113638,
                        146251, 146316,  22431, 113638, 146316,  22431, 146251,
                        146289, 146316,  22431,  22431,  22431, 113638,  22431,
                        113636, 113638,  22431, 113636, 113638,  22431,  22431,
                        113636, 113638,  22431,  22431, 113636, 113638,  22431,
                        113636, 113638,  22431, 113636, 113638,  22431, 113636,
                        113638,  22431,  22431, 113636, 146316,  22431,  22431,
                         22431, 113636, 113638,  22431,  22431, 113636, 113638,
                         22431,  22431,  22431, 146288,  22431,  22431, 113636,
                        113638,  22431, 113638,  22431,  22431,  22431,  22431,
                         22431,  80426,  22431,  22431,  22431,  22431,  22431,
                        113638, 146316,  22431, 146316,  22431, 113636, 113638,
                        146316,  22431,  22431, 146288, 146316,  22431, 113638,
                         22431, 113638,  22431, 113636, 113638,  22431, 146316,
                         22431, 146288, 146316,  22431, 146196, 146288,  22431,
                        146196, 146288, 146316,  22431, 146196, 146288,  22431,
                        146196, 146288, 146316,  22431, 146288,  22431,  22431,
                        113638]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=253, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 253
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:29<00:12,  4.14s/it]
masked_hor: tensor(indices=tensor([[  5351,   5406,   5443,   5444,   5471,   5471,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5931,   5931,   5931,   5931,   5931,   5931,
                          5931,   5931,   5931,   5931,   5931,   5931,   5931,
                          5931,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   6813,
                          6813,   6813,   7011,   7019,   7056,   7076,   7076,
                          7105,   7105,   7178,   7178,   7178,   7183,   7183,
                          7183,   7183,   7185,   7185,   7187,   7188,   7188,
                          7188,   7188,   7189,   7189,   7189,   7194,   7194,
                          7194,   7194,   7222,   7223,   7224,   7224,   7225,
                          7225,   7225,   7227,   7227,   7227,   7228,   7229,
                          7229,   7229,   7231,   7232,   7232,   7232,   7233,
                          7233,   7233,   7234,   7234,   7234,   7235,   7235,
                          7235,   7237,   7238,   7238,   7238,   7239,   7241,
                          7242,   7242,   7242,   7245,   7246,   7246,   7246,
                          7264,   7302,   7324,   7324,   7339,   7343,   7343,
                          7343,   7344,   7344,   7345,   7346,   7347,   7348,
                          7349,   7350,   7352,   7353,   7354,   7355,   7380,
                          7380,   7380,   7401,   7401,   7412,   7412,   7412,
                          7412,   7460,   7471,   7471,   7471,   7473,   7473,
                          7474,   7474,   7480,   7480,   7480,   7548,   7548,
                          7633,   7633,   7633,   7740,   7740,   7740,   7759,
                          7759,   7759,   7759,   7760,   7760,   7760,   7761,
                          7761,   7761,   7761,   7762,   7762,   7795,   7804,
                          7804],
                       [154991, 154991, 154991, 154991,  63928, 154991,  82859,
                        132333, 194492, 223703, 237620, 255363, 255561, 255569,
                        255606, 255626, 255655, 255728, 255733, 255735, 255737,
                        255738, 255739, 255744, 255772, 255773, 255774, 255775,
                        255777, 255778, 255779, 255781, 255782, 255783, 255784,
                        255785, 255787, 255788, 255789, 255791, 255792, 255795,
                        255796, 255814, 255852, 255874, 255889, 255893, 255894,
                        255895, 255896, 255897, 255898, 255899, 255900, 255902,
                        255903, 255904, 255905, 255930, 255951, 255962, 256010,
                        256021, 256023, 256024, 256030, 256098, 256183, 256290,
                        256309, 256310, 256311, 256312, 256345, 256354, 304191,
                        328345, 179846, 247490, 247492, 247494, 247497, 247498,
                        247499, 247500, 247503, 247507, 247511, 247608, 247677,
                        247745, 146316, 179846, 247341, 247443, 247448, 247450,
                        247453, 247454, 247489, 247490, 247492, 247494, 247497,
                        247498, 247499, 247500, 247507, 247511, 247608, 247609,
                        247645, 247677, 247738, 247739, 247745, 248069,  22431,
                        146288, 146316,  22431,  22431,  22431,  22431, 113638,
                         22431, 146316,  22431, 113638, 146316,  22431, 113638,
                        146251, 146316,  22431, 113638,  22431,  22431, 113638,
                        146251, 146316,  22431, 113638, 146316,  22431, 146251,
                        146289, 146316,  22431,  22431,  22431, 113638,  22431,
                        113636, 113638,  22431, 113636, 113638,  22431,  22431,
                        113636, 113638,  22431,  22431, 113636, 113638,  22431,
                        113636, 113638,  22431, 113636, 113638,  22431, 113636,
                        113638,  22431,  22431, 113636, 146316,  22431,  22431,
                         22431, 113636, 113638,  22431,  22431, 113636, 113638,
                         22431,  22431,  22431, 146288,  22431,  22431, 113636,
                        113638,  22431, 113638,  22431,  22431,  22431,  22431,
                         22431,  80426,  22431,  22431,  22431,  22431,  22431,
                        113638, 146316,  22431, 146316,  22431, 113636, 113638,
                        146316,  22431,  22431, 146288, 146316,  22431, 113638,
                         22431, 113638,  22431, 113636, 113638,  22431, 146316,
                         22431, 146288, 146316,  22431, 146196, 146288,  22431,
                        146196, 146288, 146316,  22431, 146196, 146288,  22431,
                        146196, 146288, 146316,  22431, 146288,  22431,  22431,
                        113638]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=253, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 253
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:33<00:08,  4.14s/it]
epoch:  8 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5351,   5406,   5443,   5444,   5471,   5471,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5861,   5861,   5861,   5861,   5861,   5861,
                          5861,   5931,   5931,   5931,   5931,   5931,   5931,
                          5931,   5931,   5931,   5931,   5931,   5931,   5931,
                          5931,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   5933,
                          5933,   5933,   5933,   5933,   5933,   5933,   6813,
                          6813,   6813,   7011,   7019,   7056,   7076,   7076,
                          7105,   7105,   7178,   7178,   7178,   7183,   7183,
                          7183,   7183,   7185,   7185,   7187,   7188,   7188,
                          7188,   7188,   7189,   7189,   7189,   7194,   7194,
                          7194,   7194,   7222,   7223,   7224,   7224,   7225,
                          7225,   7225,   7227,   7227,   7227,   7228,   7229,
                          7229,   7229,   7231,   7232,   7232,   7232,   7233,
                          7233,   7233,   7234,   7234,   7234,   7235,   7235,
                          7235,   7237,   7238,   7238,   7238,   7239,   7241,
                          7242,   7242,   7242,   7245,   7246,   7246,   7246,
                          7264,   7302,   7324,   7324,   7339,   7343,   7343,
                          7343,   7344,   7344,   7345,   7346,   7347,   7348,
                          7349,   7350,   7352,   7353,   7354,   7355,   7380,
                          7380,   7380,   7401,   7401,   7412,   7412,   7412,
                          7412,   7460,   7471,   7471,   7471,   7473,   7473,
                          7474,   7474,   7480,   7480,   7480,   7548,   7548,
                          7633,   7633,   7633,   7740,   7740,   7740,   7759,
                          7759,   7759,   7759,   7760,   7760,   7760,   7761,
                          7761,   7761,   7761,   7762,   7762,   7795,   7804,
                          7804],
                       [154991, 154991, 154991, 154991,  63928, 154991,  82859,
                        132333, 194492, 223703, 237620, 255363, 255561, 255569,
                        255606, 255626, 255655, 255728, 255733, 255735, 255737,
                        255738, 255739, 255744, 255772, 255773, 255774, 255775,
                        255777, 255778, 255779, 255781, 255782, 255783, 255784,
                        255785, 255787, 255788, 255789, 255791, 255792, 255795,
                        255796, 255814, 255852, 255874, 255889, 255893, 255894,
                        255895, 255896, 255897, 255898, 255899, 255900, 255902,
                        255903, 255904, 255905, 255930, 255951, 255962, 256010,
                        256021, 256023, 256024, 256030, 256098, 256183, 256290,
                        256309, 256310, 256311, 256312, 256345, 256354, 304191,
                        328345, 179846, 247490, 247492, 247494, 247497, 247498,
                        247499, 247500, 247503, 247507, 247511, 247608, 247677,
                        247745, 146316, 179846, 247341, 247443, 247448, 247450,
                        247453, 247454, 247489, 247490, 247492, 247494, 247497,
                        247498, 247499, 247500, 247507, 247511, 247608, 247609,
                        247645, 247677, 247738, 247739, 247745, 248069,  22431,
                        146288, 146316,  22431,  22431,  22431,  22431, 113638,
                         22431, 146316,  22431, 113638, 146316,  22431, 113638,
                        146251, 146316,  22431, 113638,  22431,  22431, 113638,
                        146251, 146316,  22431, 113638, 146316,  22431, 146251,
                        146289, 146316,  22431,  22431,  22431, 113638,  22431,
                        113636, 113638,  22431, 113636, 113638,  22431,  22431,
                        113636, 113638,  22431,  22431, 113636, 113638,  22431,
                        113636, 113638,  22431, 113636, 113638,  22431, 113636,
                        113638,  22431,  22431, 113636, 146316,  22431,  22431,
                         22431, 113636, 113638,  22431,  22431, 113636, 113638,
                         22431,  22431,  22431, 146288,  22431,  22431, 113636,
                        113638,  22431, 113638,  22431,  22431,  22431,  22431,
                         22431,  80426,  22431,  22431,  22431,  22431,  22431,
                        113638, 146316,  22431, 146316,  22431, 113636, 113638,
                        146316,  22431,  22431, 146288, 146316,  22431, 113638,
                         22431, 113638,  22431, 113636, 113638,  22431, 146316,
                         22431, 146288, 146316,  22431, 146196, 146288,  22431,
                        146196, 146288, 146316,  22431, 146196, 146288,  22431,
                        146196, 146288, 146316,  22431, 146288,  22431,  22431,
                        113638]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=253, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(2, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 253
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.13s/it]
most important relations 5861:  Counter()
high: [Counter({'abstract': 2}), Counter(), Counter()]
least important relations: 5861 Counter()
train modality

100%|##########| 10/10 [00:41<00:00,  4.15s/it]
43
start training
masked_hor: tensor(indices=tensor([[  5388,   5388,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5857,   5857,
                          5857,   5857,   5857,   5857,   5857,   5857,   5857,
                          5857,   5857,   5857,   5857,   5857,   5917,   5917,
                          5935,   5935,   5935,   5935,   5935,   5967,   5967,
                          6894,   6894,   6949,   6949,   7140,   7142,   7258,
                          7892],
                       [ 63930, 154987,  47342,  47360,  47392, 179842, 263729,
                        263784, 263975, 263977, 264093, 264727,  82850, 195114,
                        223695, 237617, 255444, 255499, 255690, 255692, 255808,
                        256442, 304177, 304195, 328345, 328346,  38645, 179842,
                         38645, 146233, 179842, 247159, 247214,  38645, 179842,
                         22427, 113640,  22427, 113640,  22427,  22427,  22427,
                         22427]]),
       values=tensor([0.8046, 0.7893, 0.2558, 0.2111, 0.2529, 0.6756, 0.1215,
                      0.1096, 0.1163, 0.1325, 0.1190, 0.1113, 0.6991, 0.7067,
                      0.6972, 0.7621, 0.1325, 0.1207, 0.1182, 0.1249, 0.1163,
                      0.1290, 0.3818, 0.3981, 0.3909, 0.3912, 0.7561, 0.6937,
                      0.7830, 0.7592, 0.6825, 0.3579, 0.3453, 0.7023, 0.7344,
                      0.8159, 0.7780, 0.7122, 0.6684, 0.6732, 0.6676, 0.7326,
                      0.7284]),
       size=(8285, 753935), nnz=43, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([0.8046, 0.7893, 0.7675, 0.6332, 0.7588, 0.6756, 0.7292, 0.6579, 0.6980,
        0.7950, 0.7141, 0.6676, 0.6991, 0.7067, 0.6972, 0.7621, 0.7948, 0.7242,
        0.7095, 0.7493, 0.6977, 0.7743, 0.7636, 0.7962, 0.7817, 0.7824, 0.7561,
        0.6937, 0.7830, 0.7592, 0.6825, 0.7157, 0.6906, 0.7023, 0.7344, 0.8159,
        0.7780, 0.7122, 0.6684, 0.6732, 0.6676, 0.7326, 0.7284],
       grad_fn=<IndexBackward0>)
num_high 43 original num_nodes 43
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(3.1204, grad_fn=<AddBackward0>)
size_num_loss 1.0
  0%|          | 0/10 [00:00<?, ?it/s]
epoch:  0 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5388,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5857,   5857,
                          5857,   5857,   5857,   5857,   5857,   5857,   5857,
                          5857,   5857,   5857,   5857,   5857,   5917,   5917,
                          5935,   5935,   5935,   5935,   5935,   5967,   5967,
                          6894,   6894,   6949,   6949,   7140,   7142,   7258,
                          7892],
                       [ 63930, 154987,  47342,  47360,  47392, 179842, 263729,
                        263784, 263975, 263977, 264093, 264727,  82850, 195114,
                        223695, 237617, 255444, 255499, 255690, 255692, 255808,
                        256442, 304177, 304195, 328345, 328346,  38645, 179842,
                         38645, 146233, 179842, 247159, 247214,  38645, 179842,
                         22427, 113640,  22427, 113640,  22427,  22427,  22427,
                         22427]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=43, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 43
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.13s/it]
masked_hor: tensor(indices=tensor([[  5388,   5388,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5857,   5857,
                          5857,   5857,   5857,   5857,   5857,   5857,   5857,
                          5857,   5857,   5857,   5857,   5857,   5917,   5917,
                          5935,   5935,   5935,   5935,   5935,   5967,   5967,
                          6894,   6894,   6949,   6949,   7140,   7142,   7258,
                          7892],
                       [ 63930, 154987,  47342,  47360,  47392, 179842, 263729,
                        263784, 263975, 263977, 264093, 264727,  82850, 195114,
                        223695, 237617, 255444, 255499, 255690, 255692, 255808,
                        256442, 304177, 304195, 328345, 328346,  38645, 179842,
                         38645, 146233, 179842, 247159, 247214,  38645, 179842,
                         22427, 113640,  22427, 113640,  22427,  22427,  22427,
                         22427]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=43, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 43
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:33,  4.13s/it]
epoch:  2 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5388,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5857,   5857,
                          5857,   5857,   5857,   5857,   5857,   5857,   5857,
                          5857,   5857,   5857,   5857,   5857,   5917,   5917,
                          5935,   5935,   5935,   5935,   5935,   5967,   5967,
                          6894,   6894,   6949,   6949,   7140,   7142,   7258,
                          7892],
                       [ 63930, 154987,  47342,  47360,  47392, 179842, 263729,
                        263784, 263975, 263977, 264093, 264727,  82850, 195114,
                        223695, 237617, 255444, 255499, 255690, 255692, 255808,
                        256442, 304177, 304195, 328345, 328346,  38645, 179842,
                         38645, 146233, 179842, 247159, 247214,  38645, 179842,
                         22427, 113640,  22427, 113640,  22427,  22427,  22427,
                         22427]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=43, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 43
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:29,  4.14s/it]
masked_hor: tensor(indices=tensor([[  5388,   5388,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5857,   5857,
                          5857,   5857,   5857,   5857,   5857,   5857,   5857,
                          5857,   5857,   5857,   5857,   5857,   5917,   5917,
                          5935,   5935,   5935,   5935,   5935,   5967,   5967,
                          6894,   6894,   6949,   6949,   7140,   7142,   7258,
                          7892],
                       [ 63930, 154987,  47342,  47360,  47392, 179842, 263729,
                        263784, 263975, 263977, 264093, 264727,  82850, 195114,
                        223695, 237617, 255444, 255499, 255690, 255692, 255808,
                        256442, 304177, 304195, 328345, 328346,  38645, 179842,
                         38645, 146233, 179842, 247159, 247214,  38645, 179842,
                         22427, 113640,  22427, 113640,  22427,  22427,  22427,
                         22427]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=43, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 43
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.14s/it]
epoch:  4 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5388,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5857,   5857,
                          5857,   5857,   5857,   5857,   5857,   5857,   5857,
                          5857,   5857,   5857,   5857,   5857,   5917,   5917,
                          5935,   5935,   5935,   5935,   5935,   5967,   5967,
                          6894,   6894,   6949,   6949,   7140,   7142,   7258,
                          7892],
                       [ 63930, 154987,  47342,  47360,  47392, 179842, 263729,
                        263784, 263975, 263977, 264093, 264727,  82850, 195114,
                        223695, 237617, 255444, 255499, 255690, 255692, 255808,
                        256442, 304177, 304195, 328345, 328346,  38645, 179842,
                         38645, 146233, 179842, 247159, 247214,  38645, 179842,
                         22427, 113640,  22427, 113640,  22427,  22427,  22427,
                         22427]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=43, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 43
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.13s/it]
masked_hor: tensor(indices=tensor([[  5388,   5388,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5857,   5857,
                          5857,   5857,   5857,   5857,   5857,   5857,   5857,
                          5857,   5857,   5857,   5857,   5857,   5917,   5917,
                          5935,   5935,   5935,   5935,   5935,   5967,   5967,
                          6894,   6894,   6949,   6949,   7140,   7142,   7258,
                          7892],
                       [ 63930, 154987,  47342,  47360,  47392, 179842, 263729,
                        263784, 263975, 263977, 264093, 264727,  82850, 195114,
                        223695, 237617, 255444, 255499, 255690, 255692, 255808,
                        256442, 304177, 304195, 328345, 328346,  38645, 179842,
                         38645, 146233, 179842, 247159, 247214,  38645, 179842,
                         22427, 113640,  22427, 113640,  22427,  22427,  22427,
                         22427]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=43, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 43
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.18s/it]
epoch:  6 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5388,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5857,   5857,
                          5857,   5857,   5857,   5857,   5857,   5857,   5857,
                          5857,   5857,   5857,   5857,   5857,   5917,   5917,
                          5935,   5935,   5935,   5935,   5935,   5967,   5967,
                          6894,   6894,   6949,   6949,   7140,   7142,   7258,
                          7892],
                       [ 63930, 154987,  47342,  47360,  47392, 179842, 263729,
                        263784, 263975, 263977, 264093, 264727,  82850, 195114,
                        223695, 237617, 255444, 255499, 255690, 255692, 255808,
                        256442, 304177, 304195, 328345, 328346,  38645, 179842,
                         38645, 146233, 179842, 247159, 247214,  38645, 179842,
                         22427, 113640,  22427, 113640,  22427,  22427,  22427,
                         22427]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=43, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 43
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:29<00:12,  4.16s/it]
masked_hor: tensor(indices=tensor([[  5388,   5388,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5857,   5857,
                          5857,   5857,   5857,   5857,   5857,   5857,   5857,
                          5857,   5857,   5857,   5857,   5857,   5917,   5917,
                          5935,   5935,   5935,   5935,   5935,   5967,   5967,
                          6894,   6894,   6949,   6949,   7140,   7142,   7258,
                          7892],
                       [ 63930, 154987,  47342,  47360,  47392, 179842, 263729,
                        263784, 263975, 263977, 264093, 264727,  82850, 195114,
                        223695, 237617, 255444, 255499, 255690, 255692, 255808,
                        256442, 304177, 304195, 328345, 328346,  38645, 179842,
                         38645, 146233, 179842, 247159, 247214,  38645, 179842,
                         22427, 113640,  22427, 113640,  22427,  22427,  22427,
                         22427]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=43, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 43
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:33<00:08,  4.14s/it]
epoch:  8 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5388,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5857,   5857,
                          5857,   5857,   5857,   5857,   5857,   5857,   5857,
                          5857,   5857,   5857,   5857,   5857,   5917,   5917,
                          5935,   5935,   5935,   5935,   5935,   5967,   5967,
                          6894,   6894,   6949,   6949,   7140,   7142,   7258,
                          7892],
                       [ 63930, 154987,  47342,  47360,  47392, 179842, 263729,
                        263784, 263975, 263977, 264093, 264727,  82850, 195114,
                        223695, 237617, 255444, 255499, 255690, 255692, 255808,
                        256442, 304177, 304195, 328345, 328346,  38645, 179842,
                         38645, 146233, 179842, 247159, 247214,  38645, 179842,
                         22427, 113640,  22427, 113640,  22427,  22427,  22427,
                         22427]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=43, layout=torch.sparse_coo,

 90%|######### | 9/10 [00:37<00:04,  4.14s/it]
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 43
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

100%|##########| 10/10 [00:41<00:00,  4.14s/it]
train modality
node_idx: 5752 belonging to  3
67
start training
masked_hor: tensor(indices=tensor([[  5388,   5388,   5429,   5429,   5455,   5466,   5466,
                          5470,   5470,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5505,   5505,
                          5752,   5752,   5752,   5752,   5752,   5752,   5752,
                          5752,   5752,   5752,   5752,   5752,   5752,   5752,
                          5752,   5752,   5752,   5917,   5917,   5935,   5935,
                          5935,   5935,   5935,   5935,   6912,   6912,   6915,
                          6915,   6916,   6956,   6956,   6996,   6996,   6996,
                          6996,   6996,   7044,   7044,   7064,   7064,   7064,
                          7064,   7859,   7860,   7860],
                       [ 63930, 154882,  63930, 154882, 154882,  63930, 154882,
                         63930, 154882,  47342,  47360, 179737, 263747, 263750,
                        263751, 263791, 263831, 263879, 263899, 264694, 264695,
                         82850, 191834, 223772, 237539, 255462, 255465, 255466,
                        255506, 255546, 255594, 255614, 256409, 256410, 304177,
                        304195, 328345, 328346,  38645, 179737,  38645, 146233,
                        146274, 146311, 146315, 179737,  22322, 146315,  22322,
                        146315,  22322,  22322, 146315,  22322, 146233, 146274,
                        146300, 146315,  22322, 146315,  22322, 146274, 146311,
                        146315,  22322,  22322, 146315]]),
       values=tensor([0.7913, 0.7785, 0.7605, 0.6539, 0.7535, 0.6871, 0.7296,
                      0.6732, 0.7048, 0.3916, 0.3588, 0.6808, 0.0784, 0.0791,
                      0.0782, 0.0840, 0.0870, 0.0806, 0.0793, 0.0829, 0.0783,
                      0.7661, 0.7574, 0.7842, 0.7722, 0.0859, 0.0835, 0.0860,
                      0.0803, 0.0814, 0.0803, 0.0844, 0.0757, 0.0778, 0.3617,
                      0.3926, 0.3709, 0.3582, 0.7413, 0.7039, 0.6750, 0.1909,
                      0.1750, 0.1775, 0.1714, 0.7969, 0.6871, 0.7142, 0.6989,
                      0.7081, 0.7337, 0.7485, 0.7427, 0.7243, 0.1734, 0.1931,
                      0.1840, 0.1847, 0.7314, 0.7453, 0.7501, 0.2362, 0.2166,
                      0.2349, 0.8155, 0.7431, 0.7280]),
       size=(8285, 753935), nnz=67, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([0.7913, 0.7785, 0.7605, 0.6539, 0.7535, 0.6871, 0.7296, 0.6732, 0.7048,
        0.7833, 0.7175, 0.6808, 0.7056, 0.7116, 0.7042, 0.7562, 0.7831, 0.7256,
        0.7138, 0.7457, 0.7045, 0.7661, 0.7574, 0.7842, 0.7722, 0.7728, 0.7513,
        0.7739, 0.7231, 0.7325, 0.7224, 0.7592, 0.6815, 0.7005, 0.7234, 0.7853,
        0.7418, 0.7164, 0.7413, 0.7039, 0.6750, 0.7635, 0.7001, 0.7102, 0.6856,
        0.7969, 0.6871, 0.7142, 0.6989, 0.7081, 0.7337, 0.7485, 0.7427, 0.7243,
        0.6938, 0.7722, 0.7360, 0.7388, 0.7314, 0.7453, 0.7501, 0.7087, 0.6499,
        0.7048, 0.8155, 0.7431, 0.7280], grad_fn=<IndexBackward0>)
num_high 67 original num_nodes 67
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(4.8851, grad_fn=<AddBackward0>)
size_num_loss 1.0
  0%|          | 0/10 [00:00<?, ?it/s]
epoch:  0 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5388,   5429,   5429,   5455,   5466,   5466,
                          5470,   5470,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5505,   5505,
                          5752,   5752,   5752,   5752,   5752,   5752,   5752,
                          5752,   5752,   5752,   5752,   5752,   5752,   5752,
                          5752,   5752,   5752,   5917,   5917,   5935,   5935,
                          5935,   5935,   5935,   5935,   6912,   6912,   6915,
                          6915,   6916,   6956,   6956,   6996,   6996,   6996,
                          6996,   6996,   7044,   7044,   7064,   7064,   7064,
                          7064,   7859,   7860,   7860],
                       [ 63930, 154882,  63930, 154882, 154882,  63930, 154882,
                         63930, 154882,  47342,  47360, 179737, 263747, 263750,
                        263751, 263791, 263831, 263879, 263899, 264694, 264695,
                         82850, 191834, 223772, 237539, 255462, 255465, 255466,
                        255506, 255546, 255594, 255614, 256409, 256410, 304177,
                        304195, 328345, 328346,  38645, 179737,  38645, 146233,
                        146274, 146311, 146315, 179737,  22322, 146315,  22322,
                        146315,  22322,  22322, 146315,  22322, 146233, 146274,
                        146300, 146315,  22322, 146315,  22322, 146274, 146311,
                        146315,  22322,  22322, 146315]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=67, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 67
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.15s/it]
masked_hor: tensor(indices=tensor([[  5388,   5388,   5429,   5429,   5455,   5466,   5466,
                          5470,   5470,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5505,   5505,
                          5752,   5752,   5752,   5752,   5752,   5752,   5752,
                          5752,   5752,   5752,   5752,   5752,   5752,   5752,
                          5752,   5752,   5752,   5917,   5917,   5935,   5935,
                          5935,   5935,   5935,   5935,   6912,   6912,   6915,
                          6915,   6916,   6956,   6956,   6996,   6996,   6996,
                          6996,   6996,   7044,   7044,   7064,   7064,   7064,
                          7064,   7859,   7860,   7860],
                       [ 63930, 154882,  63930, 154882, 154882,  63930, 154882,
                         63930, 154882,  47342,  47360, 179737, 263747, 263750,
                        263751, 263791, 263831, 263879, 263899, 264694, 264695,
                         82850, 191834, 223772, 237539, 255462, 255465, 255466,
                        255506, 255546, 255594, 255614, 256409, 256410, 304177,
                        304195, 328345, 328346,  38645, 179737,  38645, 146233,
                        146274, 146311, 146315, 179737,  22322, 146315,  22322,
                        146315,  22322,  22322, 146315,  22322, 146233, 146274,
                        146300, 146315,  22322, 146315,  22322, 146274, 146311,
                        146315,  22322,  22322, 146315]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=67, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 67
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:33,  4.13s/it]
epoch:  2 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5388,   5429,   5429,   5455,   5466,   5466,
                          5470,   5470,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5505,   5505,
                          5752,   5752,   5752,   5752,   5752,   5752,   5752,
                          5752,   5752,   5752,   5752,   5752,   5752,   5752,
                          5752,   5752,   5752,   5917,   5917,   5935,   5935,
                          5935,   5935,   5935,   5935,   6912,   6912,   6915,
                          6915,   6916,   6956,   6956,   6996,   6996,   6996,
                          6996,   6996,   7044,   7044,   7064,   7064,   7064,
                          7064,   7859,   7860,   7860],
                       [ 63930, 154882,  63930, 154882, 154882,  63930, 154882,
                         63930, 154882,  47342,  47360, 179737, 263747, 263750,
                        263751, 263791, 263831, 263879, 263899, 264694, 264695,
                         82850, 191834, 223772, 237539, 255462, 255465, 255466,
                        255506, 255546, 255594, 255614, 256409, 256410, 304177,
                        304195, 328345, 328346,  38645, 179737,  38645, 146233,
                        146274, 146311, 146315, 179737,  22322, 146315,  22322,
                        146315,  22322,  22322, 146315,  22322, 146233, 146274,
                        146300, 146315,  22322, 146315,  22322, 146274, 146311,
                        146315,  22322,  22322, 146315]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=67, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 67
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:29,  4.15s/it]
masked_hor: tensor(indices=tensor([[  5388,   5388,   5429,   5429,   5455,   5466,   5466,
                          5470,   5470,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5505,   5505,
                          5752,   5752,   5752,   5752,   5752,   5752,   5752,
                          5752,   5752,   5752,   5752,   5752,   5752,   5752,
                          5752,   5752,   5752,   5917,   5917,   5935,   5935,


 50%|#####     | 5/10 [00:20<00:20,  4.18s/it]
                          6996,   6996,   7044,   7044,   7064,   7064,   7064,
                          7064,   7859,   7860,   7860],
                       [ 63930, 154882,  63930, 154882, 154882,  63930, 154882,
                         63930, 154882,  47342,  47360, 179737, 263747, 263750,
                        263751, 263791, 263831, 263879, 263899, 264694, 264695,
                         82850, 191834, 223772, 237539, 255462, 255465, 255466,
                        255506, 255546, 255594, 255614, 256409, 256410, 304177,
                        304195, 328345, 328346,  38645, 179737,  38645, 146233,
                        146274, 146311, 146315, 179737,  22322, 146315,  22322,
                        146315,  22322,  22322, 146315,  22322, 146233, 146274,
                        146300, 146315,  22322, 146315,  22322, 146274, 146311,
                        146315,  22322,  22322, 146315]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=67, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 67
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)
size_num_loss 0.0
epoch:  4 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5388,   5429,   5429,   5455,   5466,   5466,
                          5470,   5470,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5505,   5505,
                          5752,   5752,   5752,   5752,   5752,   5752,   5752,
                          5752,   5752,   5752,   5752,   5752,   5752,   5752,
                          5752,   5752,   5752,   5917,   5917,   5935,   5935,
                          5935,   5935,   5935,   5935,   6912,   6912,   6915,
                          6915,   6916,   6956,   6956,   6996,   6996,   6996,
                          6996,   6996,   7044,   7044,   7064,   7064,   7064,
                          7064,   7859,   7860,   7860],
                       [ 63930, 154882,  63930, 154882, 154882,  63930, 154882,
                         63930, 154882,  47342,  47360, 179737, 263747, 263750,
                        263751, 263791, 263831, 263879, 263899, 264694, 264695,
                         82850, 191834, 223772, 237539, 255462, 255465, 255466,
                        255506, 255546, 255594, 255614, 256409, 256410, 304177,
                        304195, 328345, 328346,  38645, 179737,  38645, 146233,
                        146274, 146311, 146315, 179737,  22322, 146315,  22322,
                        146315,  22322,  22322, 146315,  22322, 146233, 146274,
                        146300, 146315,  22322, 146315,  22322, 146274, 146311,
                        146315,  22322,  22322, 146315]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=67, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 67
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.16s/it]
masked_hor: tensor(indices=tensor([[  5388,   5388,   5429,   5429,   5455,   5466,   5466,
                          5470,   5470,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5505,   5505,
                          5752,   5752,   5752,   5752,   5752,   5752,   5752,
                          5752,   5752,   5752,   5752,   5752,   5752,   5752,
                          5752,   5752,   5752,   5917,   5917,   5935,   5935,
                          5935,   5935,   5935,   5935,   6912,   6912,   6915,
                          6915,   6916,   6956,   6956,   6996,   6996,   6996,
                          6996,   6996,   7044,   7044,   7064,   7064,   7064,
                          7064,   7859,   7860,   7860],
                       [ 63930, 154882,  63930, 154882, 154882,  63930, 154882,
                         63930, 154882,  47342,  47360, 179737, 263747, 263750,
                        263751, 263791, 263831, 263879, 263899, 264694, 264695,
                         82850, 191834, 223772, 237539, 255462, 255465, 255466,
                        255506, 255546, 255594, 255614, 256409, 256410, 304177,
                        304195, 328345, 328346,  38645, 179737,  38645, 146233,
                        146274, 146311, 146315, 179737,  22322, 146315,  22322,
                        146315,  22322,  22322, 146315,  22322, 146233, 146274,
                        146300, 146315,  22322, 146315,  22322, 146274, 146311,
                        146315,  22322,  22322, 146315]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=67, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 67
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)
size_num_loss 0.0
epoch:  6 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5388,   5429,   5429,   5455,   5466,   5466,
                          5470,   5470,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5505,   5505,
                          5752,   5752,   5752,   5752,   5752,   5752,   5752,
                          5752,   5752,   5752,   5752,   5752,   5752,   5752,
                          5752,   5752,   5752,   5917,   5917,   5935,   5935,
                          5935,   5935,   5935,   5935,   6912,   6912,   6915,
                          6915,   6916,   6956,   6956,   6996,   6996,   6996,
                          6996,   6996,   7044,   7044,   7064,   7064,   7064,
                          7064,   7859,   7860,   7860],
                       [ 63930, 154882,  63930, 154882, 154882,  63930, 154882,
                         63930, 154882,  47342,  47360, 179737, 263747, 263750,
                        263751, 263791, 263831, 263879, 263899, 264694, 264695,
                         82850, 191834, 223772, 237539, 255462, 255465, 255466,
                        255506, 255546, 255594, 255614, 256409, 256410, 304177,
                        304195, 328345, 328346,  38645, 179737,  38645, 146233,
                        146274, 146311, 146315, 179737,  22322, 146315,  22322,
                        146315,  22322,  22322, 146315,  22322, 146233, 146274,
                        146300, 146315,  22322, 146315,  22322, 146274, 146311,
                        146315,  22322,  22322, 146315]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=67, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 67
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:29<00:12,  4.15s/it]
masked_hor: tensor(indices=tensor([[  5388,   5388,   5429,   5429,   5455,   5466,   5466,
                          5470,   5470,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5505,   5505,
                          5752,   5752,   5752,   5752,   5752,   5752,   5752,
                          5752,   5752,   5752,   5752,   5752,   5752,   5752,
                          5752,   5752,   5752,   5917,   5917,   5935,   5935,
                          5935,   5935,   5935,   5935,   6912,   6912,   6915,
                          6915,   6916,   6956,   6956,   6996,   6996,   6996,
                          6996,   6996,   7044,   7044,   7064,   7064,   7064,
                          7064,   7859,   7860,   7860],
                       [ 63930, 154882,  63930, 154882, 154882,  63930, 154882,
                         63930, 154882,  47342,  47360, 179737, 263747, 263750,
                        263751, 263791, 263831, 263879, 263899, 264694, 264695,
                         82850, 191834, 223772, 237539, 255462, 255465, 255466,
                        255506, 255546, 255594, 255614, 256409, 256410, 304177,
                        304195, 328345, 328346,  38645, 179737,  38645, 146233,
                        146274, 146311, 146315, 179737,  22322, 146315,  22322,
                        146315,  22322,  22322, 146315,  22322, 146233, 146274,
                        146300, 146315,  22322, 146315,  22322, 146274, 146311,
                        146315,  22322,  22322, 146315]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=67, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 67
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:33<00:08,  4.13s/it]
epoch:  8 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5388,   5429,   5429,   5455,   5466,   5466,
                          5470,   5470,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5505,   5505,
                          5752,   5752,   5752,   5752,   5752,   5752,   5752,
                          5752,   5752,   5752,   5752,   5752,   5752,   5752,
                          5752,   5752,   5752,   5917,   5917,   5935,   5935,
                          5935,   5935,   5935,   5935,   6912,   6912,   6915,
                          6915,   6916,   6956,   6956,   6996,   6996,   6996,
                          6996,   6996,   7044,   7044,   7064,   7064,   7064,
                          7064,   7859,   7860,   7860],
                       [ 63930, 154882,  63930, 154882, 154882,  63930, 154882,
                         63930, 154882,  47342,  47360, 179737, 263747, 263750,
                        263751, 263791, 263831, 263879, 263899, 264694, 264695,
                         82850, 191834, 223772, 237539, 255462, 255465, 255466,
                        255506, 255546, 255594, 255614, 256409, 256410, 304177,
                        304195, 328345, 328346,  38645, 179737,  38645, 146233,
                        146274, 146311, 146315, 179737,  22322, 146315,  22322,
                        146315,  22322,  22322, 146315,  22322, 146233, 146274,
                        146300, 146315,  22322, 146315,  22322, 146274, 146311,
                        146315,  22322,  22322, 146315]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=67, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 67
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.14s/it]
train modality

100%|##########| 10/10 [00:41<00:00,  4.14s/it]
32
start training
masked_hor: tensor(indices=tensor([[  5388,   5388,   5430,   5430,   5505,   5505,   5505,
                          5505,   5505,   5505,   5795,   5795,   5795,   5795,
                          5795,   5795,   5795,   5795,   5795,   5795,   5795,
                          5935,   5935,   5935,   5935,   5935,   6949,   6949,
                          6949,   7139,   7140,   7142],
                       [ 63930, 154925,  63930, 154925,  47360, 179780, 263784,
                        263974, 263975, 263977,  82948, 193225, 223741, 237570,
                        255499, 255689, 255690, 255692, 304195, 328332, 328345,
                         38645, 146233, 146275, 179780, 247214,  22365, 113640,
                        146275,  22365,  22365,  22365]]),
       values=tensor([0.8148, 0.7977, 0.7730, 0.6162, 0.7631, 0.6663, 0.1822,
                      0.1613, 0.1731, 0.2010, 0.7113, 0.6568, 0.6938, 0.7027,
                      0.1729, 0.1917, 0.2010, 0.1808, 0.7059, 0.3761, 0.3461,
                      0.7807, 0.3843, 0.4027, 0.7891, 0.7899, 0.7600, 0.7914,
                      0.7195, 0.7331, 0.7185, 0.7712]),
       size=(8285, 753935), nnz=32, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([0.8148, 0.7977, 0.7730, 0.6162, 0.7631, 0.6663, 0.7289, 0.6454, 0.6925,
        0.8041, 0.7113, 0.6568, 0.6938, 0.7027, 0.6916, 0.7669, 0.8039, 0.7231,
        0.7059, 0.7521, 0.6922, 0.7807, 0.7686, 0.8054, 0.7891, 0.7899, 0.7600,
        0.7914, 0.7195, 0.7331, 0.7185, 0.7712], grad_fn=<IndexBackward0>)
num_high 32 original num_nodes 32
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(2.3354, grad_fn=<AddBackward0>)
size_num_loss 1.0
  0%|          | 0/10 [00:00<?, ?it/s]
epoch:  0 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5388,   5430,   5430,   5505,   5505,   5505,
                          5505,   5505,   5505,   5795,   5795,   5795,   5795,
                          5795,   5795,   5795,   5795,   5795,   5795,   5795,
                          5935,   5935,   5935,   5935,   5935,   6949,   6949,
                          6949,   7139,   7140,   7142],
                       [ 63930, 154925,  63930, 154925,  47360, 179780, 263784,
                        263974, 263975, 263977,  82948, 193225, 223741, 237570,
                        255499, 255689, 255690, 255692, 304195, 328332, 328345,
                         38645, 146233, 146275, 179780, 247214,  22365, 113640,
                        146275,  22365,  22365,  22365]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=32, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 32
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)


 20%|##        | 2/10 [00:08<00:32,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5388,   5388,   5430,   5430,   5505,   5505,   5505,
                          5505,   5505,   5505,   5795,   5795,   5795,   5795,
                          5795,   5795,   5795,   5795,   5795,   5795,   5795,
                          5935,   5935,   5935,   5935,   5935,   6949,   6949,
                          6949,   7139,   7140,   7142],
                       [ 63930, 154925,  63930, 154925,  47360, 179780, 263784,
                        263974, 263975, 263977,  82948, 193225, 223741, 237570,
                        255499, 255689, 255690, 255692, 304195, 328332, 328345,
                         38645, 146233, 146275, 179780, 247214,  22365, 113640,
                        146275,  22365,  22365,  22365]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=32, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 32
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:28,  4.12s/it]
epoch:  2 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5388,   5430,   5430,   5505,   5505,   5505,
                          5505,   5505,   5505,   5795,   5795,   5795,   5795,
                          5795,   5795,   5795,   5795,   5795,   5795,   5795,
                          5935,   5935,   5935,   5935,   5935,   6949,   6949,
                          6949,   7139,   7140,   7142],
                       [ 63930, 154925,  63930, 154925,  47360, 179780, 263784,
                        263974, 263975, 263977,  82948, 193225, 223741, 237570,
                        255499, 255689, 255690, 255692, 304195, 328332, 328345,
                         38645, 146233, 146275, 179780, 247214,  22365, 113640,
                        146275,  22365,  22365,  22365]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=32, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 32
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.11s/it]
masked_hor: tensor(indices=tensor([[  5388,   5388,   5430,   5430,   5505,   5505,   5505,
                          5505,   5505,   5505,   5795,   5795,   5795,   5795,
                          5795,   5795,   5795,   5795,   5795,   5795,   5795,
                          5935,   5935,   5935,   5935,   5935,   6949,   6949,
                          6949,   7139,   7140,   7142],
                       [ 63930, 154925,  63930, 154925,  47360, 179780, 263784,
                        263974, 263975, 263977,  82948, 193225, 223741, 237570,
                        255499, 255689, 255690, 255692, 304195, 328332, 328345,
                         38645, 146233, 146275, 179780, 247214,  22365, 113640,
                        146275,  22365,  22365,  22365]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=32, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 32
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.12s/it]
epoch:  4 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5388,   5430,   5430,   5505,   5505,   5505,
                          5505,   5505,   5505,   5795,   5795,   5795,   5795,
                          5795,   5795,   5795,   5795,   5795,   5795,   5795,
                          5935,   5935,   5935,   5935,   5935,   6949,   6949,
                          6949,   7139,   7140,   7142],
                       [ 63930, 154925,  63930, 154925,  47360, 179780, 263784,
                        263974, 263975, 263977,  82948, 193225, 223741, 237570,
                        255499, 255689, 255690, 255692, 304195, 328332, 328345,
                         38645, 146233, 146275, 179780, 247214,  22365, 113640,
                        146275,  22365,  22365,  22365]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=32, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 32
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5388,   5388,   5430,   5430,   5505,   5505,   5505,
                          5505,   5505,   5505,   5795,   5795,   5795,   5795,
                          5795,   5795,   5795,   5795,   5795,   5795,   5795,
                          5935,   5935,   5935,   5935,   5935,   6949,   6949,
                          6949,   7139,   7140,   7142],
                       [ 63930, 154925,  63930, 154925,  47360, 179780, 263784,
                        263974, 263975, 263977,  82948, 193225, 223741, 237570,
                        255499, 255689, 255690, 255692, 304195, 328332, 328345,
                         38645, 146233, 146275, 179780, 247214,  22365, 113640,
                        146275,  22365,  22365,  22365]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=32, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 32
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)
size_num_loss 0.0
epoch:  6 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5388,   5430,   5430,   5505,   5505,   5505,
                          5505,   5505,   5505,   5795,   5795,   5795,   5795,
                          5795,   5795,   5795,   5795,   5795,   5795,   5795,
                          5935,   5935,   5935,   5935,   5935,   6949,   6949,
                          6949,   7139,   7140,   7142],
                       [ 63930, 154925,  63930, 154925,  47360, 179780, 263784,
                        263974, 263975, 263977,  82948, 193225, 223741, 237570,
                        255499, 255689, 255690, 255692, 304195, 328332, 328345,
                         38645, 146233, 146275, 179780, 247214,  22365, 113640,
                        146275,  22365,  22365,  22365]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=32, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 32
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:28<00:12,  4.16s/it]
masked_hor: tensor(indices=tensor([[  5388,   5388,   5430,   5430,   5505,   5505,   5505,
                          5505,   5505,   5505,   5795,   5795,   5795,   5795,
                          5795,   5795,   5795,   5795,   5795,   5795,   5795,
                          5935,   5935,   5935,   5935,   5935,   6949,   6949,
                          6949,   7139,   7140,   7142],
                       [ 63930, 154925,  63930, 154925,  47360, 179780, 263784,
                        263974, 263975, 263977,  82948, 193225, 223741, 237570,
                        255499, 255689, 255690, 255692, 304195, 328332, 328345,
                         38645, 146233, 146275, 179780, 247214,  22365, 113640,
                        146275,  22365,  22365,  22365]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=32, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 32
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:33<00:08,  4.15s/it]
epoch:  8 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5388,   5430,   5430,   5505,   5505,   5505,
                          5505,   5505,   5505,   5795,   5795,   5795,   5795,
                          5795,   5795,   5795,   5795,   5795,   5795,   5795,
                          5935,   5935,   5935,   5935,   5935,   6949,   6949,
                          6949,   7139,   7140,   7142],
                       [ 63930, 154925,  63930, 154925,  47360, 179780, 263784,
                        263974, 263975, 263977,  82948, 193225, 223741, 237570,
                        255499, 255689, 255690, 255692, 304195, 328332, 328345,
                         38645, 146233, 146275, 179780, 247214,  22365, 113640,
                        146275,  22365,  22365,  22365]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=32, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 32
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.14s/it]
train modality

100%|##########| 10/10 [00:41<00:00,  4.13s/it]
17
start training
masked_hor: tensor(indices=tensor([[  5388,   5388,   5409,   5409,   5505,   5505,   5753,
                          5753,   5753,   5753,   5753,   5753,   5753,   5935,
                          5935,   5935,   5935],
                       [ 63930, 154883,  63930, 154883,  47360, 179738,  82850,
                        191778, 223782, 237540, 304195, 328345, 328346,  38645,
                        146233, 146254, 179738]]),
       values=tensor([0.8404, 0.7202, 0.6962, 0.7597, 0.6770, 0.7974, 0.7815,
                      0.8287, 0.7544, 0.8092, 0.7702, 0.4056, 0.3576, 0.7339,
                      0.3569, 0.3925, 0.7097]),
       size=(8285, 753935), nnz=17, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([0.8404, 0.7202, 0.6962, 0.7597, 0.6770, 0.7974, 0.7815, 0.8287, 0.7544,
        0.8092, 0.7702, 0.8112, 0.7152, 0.7339, 0.7138, 0.7850, 0.7097],
       grad_fn=<IndexBackward0>)
num_high 17 original num_nodes 17
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(1.2661, grad_fn=<AddBackward0>)
size_num_loss 1.0
  0%|          | 0/10 [00:00<?, ?it/s]
epoch:  0 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5388,   5409,   5409,   5505,   5505,   5753,
                          5753,   5753,   5753,   5753,   5753,   5753,   5935,
                          5935,   5935,   5935],
                       [ 63930, 154883,  63930, 154883,  47360, 179738,  82850,
                        191778, 223782, 237540, 304195, 328345, 328346,  38645,
                        146233, 146254, 179738]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=17, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 17
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.18s/it]
masked_hor: tensor(indices=tensor([[  5388,   5388,   5409,   5409,   5505,   5505,   5753,
                          5753,   5753,   5753,   5753,   5753,   5753,   5935,
                          5935,   5935,   5935],
                       [ 63930, 154883,  63930, 154883,  47360, 179738,  82850,
                        191778, 223782, 237540, 304195, 328345, 328346,  38645,
                        146233, 146254, 179738]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=17, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 17
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:33,  4.19s/it]
epoch:  2 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5388,   5409,   5409,   5505,   5505,   5753,
                          5753,   5753,   5753,   5753,   5753,   5753,   5935,
                          5935,   5935,   5935],
                       [ 63930, 154883,  63930, 154883,  47360, 179738,  82850,
                        191778, 223782, 237540, 304195, 328345, 328346,  38645,
                        146233, 146254, 179738]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=17, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 17
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)


 40%|####      | 4/10 [00:16<00:24,  4.14s/it]
masked_hor: tensor(indices=tensor([[  5388,   5388,   5409,   5409,   5505,   5505,   5753,
                          5753,   5753,   5753,   5753,   5753,   5753,   5935,
                          5935,   5935,   5935],
                       [ 63930, 154883,  63930, 154883,  47360, 179738,  82850,
                        191778, 223782, 237540, 304195, 328345, 328346,  38645,
                        146233, 146254, 179738]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=17, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 17
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.13s/it]
epoch:  4 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5388,   5409,   5409,   5505,   5505,   5753,
                          5753,   5753,   5753,   5753,   5753,   5753,   5935,
                          5935,   5935,   5935],
                       [ 63930, 154883,  63930, 154883,  47360, 179738,  82850,
                        191778, 223782, 237540, 304195, 328345, 328346,  38645,
                        146233, 146254, 179738]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=17, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 17
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5388,   5388,   5409,   5409,   5505,   5505,   5753,
                          5753,   5753,   5753,   5753,   5753,   5753,   5935,
                          5935,   5935,   5935],
                       [ 63930, 154883,  63930, 154883,  47360, 179738,  82850,
                        191778, 223782, 237540, 304195, 328345, 328346,  38645,
                        146233, 146254, 179738]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=17, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 17
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:28<00:12,  4.12s/it]
epoch:  6 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5388,   5409,   5409,   5505,   5505,   5753,
                          5753,   5753,   5753,   5753,   5753,   5753,   5935,
                          5935,   5935,   5935],
                       [ 63930, 154883,  63930, 154883,  47360, 179738,  82850,
                        191778, 223782, 237540, 304195, 328345, 328346,  38645,
                        146233, 146254, 179738]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=17, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 17
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:33<00:08,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5388,   5388,   5409,   5409,   5505,   5505,   5753,
                          5753,   5753,   5753,   5753,   5753,   5753,   5935,
                          5935,   5935,   5935],
                       [ 63930, 154883,  63930, 154883,  47360, 179738,  82850,
                        191778, 223782, 237540, 304195, 328345, 328346,  38645,
                        146233, 146254, 179738]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=17, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 17
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.13s/it]
epoch:  8 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5388,   5409,   5409,   5505,   5505,   5753,
                          5753,   5753,   5753,   5753,   5753,   5753,   5935,
                          5935,   5935,   5935],
                       [ 63930, 154883,  63930, 154883,  47360, 179738,  82850,
                        191778, 223782, 237540, 304195, 328345, 328346,  38645,
                        146233, 146254, 179738]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=17, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 17
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)
size_num_loss 0.0
train modality

100%|##########| 10/10 [00:41<00:00,  4.13s/it]
7
start training
masked_hor: tensor(indices=tensor([[  5505,   5798,   5798,   5798,   5798,   5798,   5798],
                       [179783,  82850, 193977, 223695, 237572, 328345, 328346]]),
       values=tensor([0.7649, 0.7444, 0.7550, 0.7546, 0.5986, 0.3555, 0.4492]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([0.7649, 0.7444, 0.7550, 0.7546, 0.5986, 0.7110, 0.8985],
       grad_fn=<IndexBackward0>)
num_high 7 original num_nodes 7
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(0.4449, grad_fn=<AddBackward0>)
size_num_loss 1.0
  0%|          | 0/10 [00:00<?, ?it/s]
epoch:  0 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5505,   5798,   5798,   5798,   5798,   5798,   5798],
                       [179783,  82850, 193977, 223695, 237572, 328345, 328346]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 7
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.13s/it]
masked_hor: tensor(indices=tensor([[  5505,   5798,   5798,   5798,   5798,   5798,   5798],
                       [179783,  82850, 193977, 223695, 237572, 328345, 328346]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 7
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:32,  4.11s/it]
epoch:  2 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5505,   5798,   5798,   5798,   5798,   5798,   5798],
                       [179783,  82850, 193977, 223695, 237572, 328345, 328346]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 7
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:28,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5505,   5798,   5798,   5798,   5798,   5798,   5798],
                       [179783,  82850, 193977, 223695, 237572, 328345, 328346]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 7
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.12s/it]
epoch:  4 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5505,   5798,   5798,   5798,   5798,   5798,   5798],
                       [179783,  82850, 193977, 223695, 237572, 328345, 328346]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 7
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5505,   5798,   5798,   5798,   5798,   5798,   5798],
                       [179783,  82850, 193977, 223695, 237572, 328345, 328346]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 7
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)


 70%|#######   | 7/10 [00:28<00:12,  4.14s/it]
epoch:  6 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5505,   5798,   5798,   5798,   5798,   5798,   5798],
                       [179783,  82850, 193977, 223695, 237572, 328345, 328346]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 7
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:32<00:08,  4.12s/it]
masked_hor: tensor(indices=tensor([[  5505,   5798,   5798,   5798,   5798,   5798,   5798],
                       [179783,  82850, 193977, 223695, 237572, 328345, 328346]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 7
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.12s/it]
epoch:  8 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5505,   5798,   5798,   5798,   5798,   5798,   5798],
                       [179783,  82850, 193977, 223695, 237572, 328345, 328346]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan]),
       size=(8285, 753935), nnz=7, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 7
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

100%|##########| 10/10 [00:41<00:00,  4.12s/it]
train modality
node_idx: 5854 belonging to  3
  0%|          | 0/10 [00:00<?, ?it/s]
78
start training
masked_hor: tensor(indices=tensor([[  5388,   5409,   5414,   5419,   5424,   5428,   5430,
                          5446,   5466,   5470,   5477,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5854,   5854,
                          5854,   5854,   5854,   5854,   5854,   5854,   5854,
                          5854,   5854,   5854,   5854,   5854,   5854,   5854,
                          5854,   5854,   5854,   5854,   6912,   6912,   6915,
                          6915,   6956,   6956,   6996,   6996,   6996,   7044,
                          7044,   7064,   7064,   7064,   7367,   7367,   7367,
                          7367,   7368,   7368,   7368,   7368,   7859,   7860,
                          7860,   7867,   7888,   7888,   7890,   7890,   7891,
                          7891],
                       [154984, 154984, 154984, 154984, 154984, 154984, 154984,
                        154984, 154984, 154984, 154984, 179839, 263747, 263750,
                        263791, 263831, 263879, 263899, 264202, 264203, 264694,
                        264695, 264702, 264723, 264725, 264726,  82850, 192666,
                        223695, 237615, 255462, 255465, 255506, 255546, 255594,
                        255614, 255917, 255918, 256409, 256410, 256417, 256438,
                        256440, 256441, 328338, 328345,  22424, 146315,  22424,
                        146315,  22424, 146315,  22424, 146233, 146315,  22424,
                        146315,  22424, 146311, 146315,  22424, 146233, 146311,
                        146315,  22424, 146233, 146311, 146315,  22424,  22424,
                        146315,  22424,  22424, 146233,  22424, 146233,  22424,
                        146233]]),
       values=tensor([0.7873, 0.7752, 0.7585, 0.6599, 0.7519, 0.6905, 0.7297,
                      0.6777, 0.7067, 0.7797, 0.7185, 0.6847, 0.0505, 0.0509,
                      0.0504, 0.0539, 0.0557, 0.0519, 0.0511, 0.0532, 0.0505,
                      0.0545, 0.0540, 0.0558, 0.0550, 0.0550, 0.7498, 0.7710,
                      0.7237, 0.7324, 0.0516, 0.0541, 0.0490, 0.0502, 0.0517,
                      0.0558, 0.0529, 0.0512, 0.0529, 0.0504, 0.0485, 0.0544,
                      0.0502, 0.0508, 0.3446, 0.3962, 0.6905, 0.7154, 0.7013,
                      0.7098, 0.7335, 0.7473, 0.7154, 0.3834, 0.3523, 0.7073,
                      0.6847, 0.7322, 0.3645, 0.3759, 0.7280, 0.2617, 0.2472,
                      0.2604, 0.7314, 0.2401, 0.2289, 0.2374, 0.7476, 0.7473,
                      0.6824, 0.7737, 0.7538, 0.7156, 0.6968, 0.7496, 0.6735,
                      0.7042]),
       size=(8285, 753935), nnz=78, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([0.7873, 0.7752, 0.7585, 0.6599, 0.7519, 0.6905, 0.7297, 0.6777, 0.7067,
        0.7797, 0.7185, 0.6847, 0.7075, 0.7131, 0.7062, 0.7544, 0.7795, 0.7260,
        0.7151, 0.7447, 0.7065, 0.7636, 0.7555, 0.7806, 0.7694, 0.7699, 0.7498,
        0.7710, 0.7237, 0.7324, 0.7231, 0.7573, 0.6853, 0.7028, 0.7240, 0.7816,
        0.7410, 0.7175, 0.7406, 0.7060, 0.6793, 0.7612, 0.7025, 0.7117, 0.6891,
        0.7925, 0.6905, 0.7154, 0.7013, 0.7098, 0.7335, 0.7473, 0.7154, 0.7669,
        0.7047, 0.7073, 0.6847, 0.7322, 0.7291, 0.7518, 0.7280, 0.7851, 0.7416,
        0.7811, 0.7314, 0.7203, 0.6868, 0.7122, 0.7476, 0.7473, 0.6824, 0.7737,
        0.7538, 0.7156, 0.6968, 0.7496, 0.6735, 0.7042],
       grad_fn=<IndexBackward0>)
num_high 78 original num_nodes 78
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(5.6820, grad_fn=<AddBackward0>)
size_num_loss 1.0
epoch:  0 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5409,   5414,   5419,   5424,   5428,   5430,
                          5446,   5466,   5470,   5477,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5854,   5854,
                          5854,   5854,   5854,   5854,   5854,   5854,   5854,
                          5854,   5854,   5854,   5854,   5854,   5854,   5854,
                          5854,   5854,   5854,   5854,   6912,   6912,   6915,
                          6915,   6956,   6956,   6996,   6996,   6996,   7044,
                          7044,   7064,   7064,   7064,   7367,   7367,   7367,
                          7367,   7368,   7368,   7368,   7368,   7859,   7860,
                          7860,   7867,   7888,   7888,   7890,   7890,   7891,
                          7891],
                       [154984, 154984, 154984, 154984, 154984, 154984, 154984,
                        154984, 154984, 154984, 154984, 179839, 263747, 263750,
                        263791, 263831, 263879, 263899, 264202, 264203, 264694,
                        264695, 264702, 264723, 264725, 264726,  82850, 192666,
                        223695, 237615, 255462, 255465, 255506, 255546, 255594,
                        255614, 255917, 255918, 256409, 256410, 256417, 256438,
                        256440, 256441, 328338, 328345,  22424, 146315,  22424,
                        146315,  22424, 146315,  22424, 146233, 146315,  22424,
                        146315,  22424, 146311, 146315,  22424, 146233, 146311,
                        146315,  22424, 146233, 146311, 146315,  22424,  22424,
                        146315,  22424,  22424, 146233,  22424, 146233,  22424,
                        146233]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan]),
       size=(8285, 753935), nnz=78, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 78
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 10%|#         | 1/10 [00:04<00:37,  4.13s/it]
masked_hor: tensor(indices=tensor([[  5388,   5409,   5414,   5419,   5424,   5428,   5430,
                          5446,   5466,   5470,   5477,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5854,   5854,
                          5854,   5854,   5854,   5854,   5854,   5854,   5854,
                          5854,   5854,   5854,   5854,   5854,   5854,   5854,
                          5854,   5854,   5854,   5854,   6912,   6912,   6915,
                          6915,   6956,   6956,   6996,   6996,   6996,   7044,
                          7044,   7064,   7064,   7064,   7367,   7367,   7367,
                          7367,   7368,   7368,   7368,   7368,   7859,   7860,
                          7860,   7867,   7888,   7888,   7890,   7890,   7891,
                          7891],
                       [154984, 154984, 154984, 154984, 154984, 154984, 154984,
                        154984, 154984, 154984, 154984, 179839, 263747, 263750,
                        263791, 263831, 263879, 263899, 264202, 264203, 264694,
                        264695, 264702, 264723, 264725, 264726,  82850, 192666,
                        223695, 237615, 255462, 255465, 255506, 255546, 255594,
                        255614, 255917, 255918, 256409, 256410, 256417, 256438,
                        256440, 256441, 328338, 328345,  22424, 146315,  22424,
                        146315,  22424, 146315,  22424, 146233, 146315,  22424,
                        146315,  22424, 146311, 146315,  22424, 146233, 146311,
                        146315,  22424, 146233, 146311, 146315,  22424,  22424,
                        146315,  22424,  22424, 146233,  22424, 146233,  22424,
                        146233]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan]),
       size=(8285, 753935), nnz=78, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 78
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 20%|##        | 2/10 [00:08<00:33,  4.13s/it]
epoch:  2 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5409,   5414,   5419,   5424,   5428,   5430,
                          5446,   5466,   5470,   5477,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5854,   5854,
                          5854,   5854,   5854,   5854,   5854,   5854,   5854,
                          5854,   5854,   5854,   5854,   5854,   5854,   5854,
                          5854,   5854,   5854,   5854,   6912,   6912,   6915,
                          6915,   6956,   6956,   6996,   6996,   6996,   7044,
                          7044,   7064,   7064,   7064,   7367,   7367,   7367,
                          7367,   7368,   7368,   7368,   7368,   7859,   7860,
                          7860,   7867,   7888,   7888,   7890,   7890,   7891,
                          7891],
                       [154984, 154984, 154984, 154984, 154984, 154984, 154984,
                        154984, 154984, 154984, 154984, 179839, 263747, 263750,
                        263791, 263831, 263879, 263899, 264202, 264203, 264694,
                        264695, 264702, 264723, 264725, 264726,  82850, 192666,
                        223695, 237615, 255462, 255465, 255506, 255546, 255594,
                        255614, 255917, 255918, 256409, 256410, 256417, 256438,
                        256440, 256441, 328338, 328345,  22424, 146315,  22424,
                        146315,  22424, 146315,  22424, 146233, 146315,  22424,
                        146315,  22424, 146311, 146315,  22424, 146233, 146311,
                        146315,  22424, 146233, 146311, 146315,  22424,  22424,
                        146315,  22424,  22424, 146233,  22424, 146233,  22424,
                        146233]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan]),
       size=(8285, 753935), nnz=78, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 78
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 30%|###       | 3/10 [00:12<00:28,  4.13s/it]
masked_hor: tensor(indices=tensor([[  5388,   5409,   5414,   5419,   5424,   5428,   5430,
                          5446,   5466,   5470,   5477,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5854,   5854,
                          5854,   5854,   5854,   5854,   5854,   5854,   5854,
                          5854,   5854,   5854,   5854,   5854,   5854,   5854,
                          5854,   5854,   5854,   5854,   6912,   6912,   6915,
                          6915,   6956,   6956,   6996,   6996,   6996,   7044,
                          7044,   7064,   7064,   7064,   7367,   7367,   7367,
                          7367,   7368,   7368,   7368,   7368,   7859,   7860,
                          7860,   7867,   7888,   7888,   7890,   7890,   7891,
                          7891],
                       [154984, 154984, 154984, 154984, 154984, 154984, 154984,
                        154984, 154984, 154984, 154984, 179839, 263747, 263750,
                        263791, 263831, 263879, 263899, 264202, 264203, 264694,
                        264695, 264702, 264723, 264725, 264726,  82850, 192666,
                        223695, 237615, 255462, 255465, 255506, 255546, 255594,
                        255614, 255917, 255918, 256409, 256410, 256417, 256438,
                        256440, 256441, 328338, 328345,  22424, 146315,  22424,
                        146315,  22424, 146315,  22424, 146233, 146315,  22424,
                        146315,  22424, 146311, 146315,  22424, 146233, 146311,
                        146315,  22424, 146233, 146311, 146315,  22424,  22424,
                        146315,  22424,  22424, 146233,  22424, 146233,  22424,
                        146233]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan]),
       size=(8285, 753935), nnz=78, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 78
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 40%|####      | 4/10 [00:16<00:24,  4.13s/it]
epoch:  4 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5409,   5414,   5419,   5424,   5428,   5430,
                          5446,   5466,   5470,   5477,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5854,   5854,
                          5854,   5854,   5854,   5854,   5854,   5854,   5854,
                          5854,   5854,   5854,   5854,   5854,   5854,   5854,
                          5854,   5854,   5854,   5854,   6912,   6912,   6915,
                          6915,   6956,   6956,   6996,   6996,   6996,   7044,
                          7044,   7064,   7064,   7064,   7367,   7367,   7367,
                          7367,   7368,   7368,   7368,   7368,   7859,   7860,
                          7860,   7867,   7888,   7888,   7890,   7890,   7891,
                          7891],
                       [154984, 154984, 154984, 154984, 154984, 154984, 154984,
                        154984, 154984, 154984, 154984, 179839, 263747, 263750,
                        263791, 263831, 263879, 263899, 264202, 264203, 264694,
                        264695, 264702, 264723, 264725, 264726,  82850, 192666,
                        223695, 237615, 255462, 255465, 255506, 255546, 255594,
                        255614, 255917, 255918, 256409, 256410, 256417, 256438,
                        256440, 256441, 328338, 328345,  22424, 146315,  22424,
                        146315,  22424, 146315,  22424, 146233, 146315,  22424,
                        146315,  22424, 146311, 146315,  22424, 146233, 146311,
                        146315,  22424, 146233, 146311, 146315,  22424,  22424,
                        146315,  22424,  22424, 146233,  22424, 146233,  22424,
                        146233]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan]),
       size=(8285, 753935), nnz=78, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 78
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 50%|#####     | 5/10 [00:20<00:20,  4.13s/it]
masked_hor: tensor(indices=tensor([[  5388,   5409,   5414,   5419,   5424,   5428,   5430,
                          5446,   5466,   5470,   5477,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5854,   5854,
                          5854,   5854,   5854,   5854,   5854,   5854,   5854,
                          5854,   5854,   5854,   5854,   5854,   5854,   5854,
                          5854,   5854,   5854,   5854,   6912,   6912,   6915,
                          6915,   6956,   6956,   6996,   6996,   6996,   7044,
                          7044,   7064,   7064,   7064,   7367,   7367,   7367,
                          7367,   7368,   7368,   7368,   7368,   7859,   7860,
                          7860,   7867,   7888,   7888,   7890,   7890,   7891,
                          7891],
                       [154984, 154984, 154984, 154984, 154984, 154984, 154984,
                        154984, 154984, 154984, 154984, 179839, 263747, 263750,
                        263791, 263831, 263879, 263899, 264202, 264203, 264694,
                        264695, 264702, 264723, 264725, 264726,  82850, 192666,
                        223695, 237615, 255462, 255465, 255506, 255546, 255594,
                        255614, 255917, 255918, 256409, 256410, 256417, 256438,
                        256440, 256441, 328338, 328345,  22424, 146315,  22424,
                        146315,  22424, 146315,  22424, 146233, 146315,  22424,
                        146315,  22424, 146311, 146315,  22424, 146233, 146311,
                        146315,  22424, 146233, 146311, 146315,  22424,  22424,
                        146315,  22424,  22424, 146233,  22424, 146233,  22424,
                        146233]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan]),
       size=(8285, 753935), nnz=78, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 78
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 60%|######    | 6/10 [00:24<00:16,  4.16s/it]
epoch:  6 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5409,   5414,   5419,   5424,   5428,   5430,
                          5446,   5466,   5470,   5477,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5854,   5854,
                          5854,   5854,   5854,   5854,   5854,   5854,   5854,
                          5854,   5854,   5854,   5854,   5854,   5854,   5854,
                          5854,   5854,   5854,   5854,   6912,   6912,   6915,
                          6915,   6956,   6956,   6996,   6996,   6996,   7044,
                          7044,   7064,   7064,   7064,   7367,   7367,   7367,
                          7367,   7368,   7368,   7368,   7368,   7859,   7860,
                          7860,   7867,   7888,   7888,   7890,   7890,   7891,
                          7891],
                       [154984, 154984, 154984, 154984, 154984, 154984, 154984,
                        154984, 154984, 154984, 154984, 179839, 263747, 263750,
                        263791, 263831, 263879, 263899, 264202, 264203, 264694,
                        264695, 264702, 264723, 264725, 264726,  82850, 192666,
                        223695, 237615, 255462, 255465, 255506, 255546, 255594,
                        255614, 255917, 255918, 256409, 256410, 256417, 256438,
                        256440, 256441, 328338, 328345,  22424, 146315,  22424,
                        146315,  22424, 146315,  22424, 146233, 146315,  22424,
                        146315,  22424, 146311, 146315,  22424, 146233, 146311,
                        146315,  22424, 146233, 146311, 146315,  22424,  22424,
                        146315,  22424,  22424, 146233,  22424, 146233,  22424,
                        146233]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan]),
       size=(8285, 753935), nnz=78, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 78
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 70%|#######   | 7/10 [00:28<00:12,  4.14s/it]
masked_hor: tensor(indices=tensor([[  5388,   5409,   5414,   5419,   5424,   5428,   5430,
                          5446,   5466,   5470,   5477,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5854,   5854,
                          5854,   5854,   5854,   5854,   5854,   5854,   5854,
                          5854,   5854,   5854,   5854,   5854,   5854,   5854,
                          5854,   5854,   5854,   5854,   6912,   6912,   6915,
                          6915,   6956,   6956,   6996,   6996,   6996,   7044,
                          7044,   7064,   7064,   7064,   7367,   7367,   7367,
                          7367,   7368,   7368,   7368,   7368,   7859,   7860,
                          7860,   7867,   7888,   7888,   7890,   7890,   7891,
                          7891],
                       [154984, 154984, 154984, 154984, 154984, 154984, 154984,
                        154984, 154984, 154984, 154984, 179839, 263747, 263750,
                        263791, 263831, 263879, 263899, 264202, 264203, 264694,
                        264695, 264702, 264723, 264725, 264726,  82850, 192666,
                        223695, 237615, 255462, 255465, 255506, 255546, 255594,
                        255614, 255917, 255918, 256409, 256410, 256417, 256438,
                        256440, 256441, 328338, 328345,  22424, 146315,  22424,
                        146315,  22424, 146315,  22424, 146233, 146315,  22424,
                        146315,  22424, 146311, 146315,  22424, 146233, 146311,
                        146315,  22424, 146233, 146311, 146315,  22424,  22424,
                        146315,  22424,  22424, 146233,  22424, 146233,  22424,
                        146233]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan]),
       size=(8285, 753935), nnz=78, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 78
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 80%|########  | 8/10 [00:33<00:08,  4.13s/it]
epoch:  8 ; loss:  nan ; pred:  tensor([nan, nan, nan, nan], grad_fn=<SoftmaxBackward0>)
masked_hor: tensor(indices=tensor([[  5388,   5409,   5414,   5419,   5424,   5428,   5430,
                          5446,   5466,   5470,   5477,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5505,   5505,
                          5505,   5505,   5505,   5505,   5505,   5854,   5854,
                          5854,   5854,   5854,   5854,   5854,   5854,   5854,
                          5854,   5854,   5854,   5854,   5854,   5854,   5854,
                          5854,   5854,   5854,   5854,   6912,   6912,   6915,
                          6915,   6956,   6956,   6996,   6996,   6996,   7044,
                          7044,   7064,   7064,   7064,   7367,   7367,   7367,
                          7367,   7368,   7368,   7368,   7368,   7859,   7860,
                          7860,   7867,   7888,   7888,   7890,   7890,   7891,
                          7891],
                       [154984, 154984, 154984, 154984, 154984, 154984, 154984,
                        154984, 154984, 154984, 154984, 179839, 263747, 263750,
                        263791, 263831, 263879, 263899, 264202, 264203, 264694,
                        264695, 264702, 264723, 264725, 264726,  82850, 192666,
                        223695, 237615, 255462, 255465, 255506, 255546, 255594,
                        255614, 255917, 255918, 256409, 256410, 256417, 256438,
                        256440, 256441, 328338, 328345,  22424, 146315,  22424,
                        146315,  22424, 146315,  22424, 146233, 146315,  22424,
                        146315,  22424, 146311, 146315,  22424, 146233, 146311,
                        146315,  22424, 146233, 146311, 146315,  22424,  22424,
                        146315,  22424,  22424, 146233,  22424, 146233,  22424,
                        146233]]),
       values=tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
                      nan, nan]),
       size=(8285, 753935), nnz=78, layout=torch.sparse_coo,
       grad_fn=<SparseCooTensorWithDimsAndTensorsBackward0>)
gt_label_node tensor(3, dtype=torch.int32)
mask_without_small tensor([], grad_fn=<IndexBackward0>)
num_high 0 original num_nodes 78
pred_loss tensor(nan, grad_fn=<MulBackward0>)
size_loss tensor(nan, grad_fn=<AddBackward0>)

 90%|######### | 9/10 [00:37<00:04,  4.13s/it]
most important relations 5854:  Counter()
high: [Counter({'abstract': 2}), Counter(), Counter(), Counter()]
100%|##########| 10/10 [00:41<00:00,  4.13s/it]
Traceback (most recent call last):
  File "r.py", line 824, in <module>
    main(n_hops = 2,threshold = 0.5, train=True, name='aifb', prune = True)
  File "r.py", line 594, in main
    df.to_csv('RGCN_stuff/Relations_Important_all.csv', index=False)
  File "/sw/arch/Debian10/EB_production/2021/software/Anaconda3/2021.05/lib/python3.8/site-packages/pandas/core/generic.py", line 3387, in to_csv
    return DataFrameRenderer(formatter).to_csv(
  File "/sw/arch/Debian10/EB_production/2021/software/Anaconda3/2021.05/lib/python3.8/site-packages/pandas/io/formats/format.py", line 1083, in to_csv
    csv_formatter.save()
  File "/sw/arch/Debian10/EB_production/2021/software/Anaconda3/2021.05/lib/python3.8/site-packages/pandas/io/formats/csvs.py", line 228, in save
    with get_handle(
  File "/sw/arch/Debian10/EB_production/2021/software/Anaconda3/2021.05/lib/python3.8/site-packages/pandas/io/common.py", line 642, in get_handle
    handle = open(
FileNotFoundError: [Errno 2] No such file or directory: 'RGCN_stuff/Relations_Important_all.csv'